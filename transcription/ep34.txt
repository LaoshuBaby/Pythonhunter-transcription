[00:00.000 --> 00:06.500] 字幕君听不懂,请点赞,转发,打赏支持明镜与点点栏目
[00:30.000 --> 00:37.680] 各位听众大家好,欢迎来到捕蛇者直播节目
[00:37.680 --> 00:39.880] 我是主播Adam Wen
[00:39.880 --> 00:44.640] 今天我们邀请到了Lac9m和Laptop
[00:44.640 --> 00:48.560] 来和我们一起来聊一聊和项目相关的话题
[00:48.560 --> 00:53.000] 首先请Lac9m和各位听众打一个招呼
[00:53.000 --> 00:55.200] 大家好,我是Lac9m
[00:55.200 --> 01:02.640] 这次做一个co-host来参加这期节目
[01:02.640 --> 01:06.440] 然后是我们本期的嘉宾Laptop
[01:06.440 --> 01:09.640] Laptop可以简单的介绍一下自己
[01:09.640 --> 01:13.840] Hello,大家好,我叫Laptop
[01:13.840 --> 01:17.640] 现在算是一个老年Python开发者
[01:17.640 --> 01:20.840] 目前在,以前在国内也带过一些大公司
[01:20.840 --> 01:25.840] 目前在日本自己开了一家小公司
[01:25.840 --> 01:27.240] 做自己的一些产品
[01:27.240 --> 01:29.440] 同时也有一个远程工作
[01:29.440 --> 01:32.440] 大概就是这样子的
[01:32.440 --> 01:34.640] 欢迎欢迎
[01:34.640 --> 01:36.240] 好,欢迎Laptop
[01:36.240 --> 01:40.440] 对,然后我们本期呢想和Laptop再聊一聊
[01:40.440 --> 01:41.840] 他目前正在做的项目
[01:41.840 --> 01:46.240] 因为刚才他也有提到说他自己目前也有一个自己的公司
[01:46.240 --> 01:47.240] 然后在做项目
[01:47.240 --> 01:49.240] Laptop你能简单和我们说一下
[01:49.240 --> 01:52.839] 你目前主要在做的项目是什么吗
[01:52.839 --> 01:54.039] 目前主要就两个项目
[01:54.039 --> 01:56.240] 一个是OSNAP
[01:56.240 --> 01:57.640] 一个是TypeLog
[01:57.640 --> 02:01.839] OSNAP是一个纯粹的Python库
[02:01.839 --> 02:11.440] 用来做OS,JWT的客户端和服务端
[02:11.440 --> 02:17.440] TypeLog是一个博客加上Podcast的一个host平台
[02:17.440 --> 02:21.440] 目前这个PythonHunter也是在TypeLog上的
[02:23.440 --> 02:26.640] 对,因为我们的博客需要托管
[02:26.640 --> 02:30.040] 目前我们的这个捕蛇者说
[02:30.040 --> 02:32.440] 他是托管在小明的
[02:32.440 --> 02:37.240] 托管在Laptop的这个TypeLog之上
[02:37.240 --> 02:39.640] 对,那我有点好奇
[02:39.640 --> 02:42.640] TypeLog有中文名吗
[02:44.240 --> 02:45.240] 没有
[02:45.240 --> 02:46.240] OK
[02:46.240 --> 02:48.640] TypeLog这个名字
[02:50.640 --> 02:53.240] 这个名字怎么说呢
[02:53.240 --> 02:56.240] 它是Type加Log
[02:56.240 --> 02:58.840] 中间那个1去掉之后
[02:58.840 --> 03:00.840] 合成了一个单词
[03:00.840 --> 03:03.040] 我自己拼出来一个单词吧
[03:04.640 --> 03:06.240] 为什么会叫这个名字
[03:06.240 --> 03:07.240] 对,我也想问
[03:07.240 --> 03:08.240] Type加Log
[03:08.240 --> 03:10.040] Type就是打字嘛
[03:10.040 --> 03:12.440] Log是你的Blog
[03:12.440 --> 03:15.040] 其实也是一种Log
[03:15.040 --> 03:16.440] 因为最开始做出来的时候
[03:16.440 --> 03:17.239] 它其实是一个
[03:18.440 --> 03:19.840] 主要是做Blog的
[03:19.840 --> 03:21.239] 后来才加的Podcast
[03:23.239 --> 03:28.040] 但是TypeLog现在的主要业务是Podcast吗
[03:31.440 --> 03:32.940] 一半一半吧
[03:32.940 --> 03:34.040] 其实你如果要从
[03:35.840 --> 03:37.239] 用户数量来说的话
[03:37.240 --> 03:44.440] 是Blog用户数是大于Podcast的用户数的
[03:44.440 --> 03:49.640] 如果你要从付费的情况下来看的话
[03:49.640 --> 03:51.640] Podcast的付费
[03:51.640 --> 03:53.840] 当然是要大于Blog的付费的
[03:53.840 --> 03:55.440] 就看你怎么看了
[03:55.440 --> 03:58.440] 你是从数量上看还是从收入上看呢
[03:58.440 --> 04:01.840] 我刚问这个问题
[04:01.840 --> 04:03.640] 可能主要是因为我们是
[04:03.640 --> 04:07.040] TypeLog的这种典型的播客用户
[04:07.040 --> 04:08.440] 对
[04:08.440 --> 04:09.840] 然后就比较好奇
[04:09.840 --> 04:12.040] 这个目前的这个行为
[04:13.640 --> 04:17.440] 就是我们是补舌者说是从很早就
[04:17.440 --> 04:20.640] 应该是TypeLog的算是第一批用户吗
[04:20.640 --> 04:22.640] 至少是最先的一批对吧
[04:22.640 --> 04:23.039] 应该是
[04:25.240 --> 04:25.840] 想一下
[04:28.840 --> 04:30.840] 因为那个时候的
[04:32.039 --> 04:36.240] 你们应该获得了一个从Nexi plan转到
[04:36.240 --> 04:39.840] 现在的plan的一个coupon对吧
[04:39.840 --> 04:42.640] 如果有的话那就是一个早期的用户对吧
[04:42.640 --> 04:47.840] 对我们的第一期节目是19年的4月份好像
[04:47.840 --> 04:51.240] 然后从第一期我就是用的TypeLog
[04:51.240 --> 04:54.240] 所以你可以从时间点上来看
[04:54.240 --> 04:55.440] 应该是比较早
[04:55.440 --> 04:56.240] 算是吧
[04:56.240 --> 04:58.640] 但是TypeLog其实做的比这个要早
[04:58.640 --> 04:59.440] 是吗
[04:59.440 --> 05:01.040] 那是什么时候开始做
[05:01.040 --> 05:07.240] 我想想好像是17年
[05:08.240 --> 05:08.640] 哇
[05:08.640 --> 05:09.240] 我得看看
[05:11.040 --> 05:12.040] 可能是17年吧
[05:13.440 --> 05:15.440] 所以17年开始做
[05:15.440 --> 05:18.740] 然后一开始定位是一个这种播客平台
[05:18.740 --> 05:22.940] 然后到19年发现就是有播客这个需求
[05:22.940 --> 05:25.440] 然后你就加了一些这方面的功能是这个样子
[05:25.440 --> 05:26.440] 可以这样理解吗
[05:28.240 --> 05:29.840] 17年的时候
[05:29.840 --> 05:33.840] 17年5月份的时候开始做
[05:33.840 --> 05:34.739] 也不是说开始做吧
[05:34.739 --> 05:37.039] 反正那个时候已经开始在跑了
[05:37.039 --> 05:37.840] 但是他的
[05:38.840 --> 05:41.340] 播客是什么时候做的呢
[05:41.340 --> 05:43.340] 我得想一下
[05:43.340 --> 05:44.539] 播客其实做的也挺早的
[05:44.539 --> 05:44.940] 因为我
[05:45.940 --> 05:49.739] 我播客当时是去哪里啊
[05:49.739 --> 05:53.840] 我估计10月份就开始就有一个播客节目在上面的吧
[05:53.840 --> 05:54.739] 其实可以找一下
[05:57.340 --> 05:57.640] 没事没事
[05:57.640 --> 05:58.840] 有一个用户他
[05:58.840 --> 06:00.140] 这个不重要
[06:00.140 --> 06:02.739] 其实我比较好奇的一点就是
[06:02.739 --> 06:07.440] 就当时你为什么会想到去做一个播客这样的投管平台
[06:07.440 --> 06:10.140] 因为就是在17年的时候
[06:10.140 --> 06:13.640] 播客在国内还没有像今天这样子
[06:13.640 --> 06:15.140] 有很多人很多人做
[06:15.140 --> 06:18.039] 甚至当时都没有几个人知道播客是什么
[06:18.039 --> 06:19.840] 就你当时是怎么样一个想法
[06:22.539 --> 06:23.039] 其实啊
[06:23.039 --> 06:24.840] 当时是有一个
[06:24.840 --> 06:27.840] 播客用户
[06:27.840 --> 06:30.539] 他有一个要做播客的需求
[06:31.940 --> 06:33.239] 我当时就
[06:33.239 --> 06:36.039] 我当时就想着
[06:36.039 --> 06:41.340] 要不然给每个播客还能够让他自己再附带一个播客功能
[06:41.340 --> 06:43.340] 所以你看现在的整个逻辑
[06:44.940 --> 06:46.739] 其实你创建起来那个site
[06:46.739 --> 06:49.239] 它本身它是一个
[06:49.239 --> 06:52.640] 你要填的其实是一个播客的信息
[06:52.640 --> 06:56.340] 你的播客是要你的podcast其实是要另外去填信息的
[06:58.039 --> 06:58.740] 你有没有发现
[07:00.539 --> 07:02.240] 我们是有两个setting的
[07:02.240 --> 07:05.539] 一个setting是一个setting是site的setting
[07:05.539 --> 07:07.440] 那个site的setting主要
[07:07.440 --> 07:10.539] 最开始主要用处就是给blog用的
[07:10.539 --> 07:12.440] 但是podcast它的setting会比较多
[07:12.440 --> 07:15.240] 所以说额外加一个setting
[07:15.240 --> 07:17.340] 所以你就能够看到我们这个产品的逻辑
[07:17.340 --> 07:19.539] 它是最开始是有一个
[07:19.539 --> 07:20.740] 最开始是用于blog
[07:20.740 --> 07:22.840] 后来才加podcast的
[07:22.840 --> 07:24.040] 我有看到就是我
[07:24.040 --> 07:27.140] 我看一下我们补舌指说在type log的后台
[07:27.140 --> 07:29.140] 就是站点是有两个的
[07:29.140 --> 07:31.340] 一个打了一个播客的type
[07:31.340 --> 07:32.940] 一个打了一个播客的type
[07:32.940 --> 07:33.940] 你说是这个
[07:36.340 --> 07:37.840] 这我一直还觉得有点奇怪
[07:37.840 --> 07:39.040] 不过你这么一解释
[07:39.040 --> 07:40.540] 我就能理解了
[07:40.540 --> 07:42.840] 对它是个历史遗留问题
[07:44.640 --> 07:45.040] 是
[07:45.040 --> 07:51.440] 那就你还记得当初第一个用type log来host播客的
[07:51.440 --> 07:53.140] 这个节目是什么吗
[07:54.740 --> 07:57.140] 我记得的叫Nilokita
[07:57.140 --> 08:01.140] 这个链接我可以发给你们
[08:01.140 --> 08:02.740] 都没有听说过
[08:02.740 --> 08:05.440] 这是一个中文播客吗
[08:06.940 --> 08:07.440] 对的
[08:09.540 --> 08:10.940] 它现在还在更新吗
[08:11.540 --> 08:12.840] 应该挺小众的
[08:12.840 --> 08:15.640] 我们可以发录一下
[08:17.739 --> 08:18.539] 它是一个
[08:19.640 --> 08:20.140] 怎么说呢
[08:20.140 --> 08:24.039] 写实上面的写实上面搞进来的人
[08:24.039 --> 08:26.140] 其实我也不是很了解
[08:26.140 --> 08:28.440] 最后一期是19年2月份
[08:28.440 --> 08:30.739] 已经断更了一年多了
[08:30.739 --> 08:38.240] 对但是你可以看到它的那个更新是在17年8月5号
[08:38.240 --> 08:39.939] 这个是第一期
[08:39.940 --> 08:45.440] 也就是说我8月份就做的是已经可以开始用了
[08:45.440 --> 08:45.940] 挺有意思
[08:45.940 --> 08:50.340] 又了解到一个这个非常早的播客节目
[08:50.340 --> 08:50.540] 好了
[08:50.540 --> 08:52.740] 我们还是再继续聊聊项目吧
[08:54.540 --> 08:55.740] 好啊
[08:55.740 --> 08:57.740] 能简单介绍一下另外一个项目吗
[08:57.740 --> 08:59.540] 就是offlabe
[08:59.540 --> 09:02.840] 对就是可能给听众一个概念
[09:02.840 --> 09:05.040] 对就是它是一个做认证相关的库
[09:05.040 --> 09:10.140] 然后为什么它会是一个公司级别的项目
[09:11.640 --> 09:12.439] offlabe的话
[09:12.439 --> 09:15.040] 你如果说只是只是说
[09:17.240 --> 09:19.740] 得看你怎么理解这个认证了
[09:19.740 --> 09:21.439] 如果说你自己
[09:21.439 --> 09:25.140] 你自己的网站需要用到谷歌登录
[09:25.140 --> 09:26.939] 用到Github登录
[09:26.939 --> 09:29.040] 那当然是不行的
[09:29.040 --> 09:30.040] 但是呢
[09:30.040 --> 09:35.640] 如果说这个库是你用来写谷歌
[09:35.640 --> 09:38.339] 它提供这个登录谷歌的这个服务
[09:38.339 --> 09:40.040] 或者是Github的这个服务的话
[09:40.040 --> 09:42.839] 它就能够到一个企业
[09:42.839 --> 09:44.439] 企业级这个概念上去了
[09:45.740 --> 09:47.740] 所以我理解这个
[09:47.740 --> 09:48.540] 你说你说
[09:48.540 --> 09:51.939] 这个offlabe它可能是说
[09:51.939 --> 09:56.439] 我是作为比如说像oauth这种的服务提供方
[09:56.440 --> 10:02.040] 然后可能对offlabe的需求会更大一些
[10:02.040 --> 10:03.040] 需求量来说呢
[10:03.040 --> 10:05.940] 当然是做client的人会更多一点
[10:05.940 --> 10:08.640] 就是说他需要去接入Github登录
[10:08.640 --> 10:10.140] 接入谷歌登录
[10:10.140 --> 10:11.640] 接入Twitter登录
[10:11.640 --> 10:14.040] 这样的人会更多一点
[10:14.040 --> 10:18.340] 你如果说是要去做提供做provider的话
[10:18.340 --> 10:21.140] 这种情况其实会更少一点
[10:22.740 --> 10:24.440] 我比较好奇的一个点是
[10:24.440 --> 10:28.740] 就是它解决的主要痛点是什么
[10:28.740 --> 10:31.440] 就是你能不能用一两句话概括一下
[10:31.440 --> 10:37.540] 就是能够帮你去完成你编写oauth provider的
[10:37.540 --> 10:38.640] 这个整个过程
[10:38.640 --> 10:41.440] 因为oauth它是一个很复杂的东西
[10:41.440 --> 10:44.940] 但你刚刚不是说大部分人都是做把它当client来用吗
[10:44.940 --> 10:46.140] 就是做provider
[10:46.140 --> 10:50.240] 大部分人是只需要client的这部分功能吗
[10:51.440 --> 10:53.040] 这部分人其实是
[10:53.040 --> 10:56.740] 你不可能是从这部分人去获取收入的
[10:56.740 --> 11:00.339] 你获取收入的情况一定是一个大公司
[11:00.339 --> 11:03.339] 这个公司它需要写provider
[11:03.339 --> 11:04.939] 同时他也在用password
[11:04.939 --> 11:07.839] 他需要用password来写上一个oauth provider
[11:07.839 --> 11:10.939] 这样的公司才是属于我的客户
[11:12.040 --> 11:13.740] 那是不是举个例子
[11:13.740 --> 11:14.140] 就是这样
[11:14.140 --> 11:16.339] 比如说我这家公司就是叫
[11:16.339 --> 11:17.740] 就比如说就是荒版公司了
[11:17.740 --> 11:19.240] 然后因为我在玩2077
[11:19.240 --> 11:23.640] 然后说他要提供一个sso的登录
[11:23.640 --> 11:27.540] 比如说让别人能用这个他这个
[11:27.540 --> 11:29.340] 其实oauth不仅仅是登录的
[11:29.340 --> 11:32.140] oauth不仅仅是个登录的事情
[11:32.140 --> 11:35.140] 登录只是其中一点
[11:35.140 --> 11:36.840] 重要的是一个提供资源
[11:36.840 --> 11:38.440] 提供API认证
[11:39.040 --> 11:44.340] 比如说你要去访问你的访问Github的话
[11:44.340 --> 11:45.740] 访问Github的一些资源
[11:45.740 --> 11:48.040] 比如说你做了一个应用是吧
[11:48.040 --> 11:51.140] 这个应用你绑定了我的Github之后
[11:51.140 --> 11:53.439] 你就可以访问到我的Github的一些信息
[11:53.439 --> 11:57.439] 访问到我的我的repository
[11:57.439 --> 11:59.839] 访问到我的follower这些信息
[11:59.839 --> 12:02.140] 这些信息他就有一个API
[12:02.140 --> 12:03.439] 这个API的话
[12:03.439 --> 12:07.640] 你访问这个API的时候不是要提供一个认证吗
[12:07.640 --> 12:10.040] 这个认证就是有oauth去做的
[12:10.040 --> 12:12.140] 那我大概理解
[12:12.140 --> 12:13.740] 那oauth这个流程就是说
[12:13.740 --> 12:19.240] 给你发一个这样就是你的客户端
[12:19.240 --> 12:20.840] 你的理解的客户端
[12:20.840 --> 12:25.740] 跟我的服务端之间进行了一个交互
[12:25.740 --> 12:28.440] 于是我服务端就发了一个token给你
[12:28.440 --> 12:31.540] 你就可以用这个token去访问我
[12:31.540 --> 12:36.140] 提供给你的一些资源信息
[12:36.140 --> 12:37.440] 提供给你的一些API
[12:39.740 --> 12:41.140] 是这样子的一个东西
[12:41.140 --> 12:42.340] 具体的话
[12:42.340 --> 12:46.240] 你其实要去了解oauth这一套概念的话
[12:46.240 --> 12:47.240] 我觉得还是蛮复杂的
[12:47.240 --> 12:48.140] 因为oauth的话
[12:48.140 --> 12:52.240] 它现在的RFC有非常多
[12:52.240 --> 12:55.540] 我现在已经实现了绝大部分
[12:55.540 --> 12:58.040] 但是还有一些还是没有实现的
[12:58.040 --> 12:59.540] 它为啥会这么复杂呢
[12:59.540 --> 13:02.940] 就是我就是就是因为我不懂oauth
[13:02.940 --> 13:05.440] 我也没有看过RFC也没有实现过
[13:05.440 --> 13:06.240] 但我就是好奇
[13:06.240 --> 13:08.340] 为什么它会这么复杂呢
[13:08.340 --> 13:11.040] 就是就是就是它还有很多RFC
[13:11.040 --> 13:14.540] 为什么听起来对oauth的话
[13:15.640 --> 13:17.439] 你要说简单
[13:17.439 --> 13:18.540] 它也可以很简单
[13:18.540 --> 13:22.040] 它只有两个RFC就可以开始正常工作了
[13:23.240 --> 13:24.540] 你要说复杂的话
[13:24.540 --> 13:29.140] 那是因为oauth1是一个比较简单的东西
[13:29.140 --> 13:30.839] oauth1它叫一个protocol
[13:30.839 --> 13:32.339] 它其实是种协议
[13:32.339 --> 13:33.939] oauth2的话它是什么呢
[13:33.939 --> 13:34.939] 它是一个framework
[13:37.339 --> 13:38.740] 对因为它是个framework
[13:38.740 --> 13:41.540] 所以说它是一个可扩展的东西
[13:41.540 --> 13:43.440] 很多东西在往里面扩展
[13:43.440 --> 13:44.440] 在往里面加东西
[13:46.240 --> 13:46.940] 举个例子
[13:48.640 --> 13:49.940] 举个例子
[13:49.940 --> 13:53.640] 默认的最开始的时候是有四种认证方式的
[13:55.140 --> 14:00.240] 我们平时对我们平时说的什么
[14:00.240 --> 14:01.640] 谷歌登录啊
[14:01.640 --> 14:02.540] Github登录啊
[14:02.540 --> 14:04.740] 这个通常来说它走的叫做
[14:04.740 --> 14:09.540] authorization code这个认证方式
[14:10.640 --> 14:12.540] 在默认的里面还有好几种
[14:12.540 --> 14:14.640] 有implicity
[14:14.640 --> 14:16.540] 有password
[14:16.540 --> 14:18.440] 还有个client credential
[14:18.440 --> 14:19.440] 这样几种方式
[14:20.440 --> 14:21.140] 但是后来呢
[14:21.140 --> 14:23.840] 又会有一些新的认证协议往里面加
[14:25.040 --> 14:27.940] 比如说有个JWT
[14:27.940 --> 14:30.340] 那个Barry token这样一个东西
[14:30.340 --> 14:31.340] 这是一个
[14:31.340 --> 14:34.940] 这是另外一种认证方式
[14:34.940 --> 14:38.140] 谷歌的service account
[14:38.140 --> 14:39.240] 你知不知道
[14:39.240 --> 14:40.440] 在公司里用过
[14:40.440 --> 14:43.140] 但我不知道你跟你说的这个是不是一个东西
[14:43.140 --> 14:45.440] 你如果用的那个Google cloud的话
[14:45.440 --> 14:49.540] 其实很多东西都要用到那个service account
[14:49.540 --> 14:52.640] 这个service account就是我刚刚说的那个JWT
[14:52.640 --> 14:55.440] Barry token这一套协议里面的
[14:55.440 --> 14:57.240] 如果我没记错的话
[14:57.240 --> 14:58.140] 它应该是
[14:59.540 --> 15:00.940] 我也不用去记错了
[15:00.940 --> 15:03.340] 我去给你找一下就知道了
[15:03.340 --> 15:05.140] 它是哪个协议呢
[15:06.440 --> 15:07.940] 就反正有很多种协议嘛
[15:07.940 --> 15:08.140] 对吧
[15:08.140 --> 15:10.540] 就是大概理解的意思
[15:10.540 --> 15:12.040] 那现在大概有多少种呢
[15:12.040 --> 15:12.940] 就你要把它们都
[15:12.940 --> 15:14.140] 反正就是理想情况下
[15:14.140 --> 15:15.140] 你要都实现一遍
[15:15.140 --> 15:17.540] 然后才
[15:17.540 --> 15:17.940] 是的
[15:17.940 --> 15:19.740] 理想情况下是要都实现
[15:19.740 --> 15:22.240] 我刚刚说的其实谷歌的这一套的话
[15:23.540 --> 15:26.740] 它是一个更企业级的服务
[15:26.740 --> 15:27.640] 因为这一套里面
[15:28.740 --> 15:30.640] 它没有一个人的交互
[15:30.640 --> 15:36.040] 它其实是一个server对server的一个发认真的一个交互
[15:36.040 --> 15:37.240] 所以它叫service
[15:37.240 --> 15:38.939] 所以谷歌那边叫service account
[15:40.939 --> 15:44.840] 就我还是有一个接着问题比较好
[15:44.840 --> 15:49.939] 就是就是你说他这些有很多种的这种协议
[15:49.939 --> 15:50.640] 你要支持
[15:50.640 --> 15:53.740] 但是就是说这种协议
[15:53.740 --> 15:56.740] 难道说没有没有已经存在的库吗
[15:56.740 --> 15:58.939] 比如说我就要做一个通信的库
[15:58.940 --> 16:00.840] 那我可能要支持grpc
[16:00.840 --> 16:01.840] 我要支持websocket
[16:01.840 --> 16:05.940] 那我就可以就直接依赖grpc和websocket的python库
[16:05.940 --> 16:07.440] 然后在上面封装一下
[16:07.440 --> 16:08.240] 差不多就可以了
[16:08.240 --> 16:11.940] 就是你这个并不是这种情况是没有
[16:11.940 --> 16:15.240] 但其实之前是有一个的叫做ooslab
[16:15.240 --> 16:18.140] 就就我这个库里面前面加个o
[16:18.140 --> 16:19.040] 这个是一个
[16:20.940 --> 16:24.340] 这个是一个也是跟我一个类似的一个库
[16:24.340 --> 16:26.340] 它比我写的要很早
[16:26.340 --> 16:30.040] 我之前做了一个叫做flask ooslab的
[16:30.040 --> 16:30.940] 也是干这个事情的
[16:30.940 --> 16:34.340] 也是提供provider提供client给flask用的
[16:36.040 --> 16:38.040] 后来为什么自己要去写这个呢
[16:38.040 --> 16:38.940] 那实在是因为
[16:40.340 --> 16:44.440] ooslab这个库的代码一个是代码不太好
[16:44.440 --> 16:46.040] 就整个整个结构不太好
[16:46.040 --> 16:48.240] 第二个是它很不好扩展
[16:49.540 --> 16:53.340] 它的东西都都是绑在一起的
[16:53.340 --> 16:55.640] 我觉得怎么说呢
[16:55.640 --> 16:57.040] oos2它是一个framework
[16:58.640 --> 17:01.040] 因为它这个framework所以它非常灵活
[17:01.040 --> 17:04.139] 你这样子把代码全部运回在一起的话
[17:04.139 --> 17:06.139] 就就特别很特别难扩展
[17:07.940 --> 17:09.740] 反正就别人写的比较垃圾
[17:09.740 --> 17:11.839] 然后所以我实现了一个更好的是这个意思
[17:11.839 --> 17:13.339] 你也不能说写的比较垃圾
[17:13.339 --> 17:14.839] 在当时那个时候
[17:14.839 --> 17:17.440] 我觉得是属于很好的
[17:17.440 --> 17:18.839] 我当时也说了
[17:18.839 --> 17:22.339] 我当时也是很推崇这个库的
[17:22.339 --> 17:25.939] 所以我才去给他写了flask的实现
[17:27.639 --> 17:28.040] 可是
[17:30.139 --> 17:30.840] 可是当我去
[17:32.240 --> 17:34.840] 去真正的去了解这一个东西的时候
[17:34.840 --> 17:39.240] 因为我写flask的这个库的时候就碰到了很多问题
[17:39.240 --> 17:41.139] 它的那个整个API设计
[17:42.639 --> 17:43.540] 就不太友好
[17:43.540 --> 17:47.540] 我我写起来就觉得特别别扭
[17:47.540 --> 17:50.540] 所以我重新去设计这个这个东西的
[17:50.540 --> 17:52.639] 当然他写的实现的协议也特别少
[17:52.639 --> 17:54.240] 就没有我实现的那么多
[17:54.240 --> 17:55.440] 因为就是因为他不好扩展
[17:55.440 --> 17:59.940] 所以他很难迅速的去实现一个新的协议
[18:01.040 --> 18:01.740] 理解
[18:01.740 --> 18:03.639] 我写这个库的时候
[18:03.639 --> 18:05.040] 我是怎么做的呢
[18:05.040 --> 18:06.540] 我写这个
[18:06.540 --> 18:10.139] 我写这个库的时候就内置了flask和jungle
[18:10.139 --> 18:10.639] 这样的话
[18:10.639 --> 18:12.540] 当我去设计API的时候
[18:12.540 --> 18:12.639] 哎
[18:12.640 --> 18:20.640] 我就知道怎样的API设计是更利于framework去接入的
[18:20.640 --> 18:24.440] 因为flask和jungle其实刚好是两个不太一样的一个框架
[18:27.240 --> 18:30.140] jungle其实跟很多的其他框架是特别像的
[18:30.140 --> 18:33.440] 它都会接受一个request参数
[18:33.440 --> 18:38.340] 但是flask是另外一个是比较另类的东西
[18:38.340 --> 18:39.940] 它request参数不是传进来的
[18:39.940 --> 18:43.940] 所以它们两个设计上会有很大的不同
[18:45.740 --> 18:47.940] API的话
[18:47.940 --> 18:50.240] 你得想办法去这样去设计
[18:50.240 --> 18:53.840] 让它的API特别容易在两个框架中都可以使用
[18:55.840 --> 18:58.040] API设计确实是门学问
[18:59.540 --> 19:02.640] 那温老师你刚才是要问什么问题来着
[19:04.140 --> 19:05.540] 我这个还挺好奇的
[19:05.540 --> 19:10.340] 就是因为刚才小明有聊到说
[19:10.340 --> 19:13.040] 虽然大部分用户在用client
[19:13.040 --> 19:21.040] 但是其实主要的这个就是我们的这个收入是靠这个提供provider的这些能力
[19:21.040 --> 19:22.940] 然后来获得的
[19:22.940 --> 19:26.340] 但是我看oslib是一个纯开源的项目
[19:28.139 --> 19:29.139] 对
[19:29.139 --> 19:29.540] 对
[19:29.540 --> 19:31.840] 然后那我还挺好奇的
[19:31.840 --> 19:35.340] 就是如何做这种开源的商业化
[19:35.340 --> 19:38.240] 这个事情我其实没有做好
[19:38.240 --> 19:40.439] 所以我明年的
[19:40.439 --> 19:43.639] 其实我最近这段时间其实在努力去想
[19:43.639 --> 19:45.439] 然后去改善这个情况
[19:45.439 --> 19:47.540] 虽然说我当时做出来的时候
[19:47.540 --> 19:50.240] 一开始其实就已经获得了一个客户
[19:52.139 --> 19:53.740] 18年的时候
[19:53.740 --> 19:57.939] 18年的时候就已经获得了一个很早期的一个客户
[19:57.939 --> 20:02.139] 一直到现在都还在付费给我
[20:02.140 --> 20:05.640] 就是每年有1000刀的那个license
[20:05.640 --> 20:07.940] 你看我的license里面是有两种license的
[20:07.940 --> 20:09.440] 一种是商业license
[20:09.440 --> 20:12.040] 一种是open source license
[20:12.040 --> 20:16.240] 这个open source license是以前是GPL
[20:16.240 --> 20:18.140] LGPL
[20:18.140 --> 20:18.940] 哪一种GPL
[20:18.940 --> 20:20.740] 反正以前是某一种GPL的
[20:20.740 --> 20:21.640] AGPL
[20:21.640 --> 20:23.040] 现在呢
[20:23.040 --> 20:24.940] 后来又把它改成BSD了
[20:24.940 --> 20:27.540] 是因为有人去提到这个license的问题
[20:27.540 --> 20:30.740] 这样会导致我的库被使用的人比较少
[20:30.740 --> 20:32.940] 如果我坚持使用GPL的话
[20:32.940 --> 20:35.440] 可能使用的人会比较少
[20:35.440 --> 20:37.240] 所以说我又把它改成BSD了
[20:37.240 --> 20:38.240] 如果结果
[20:38.240 --> 20:39.240] 如果你改成BSD的话
[20:39.240 --> 20:42.640] 那么就其实在协议上就少了这个约束了
[20:42.640 --> 20:44.040] 所有人其实都可以用了
[20:44.040 --> 20:46.140] 它其实是可以不用去付费来使用的
[20:47.840 --> 20:49.440] 对这就是个矛盾的问题
[20:49.440 --> 20:51.940] 就是说如果要付费就用的人少
[20:51.940 --> 20:54.040] 让开源的话就完全
[20:54.040 --> 20:56.340] 那个协议宽松的话又没有人付费
[20:57.840 --> 21:00.440] 协议宽松其实现在还是有人在付费的
[21:00.440 --> 21:02.040] 我以前这个早期用户在付费
[21:02.040 --> 21:04.140] 后来也有
[21:04.140 --> 21:06.440] 当然我现在的付费客户比较少
[21:07.540 --> 21:11.240] 但是呢有有一个地方还是值得一提的
[21:11.240 --> 21:14.940] 因为其中有个客户是Hulu
[21:14.940 --> 21:15.940] 你知道Hulu吧
[21:15.940 --> 21:17.040] 对我知道
[21:17.040 --> 21:17.640] 我知道
[21:17.640 --> 21:18.040] 哦对
[21:19.440 --> 21:21.240] 我现在其实有个客户是Hulu
[21:22.740 --> 21:23.040] 我
[21:24.140 --> 21:29.540] 我的开源的东西和付费的这个license之间的区别
[21:29.540 --> 21:32.840] 目前仅仅仅有的区别就是说
[21:35.340 --> 21:38.940] 他们可以加入到我的安全安全列表里面
[21:38.940 --> 21:42.340] 我有那个安全问题的时候
[21:42.340 --> 21:45.440] 我会写信通知他们
[21:45.440 --> 21:46.740] 写信通知他们之后
[21:46.740 --> 21:47.940] 我会发一个
[21:49.340 --> 21:54.340] 修复的版本到我的一个private PIP里面
[21:54.340 --> 21:56.040] 我有一个private PIP
[21:58.840 --> 21:59.440] 这样的话
[21:59.440 --> 22:02.440] 他们就能够及时的去更新这个安全问题
[22:03.440 --> 22:06.740] 这是目前的一个额外的额外的服务
[22:08.440 --> 22:10.440] 可是这一点是不够吸引人的
[22:11.640 --> 22:14.440] 所以我目前正在做的做的另外一点是提供
[22:15.840 --> 22:19.240] 付费的一个内容给别人用
[22:19.240 --> 22:21.240] 我正在做一个付费的package
[22:21.240 --> 22:27.040] 这个package的话就会让你更方便的去实现这个provider
[22:27.040 --> 22:27.940] 我目前的这个
[22:27.940 --> 22:31.340] OSNAP它是一个比较通用的
[22:32.440 --> 22:35.840] 它是去为了去实现这些协议而写的
[22:38.340 --> 22:41.840] 比较偏向于更基础的实现吧
[22:41.840 --> 22:46.240] 那么我现在要做的事情就提供一个更高层的实现
[22:46.240 --> 22:47.540] 这个高层的实现呢
[22:47.540 --> 22:50.340] 它是要提供UI的
[22:50.340 --> 22:54.740] 有UI其实才方便你去购买
[22:54.740 --> 23:01.940] 你的很多底层东西是很难去卖给别人的
[23:01.940 --> 23:03.340] 一般能够卖给别人的
[23:04.040 --> 23:06.540] 我觉得一个很大的特点就是说
[23:07.540 --> 23:08.240] 它的UI
[23:09.640 --> 23:11.840] 你要提供一个给别人看得到的东西
[23:11.840 --> 23:16.640] 这样的话别人的购买欲望可能才会更强烈
[23:17.340 --> 23:20.140] 对我我觉得我很同意
[23:20.140 --> 23:22.040] 就是刚才那个描述是说
[23:22.040 --> 23:24.540] 未来它会变成一个解决方案是吗
[23:24.540 --> 23:27.340] 我听起来是一整套的东西
[23:27.340 --> 23:28.040] 不是的
[23:28.040 --> 23:32.340] 我现在写的一个东西是给Jungle用的
[23:32.340 --> 23:35.740] 我发现Jungle的东西是特别容易去写的
[23:35.740 --> 23:36.940] Jungle的东西写出来之后
[23:36.940 --> 23:39.740] 别人就可以直接安装之后就可以使用了
[23:39.740 --> 23:42.440] 但是Flask在这一方面很难做到
[23:43.639 --> 23:47.940] 在数据库这一层就已经被一锅人打死了
[23:47.940 --> 23:49.740] 如果我要去实现Flask的话
[23:49.740 --> 23:51.139] 我可能最多实现一个
[23:51.140 --> 23:55.440] 给他们做一个完整的有UI界面的demo
[23:55.440 --> 24:00.140] 他们可以直接拿着这个demo去继续写下去
[24:00.140 --> 24:02.840] 但是写Jungle就不是这样子了
[24:02.840 --> 24:03.940] Jungle写完之后
[24:03.940 --> 24:06.540] 可能就是做一点配置
[24:06.540 --> 24:09.240] 它就可以自己运行起来了
[24:09.240 --> 24:10.240] 比你还带上UI的
[24:11.340 --> 24:13.740] 所以它这个就相当于是说
[24:13.740 --> 24:14.640] 比如说我有个用户
[24:14.640 --> 24:16.840] 我想有这样一个UI
[24:16.840 --> 24:18.840] 然后我付钱
[24:18.840 --> 24:25.439] 然后我就可以从你的私有的PiPi去下载这样的一个package
[24:25.439 --> 24:28.139] 然后它是这个UI的部分对吧
[24:28.139 --> 24:29.040] 然后那个
[24:29.040 --> 24:30.439] 它不是UI的部分
[24:30.439 --> 24:33.740] 它其实是一个整个框架的一个
[24:33.740 --> 24:35.840] 我现在的这个OSnap里面
[24:35.840 --> 24:37.840] 它其实是有一个框架的实现的
[24:37.840 --> 24:39.040] 但是这套框架实现
[24:39.040 --> 24:41.639] 它只是做了一个接口对接
[24:41.639 --> 24:47.639] 它没有去实现数据库
[24:47.640 --> 24:49.640] 当然我里面有个数据库的设计
[24:49.640 --> 24:51.740] 要教给大家去怎么去设计这个数据库
[24:51.740 --> 24:54.840] 但是没有真实的代码在里面
[24:54.840 --> 24:57.240] 没有去完成整个逻辑
[24:57.240 --> 25:00.440] 你得自己去把那些逻辑给它填充
[25:00.440 --> 25:02.440] 那我这个要做的事情就是
[25:02.440 --> 25:05.440] 就是直接给你做好了一个app
[25:05.440 --> 25:06.640] 你可以直接拿来用
[25:06.640 --> 25:08.040] 你安装之后就可以直接用了
[25:08.040 --> 25:09.240] 就是一个Jungle的app吗
[25:09.240 --> 25:10.240] 说白了
[25:10.240 --> 25:10.840] 对
[25:10.840 --> 25:11.240] 是的
[25:11.240 --> 25:11.840] 就是一个Jungle的app
[25:11.840 --> 25:14.040] 你可以直接安装好就可以直接用了
[25:14.040 --> 25:14.940] 这样的话
[25:14.940 --> 25:19.640] 我觉得这个东西就比较容易去卖了
[25:19.640 --> 25:21.840] 然后刚说的UI
[25:21.840 --> 25:23.640] 我猜只是我猜测
[25:23.640 --> 25:25.740] 是不是相当于是我可以在UI上
[25:25.740 --> 25:27.740] 直接设置某些接口的权限
[25:27.740 --> 25:30.640] 然后类似的这些功能
[25:30.640 --> 25:31.640] 因为我的app都已经这样了
[25:31.640 --> 25:32.140] 这个不是
[25:32.140 --> 25:34.140] 这个不是
[25:34.140 --> 25:36.140] 这个UI就是说
[25:36.140 --> 25:37.640] 你不用再去写那些页面了
[25:37.640 --> 25:39.340] 因为它其实认证的话
[25:39.340 --> 25:41.840] 有很多界面需要你去写的
[25:41.840 --> 25:45.240] 那么我就帮你全部写好了
[25:45.240 --> 25:47.040] 你如果觉得这个UI可以的话
[25:47.040 --> 25:47.740] 你就可以直接用
[25:47.740 --> 25:48.639] 如果你觉得不可以的话
[25:48.639 --> 25:50.840] 你就稍微稍微修改一下就好了
[25:50.840 --> 25:53.740] 这个页面是什么
[25:53.740 --> 25:54.639] 你能举个例子吗
[25:54.639 --> 25:56.439] 就比如说是一个按钮吗
[25:56.439 --> 25:57.639] 意思是还是什么
[25:57.639 --> 26:04.040] 比如说你去登录Github的话
[26:04.040 --> 26:05.439] 那么Github的话
[26:05.439 --> 26:08.540] 它上面就会给你提供
[26:08.540 --> 26:12.040] 你要登录的app的一些信息
[26:12.040 --> 26:13.340] 这个app是由谁做的
[26:13.340 --> 26:15.139] 它访问的哪些权限
[26:15.139 --> 26:17.639] 你是授权同意还是拒绝
[26:17.639 --> 26:20.540] 比如说这样一个界面
[26:20.540 --> 26:24.740] 但其实它不仅仅只有这样一个界面
[26:24.740 --> 26:28.139] 这只是其中的一种最普通的界面
[26:28.139 --> 26:30.040] 就反正就是说
[26:30.040 --> 26:33.340] 我大概理解你说什么意思
[26:33.340 --> 26:35.340] 那这样的话
[26:35.340 --> 26:36.240] 对而且听起来
[26:36.240 --> 26:40.040] 因为你是给企业级用户用
[26:40.040 --> 26:42.440] 还可以给他们比如说
[26:42.440 --> 26:47.140] 因为OAuth往往还要在上面去新建一些app
[26:47.140 --> 26:50.040] 对然后比如说app的这种审批管理
[26:50.040 --> 26:52.540] 这些应该也会一件事的解决
[26:52.540 --> 26:58.440] 对也会在里面
[26:58.440 --> 26:59.340] 挺好
[26:59.340 --> 27:02.540] 这个大概你打算什么时候launch呢
[27:02.540 --> 27:05.440] 目前还在
[27:05.440 --> 27:10.240] 我得等到明年先把OAuth的1.0给发布出来
[27:10.240 --> 27:11.540] 1.0发布出来之后
[27:11.540 --> 27:14.840] 可能会发1.0的时候一起发出来吧
[27:14.840 --> 27:18.540] 不就是Osnap 1.0一起发
[27:18.540 --> 27:18.940] 对
[27:18.940 --> 27:21.340] 它现在还没1.0
[27:21.340 --> 27:24.140] 现在还是0.15了
[27:24.140 --> 27:25.640] 0.15.2
[27:25.640 --> 27:26.540] 可以理解就是说
[27:26.540 --> 27:29.940] Oauthlib其实是你那个收费版本的一个dependency了
[27:29.940 --> 27:30.440] 对吧
[27:30.440 --> 27:31.440] 就是
[27:31.440 --> 27:33.040] 对是的
[27:33.040 --> 27:33.440] OK
[27:33.440 --> 27:39.340] 就说到开源开源商业化这个问题吧
[27:39.340 --> 27:43.240] 其实感觉是困扰特别多人的一个问题
[27:43.240 --> 27:44.840] 然后最近也是看邮宇希
[27:44.840 --> 27:46.640] 他在推特上就说
[27:46.640 --> 27:54.240] 就他是支持说付费开issue这件事情
[27:54.240 --> 27:57.540] 就说你只有付钱了
[27:57.540 --> 27:58.340] 你才能开issue
[27:58.340 --> 28:00.240] 当然这个就比较激进了
[28:00.240 --> 28:02.040] 不过大概意思就是说
[28:02.040 --> 28:04.240] 因为很多开发者
[28:04.240 --> 28:05.139] 他实际上是
[28:06.440 --> 28:09.639] 就是在无偿的帮助用户解决很多问题嘛
[28:09.639 --> 28:12.040] 然后他要花费很多的时间精力
[28:12.040 --> 28:15.240] 并没有得到任何好处
[28:15.240 --> 28:17.540] 所以就是
[28:17.540 --> 28:19.540] 就很多人也在想怎么解决这个问题
[28:21.840 --> 28:25.040] 然后就你这个可能也是给大家提供了一种思路吧
[28:26.440 --> 28:28.440] 我这个其实是个很传统的思路
[28:28.440 --> 28:30.440] 我这个就是一个特别传统的做法
[28:30.440 --> 28:33.240] 现在他们流行的做法
[28:33.240 --> 28:35.640] 其实都是sponsor系列嘛
[28:35.640 --> 28:36.640] 这邮宇希
[28:36.640 --> 28:39.340] 我觉得邮宇希根本就不需要有这样的
[28:39.340 --> 28:40.140] 他不需要
[28:40.140 --> 28:44.340] 他现在sponsor已经够用的
[28:44.340 --> 28:47.740] 但是你sponsor是一个非常的那个词叫什么
[28:49.240 --> 28:53.740] 两极分化或者叫马太交易的感觉
[28:55.040 --> 28:57.640] 有sponsor的人就是能够获取
[28:57.640 --> 28:59.640] 当然sponsor的人就能够获取很多
[28:59.640 --> 29:01.640] 获取不到就基本上就没有
[29:01.640 --> 29:05.240] 像你如果OSLIB如果是靠sponsor活的话
[29:05.240 --> 29:07.040] 我觉得是非常难的一件事情
[29:07.840 --> 29:09.040] 嗯是的
[29:10.440 --> 29:11.040] 对
[29:11.040 --> 29:13.040] 我不过有个好处
[29:13.040 --> 29:16.640] 不过我当时有一个很早期的一个sponsor就是OSLIN
[29:16.640 --> 29:18.540] OSLIN很早期就一直在sponsor我
[29:18.540 --> 29:23.340] 所以说我每个月还能够有一笔OSLIN的收入
[29:23.940 --> 29:27.640] 那个OSLIN每个月是有一个200多的
[29:27.640 --> 29:29.140] 200多的一个站点
[29:29.140 --> 29:29.940] 哇羡慕了
[29:32.040 --> 29:35.340] 这个很早期就已经有在赞助了
[29:38.440 --> 29:43.940] 直到刚刚你说有些说付费提issue这个事情
[29:45.540 --> 29:46.940] 我其实是不太赞同的
[29:48.240 --> 29:51.540] 我觉得问题的根本不在于提issue
[29:51.540 --> 29:53.840] 而在于去解决问题
[29:53.840 --> 29:57.940] 就是说有些问题是不是你付费之后
[29:57.940 --> 30:00.740] 他解决他优先级就会变高
[30:00.740 --> 30:03.340] 提当然是能够允许别人提的
[30:03.340 --> 30:06.240] 比如说别人提的东西的话
[30:06.240 --> 30:08.440] 有可能是很重要的事情
[30:08.440 --> 30:11.240] 你不能说这样就阻止别人去提了
[30:11.240 --> 30:15.940] 提了之后你解不解决才是这个问题的重点
[30:15.940 --> 30:20.840] 这个东西如果说提这个issue这个问题对你来说不是那么重要的话
[30:22.140 --> 30:26.640] 那当然他如果是有是一个sponsor的话
[30:26.640 --> 30:29.240] 你可能会去想办法去解决他
[30:29.240 --> 30:30.640] 如果他不是个sponsor的话
[30:30.640 --> 30:36.040] 但是你自己同时你自己又觉得这个事情好像没那么要紧
[30:36.040 --> 30:39.340] 那你可能就会去演继续解决他
[30:39.340 --> 30:40.940] 我觉得这很正常
[30:40.940 --> 30:43.340] 但是你要说提都不能提的话
[30:43.340 --> 30:46.240] 我觉得这个就非常不好了
[30:46.240 --> 30:49.140] 这样的话会导致你得到的反馈非常少
[30:50.740 --> 30:52.340] 对我我同意
[30:52.340 --> 30:57.939] 这个事情其实要聊有特别多东西可以聊
[30:57.939 --> 31:00.540] 我觉得就是一个不同的
[31:00.540 --> 31:04.139] 你在不同阶段看到的一件事情是不同的
[31:04.139 --> 31:06.540] 比如说我就假设以will举例吧
[31:06.540 --> 31:09.439] 然后我可能作为will的一个维护者
[31:09.439 --> 31:14.240] 我看到的情况是每天可能有几十几百个issue
[31:14.240 --> 31:18.040] 然后他大部分都是一些你能在文档里搜到的问题
[31:18.040 --> 31:20.439] 或者已经存在相同issue的问题
[31:20.440 --> 31:26.240] 然后我就会感觉说issue里有用的内容比例非常低
[31:26.240 --> 31:27.940] 所以他可能是这样看问题的
[31:27.940 --> 31:29.640] 但是就比如说作为我
[31:29.640 --> 31:31.840] 像我维护cyberbrain
[31:31.840 --> 31:34.540] 我是非常非常希望别人去提issue
[31:34.540 --> 31:36.140] 但是没有人给我提issue
[31:36.140 --> 31:39.940] 所以就是我基本上是求着别人提issue这种感觉
[31:39.940 --> 31:43.240] 就是不同人看问题视角是不一样的
[31:43.240 --> 31:46.840] 然后你刚才说的那个付费解决问题
[31:46.840 --> 31:48.640] 这个其实已经有解决方案了
[31:48.640 --> 31:51.340] 就是一个叫做issue hunt的这种服务
[31:51.340 --> 31:52.740] 当然也可能有类似的
[31:52.740 --> 31:56.940] 他的意思就是说类似于一个那种赏金猎人这种感觉
[31:56.940 --> 31:59.540] 你可以给你的一个feature去加一个赏金
[31:59.540 --> 32:01.740] 然后实现这个feature的人
[32:01.740 --> 32:03.940] 或者解决这个bug的人就把赏金领走
[32:03.940 --> 32:05.740] 他的那些赏金都是可以公开的
[32:05.740 --> 32:08.740] 然后别人也可以在这个上面去
[32:08.740 --> 32:11.040] 就是提高他的赏金的额度这样子
[32:11.040 --> 32:15.240] 就我觉得这个模式还就看上去还挺吸引人的
[32:15.240 --> 32:17.740] 我不知道实际操作起来效果怎么样了
[32:17.740 --> 32:24.040] 有些事情它不在于你这个概念设计多好
[32:24.040 --> 32:27.040] 而在于做这个事情的他到底是谁
[32:27.040 --> 32:28.640] 是
[32:28.640 --> 32:31.440] 你比如说你刚刚你说这个事情
[32:31.440 --> 32:33.340] 我也是知道的
[32:33.340 --> 32:36.540] 以前在二萌的时候我们有一个库
[32:36.540 --> 32:40.940] 有一个库里面就有一些问题
[32:40.940 --> 32:43.640] 我们自己其实是解决不了的
[32:43.640 --> 32:47.740] 我们当时就发了一个
[32:47.740 --> 32:49.240] 好像不是你说的issue hunter
[32:49.240 --> 32:52.040] 是另外一个一家公司的东西
[32:52.040 --> 32:54.140] 这样一家网站
[32:54.140 --> 32:58.940] 当时就设立了一些奖励在里面
[32:58.940 --> 33:03.240] 于是就有人去帮我们去实现了一些
[33:03.240 --> 33:05.040] 好像需要用C协的东西来做
[33:05.040 --> 33:06.540] 哇
[33:06.540 --> 33:08.240] 挺厉害的
[33:08.240 --> 33:10.240] 嗯也是用过的
[33:10.240 --> 33:13.440] 可是他如果这个事情如果是Github来做的话
[33:13.440 --> 33:16.740] 我觉得可能会效果会好很多
[33:16.740 --> 33:19.840] 如果是个接入第三方这样去来做的话
[33:19.840 --> 33:22.440] 效果可能会就比较差了
[33:22.440 --> 33:24.340] 嗯不一定吧
[33:24.340 --> 33:28.240] 我个人倒是不是很看重他是谁来做的
[33:28.240 --> 33:30.640] 是这样子的
[33:30.640 --> 33:34.640] 当时我们这些赏金其实我们自己提供的
[33:34.640 --> 33:36.640] 是我们作为一个开发者去提供的
[33:36.640 --> 33:39.040] 可是你的需求其实是一种是什么呢
[33:39.040 --> 33:43.340] 是别人给你开发的东西提供
[33:43.340 --> 33:47.040] 然后呢他要去付费去解决这个问题
[33:47.040 --> 33:48.639] 这是两个不同的概念
[33:48.639 --> 33:51.639] 而我们去利用他去解决问题的是
[33:51.639 --> 33:54.540] 是因为我们是一个提供方
[33:54.540 --> 33:57.139] 所以说依赖他们我觉得没有太大问题
[33:57.139 --> 33:58.040] 但是像你这种情况
[33:58.040 --> 34:00.740] 我觉得用Github来实现的话
[34:00.740 --> 34:03.639] 可能对这个身材来说是更好的
[34:05.540 --> 34:08.639] anyway我们可以就是把话题拉回来一点
[34:08.639 --> 34:17.739] 那嗯就说如果有人说我想靠开源来去就是赚钱
[34:17.739 --> 34:19.540] 然后你有什么建议吗
[34:19.540 --> 34:21.639] 就你觉得是不是就不要做
[34:21.639 --> 34:23.339] 因为这个太难了
[34:23.339 --> 34:29.139] 然后还是说你觉得是一条可行的路
[34:31.639 --> 34:32.540] 难吗
[34:32.540 --> 34:33.940] 其实也不难
[34:33.940 --> 34:38.139] 你要这个事情不好说
[34:38.139 --> 34:44.540] 一个事情一个是你到底是不是一开始就抱着去
[34:44.540 --> 34:46.440] 做一个开源项目
[34:46.440 --> 34:49.040] 然后呢让他来养活自己的这个想法
[34:49.040 --> 34:51.639] 如果是的话
[34:51.639 --> 34:53.639] 那么你要解决的是一个什么问题
[34:53.639 --> 34:55.840] 你只要找准了这个问题的话
[34:55.840 --> 34:57.640] 你就想办法去做你的商业化
[34:57.640 --> 35:00.240] 你只要往这方面去钻研
[35:00.240 --> 35:03.540] 他肯定是能够干成这件事情的
[35:03.540 --> 35:06.740] 干成这件事情的做法有很多种
[35:06.740 --> 35:08.440] 你可以但是呢
[35:08.440 --> 35:12.140] 你如果想要很速成的去完成这个事情的话
[35:12.140 --> 35:14.440] 可能会有一些比较恶心的方法
[35:14.440 --> 35:17.040] 我之前好像在微信上面
[35:17.040 --> 35:20.440] 好像就看到过一个人去讲他的一个
[35:20.440 --> 35:25.940] 可是呢你让我去做这样的事情
[35:25.940 --> 35:27.240] 做不来啊
[35:27.240 --> 35:29.940] 很多人他其实是做不来这些事情的
[35:29.940 --> 35:35.540] 我其实现在就是一种自然增长的一个状态
[35:35.540 --> 35:40.440] 但是想办法去提供额外的价值去
[35:40.440 --> 35:42.240] 去获取客户
[35:42.240 --> 35:48.440] 这是一个我觉得比较正统的一个路子吧
[35:48.440 --> 35:50.340] 就说你觉得还是可以做
[35:50.340 --> 35:52.640] 只要说有一个这种痛点
[35:52.640 --> 35:53.840] 然后你这个是能解决的
[35:53.840 --> 35:58.140] 对就可以去走这条路
[35:58.140 --> 36:03.440] 最重要的一点就是说你要给付费的人提供一个
[36:03.440 --> 36:05.040] 怎样的额外的服务
[36:05.040 --> 36:07.540] 我觉得这个是很重要一个点
[36:07.540 --> 36:11.240] 即使是像Viu这种做sponsor的话
[36:11.240 --> 36:13.440] 他仍然是有这样一个交换在里面的
[36:13.440 --> 36:15.240] 有个利益交换在里面的
[36:15.240 --> 36:17.440] 你不能说他你即使赞助
[36:17.440 --> 36:18.640] 你不能说他赞助了你
[36:18.640 --> 36:19.839] 他什么都得不到
[36:19.839 --> 36:23.640] 这样的话我觉得就很难做起来
[36:23.640 --> 36:26.240] 那Viu的赞助者能得到什么呢
[36:26.240 --> 36:30.140] 他们能够把自己的logo放在这些网站上
[36:30.140 --> 36:31.540] 放在他的页面上
[36:31.540 --> 36:35.339] 就是一个利益交换在里面的
[36:35.339 --> 36:36.939] 是的是不是
[36:36.939 --> 36:40.140] 这个我之前在那个补充者说的讨论组里面
[36:40.140 --> 36:42.040] 就是说了好多
[36:42.040 --> 36:46.339] 我觉得有以及的盈利能力完爆Python和PSF
[36:46.339 --> 36:47.740] 就是你知道吗
[36:47.740 --> 36:51.339] Python他们做的差到什么程度
[36:51.339 --> 36:53.640] 就是你在Python的官方网站上
[36:53.640 --> 36:58.140] 我花了大概五分钟才找到那些赞助者在哪里
[36:58.140 --> 37:01.440] 然后他赞助者的列表就是一个那种
[37:01.440 --> 37:03.339] 你可以理解为几乎裸的html
[37:03.339 --> 37:04.440] 连个logo都没有
[37:04.440 --> 37:06.540] 就是一个一个unordered list
[37:06.540 --> 37:08.540] 然后把公司名字列在上面
[37:08.540 --> 37:12.040] 就是在一个很深的页面里面藏了一堆公司名字
[37:12.040 --> 37:14.140] 然后你平时根本就找不到
[37:14.140 --> 37:17.740] 我就觉得你是嫌钱太多吗
[37:17.740 --> 37:18.540] 还是什么
[37:18.540 --> 37:21.140] 但他们PSF每年又在哭穷
[37:21.140 --> 37:22.339] 所以我觉得你哭穷
[37:22.340 --> 37:25.340] 你不把赞助这件事情做好一点
[37:25.340 --> 37:26.140] 你不给他们
[37:26.140 --> 37:27.640] 你不给这些赞助商提供价值
[37:27.640 --> 37:29.940] 你不把他们logo放出来
[37:29.940 --> 37:34.140] 这个完全看不到你们想做好这件事的意愿
[37:34.140 --> 37:36.540] 所以我是对他们很不满的
[37:36.540 --> 37:36.940] 是的
[37:36.940 --> 37:42.940] 我觉得做商业最重要的一个点就是要有一个交换在里面
[37:42.940 --> 37:46.040] 你不能纯指望着别人赞助你
[37:46.040 --> 37:48.540] 这个这样的人有
[37:48.540 --> 37:52.440] 可是这样子做是不长久的
[37:52.440 --> 37:55.940] 那我们就把话题再聊回这个TapLog吧
[37:55.940 --> 37:58.440] 对就是想了解
[37:58.440 --> 38:00.640] 因为TapLog和AuthLib还不太一样了
[38:00.640 --> 38:06.840] TapLog其实本身它已经可以认为是一个更完备的产品了
[38:06.840 --> 38:07.040] 对
[38:07.040 --> 38:08.540] 它不是一个开发者
[38:08.540 --> 38:09.740] 就是纯开发者
[38:09.740 --> 38:11.940] 它是直接面向用户的
[38:11.940 --> 38:12.240] 对
[38:12.240 --> 38:16.640] 那比如说这里边当时是怎么做的
[38:16.640 --> 38:18.140] 这种NVP验证的呢
[38:18.140 --> 38:19.940] 就是验证这种情况的可行
[38:19.940 --> 38:21.540] 然后最后跑起来了
[38:21.540 --> 38:21.839] 对
[38:22.839 --> 38:24.240] TapLog的初始
[38:25.339 --> 38:29.940] 其实最开始就是为了跑我个人的博客嘛
[38:29.940 --> 38:31.540] 我之前的博客
[38:31.540 --> 38:33.339] 之前的博客都是静态生成的
[38:33.339 --> 38:35.140] 可是每次静态生成
[38:36.339 --> 38:40.740] 就有一种很奇怪的感觉
[38:40.740 --> 38:42.839] 你感觉你是在写代码
[38:42.839 --> 38:45.140] 而且一段有一段时间
[38:45.140 --> 38:48.040] 你不去维护你这个生成的东西的话
[38:48.040 --> 38:50.440] 你发现就会出各种问题
[38:50.440 --> 38:52.540] 感觉你不是在写文章
[38:52.540 --> 38:57.140] 而是在一种写代码的感觉
[38:57.140 --> 39:01.640] 后来就想我还是写一个有后台的东西吧
[39:01.640 --> 39:09.340] 当时就把我的静态的生成器这一套改成了有后台的一个生成器
[39:09.340 --> 39:12.040] 它仍然会生成静态文件
[39:12.040 --> 39:13.140] 但是呢
[39:13.140 --> 39:15.440] 数据是存在数据库里面的
[39:15.440 --> 39:16.540] 有一个后台
[39:16.540 --> 39:18.340] 我可以去写文章
[39:18.340 --> 39:19.640] 再从数据库里面读出来
[39:19.640 --> 39:21.840] 把它生成成各种静态文件
[39:21.840 --> 39:23.340] 用NX去host
[39:24.740 --> 39:26.940] 最开始就是是这样子的
[39:26.940 --> 39:29.040] 因为这个系统最开始就这样
[39:29.040 --> 39:30.240] 最开始的时候
[39:30.240 --> 39:33.840] 我设计的时候就想要想把它做成一个多人的系统
[39:33.840 --> 39:36.340] 看看有没有人跟我有差不多需求
[39:36.340 --> 39:39.940] 他也不需要去设计主题啊
[39:39.940 --> 39:41.740] 他也他只是想写写东西的话
[39:43.040 --> 39:45.040] 这样就可以直接来使用这个系统的
[39:45.040 --> 39:49.440] 我当时就发了篇博客介绍一下这个东西
[39:49.440 --> 39:51.240] 问有没有人愿意来
[39:51.240 --> 39:52.940] 有没有人想要来使用它
[39:54.140 --> 39:56.140] 当然我还设置了一个限定
[39:56.140 --> 39:57.840] 如果想使用它的话
[39:57.840 --> 40:00.540] 你得付一笔钱
[40:00.540 --> 40:02.140] 你得付一笔钱
[40:02.140 --> 40:03.740] 如果你最你最终
[40:05.740 --> 40:08.740] 你最终不去使用的话
[40:08.740 --> 40:10.940] 那个不会去就都不打算用的话
[40:10.940 --> 40:12.240] 我会把钱再退给你的
[40:12.240 --> 40:14.840] 这样的话设计了一个门槛在这里
[40:14.840 --> 40:17.540] 你就不会导致有一大批的测试用户了
[40:17.540 --> 40:19.340] 我个人特别讨厌
[40:19.340 --> 40:21.940] 一些人有很多人就过来注册了一下之后
[40:21.940 --> 40:23.240] 发了一篇态势的
[40:23.240 --> 40:25.540] 那就再也没有了
[40:25.540 --> 40:27.540] 所以一开始就设计了这样一个门槛
[40:27.540 --> 40:30.240] 挡住了一大批测试用户吧
[40:30.240 --> 40:33.840] 发现还是有人愿意去付费过来测试的
[40:33.840 --> 40:35.540] 发现这个事情好像可以做
[40:38.040 --> 40:39.340] 做了做了一段时间之后
[40:39.340 --> 40:41.940] 就开始去集成stripe的付费系统了
[40:41.940 --> 40:45.140] 集成之后就开始公开出来
[40:45.140 --> 40:47.640] 大家就可以直接注册付费使用了
[40:50.840 --> 40:53.440] 我觉得最早期的用户是怎么来的呢
[40:55.640 --> 40:58.240] 当时有那叫什么
[40:58.240 --> 40:59.840] 力气
[41:01.140 --> 41:03.840] 当时力气不是要做一个访谈吗
[41:03.840 --> 41:06.140] 我当时就在这个访
[41:06.140 --> 41:09.840] 其实很在这之前也接到过一个力气的访谈邀约
[41:09.840 --> 41:12.940] 可是我觉得没什么好说的
[41:12.940 --> 41:15.240] 大家使用的工具都差不多
[41:15.240 --> 41:17.040] 好像也没什么新意
[41:17.040 --> 41:19.240] 后来再次邀约之后
[41:19.240 --> 41:20.940] 我刚好在做typelog
[41:20.940 --> 41:24.840] 就顺便就介绍了一下typelog
[41:24.840 --> 41:27.540] 可能从力气的这篇文章里面
[41:27.540 --> 41:29.940] 也获取了一些用户
[41:29.940 --> 41:31.540] 再后来就不知道是怎么回事
[41:31.540 --> 41:33.940] 慢慢的就有了一些用户来注册
[41:33.940 --> 41:35.940] 可是也没有多少
[41:35.940 --> 41:37.540] 直到去年
[41:37.540 --> 41:39.540] 直到去年的时候才开始
[41:39.540 --> 41:40.940] 用户数据
[41:42.540 --> 41:44.640] 算是成长起来吧
[41:44.640 --> 41:49.340] 以前这些最多就是cover住我的开销
[41:49.340 --> 41:51.840] 有时候是cover不住的开销
[41:53.640 --> 41:56.940] 到19年之后才开始有盈利了
[41:56.940 --> 42:00.040] 虽然这个盈利并不能养活我自己
[42:00.040 --> 42:02.340] 继续说那个typelog是如何找到目标用户的
[42:05.640 --> 42:07.240] 这个事情这个东西
[42:07.240 --> 42:12.240] 我除了在力气上
[42:12.240 --> 42:15.040] 刚开始说曝光了一下之后
[42:15.040 --> 42:19.839] 一直没有去做这些事情
[42:19.839 --> 42:23.839] 我连V2EX都没有上去宣传过
[42:23.839 --> 42:29.339] 但是呢就是靠它的自然增长
[42:29.339 --> 42:32.839] 自然增长来的用户
[42:32.840 --> 42:41.840] 一直到今年才在producthunt上面去宣传了一下
[42:41.840 --> 42:44.840] 可是效果也没什么效果
[42:44.840 --> 42:48.440] 虽然来了两个注册用户
[42:48.440 --> 42:51.440] 但是这两个注册用户也都不是付费用户
[42:51.440 --> 42:53.640] 我看到我看到你那篇文章了
[42:53.640 --> 42:57.440] 那个叫typelog作者冒号
[42:57.440 --> 42:59.840] 中文世界最大的悲剧便是封闭
[42:59.840 --> 43:05.440] 这就是最初的一篇宣传
[43:05.440 --> 43:08.440] 就是在力气上面之后
[43:08.440 --> 43:09.440] 之后就没有了
[43:09.440 --> 43:14.440] 感觉就是逼格一下就起来了
[43:14.440 --> 43:17.440] 然后那个照片都是黑白的
[43:17.440 --> 43:23.440] 你到时候也可以念一念吧
[43:23.440 --> 43:26.940] 那张是你自己照的吗
[43:26.940 --> 43:27.440] 不是吧
[43:27.440 --> 43:29.440] 那不是你在照片里吗
[43:29.440 --> 43:31.440] 那不是我自己照的
[43:31.440 --> 43:33.440] 不是你自己照的
[43:33.440 --> 43:40.440] 总之就是反正typelog主要就是靠自然增长起来的
[43:40.440 --> 43:44.440] 那说明这个产品的质量还是很过硬
[43:44.440 --> 43:46.440] 并且也抓住了一些痛点
[43:46.440 --> 43:49.440] 对的
[43:49.440 --> 43:55.440] 但是我觉得这种做法你真的是去
[43:55.440 --> 43:58.440] 你如果真的是去做一个商业新闻的话
[43:58.440 --> 44:04.440] 那是很愚蠢的
[44:04.440 --> 44:06.440] 你需要去做推
[44:06.440 --> 44:09.440] 就是说你是需要去做推广的
[44:09.440 --> 44:11.440] 可是我这些东西都没有去做
[44:11.440 --> 44:13.440] 主要是有一种抵触心理
[44:13.440 --> 44:15.440] 可是我也正在想
[44:15.440 --> 44:18.440] 试着去解决这些问题
[44:18.440 --> 44:21.440] 想要去做些推广
[44:21.440 --> 44:26.440] 所以我目前是打算整理一些
[44:26.440 --> 44:31.440] 可能成为typelog用户的一些人
[44:31.440 --> 44:34.440] 去给他们发发邮件问一问看看
[44:34.440 --> 44:37.440] 开始做市场营销了
[44:37.440 --> 44:38.440] 可以了
[44:38.440 --> 44:42.440] 对这个事情你本来就应该去做的
[44:42.440 --> 44:46.440] 可是一直有一种抵触心理
[44:46.440 --> 44:49.440] 一直就没有去做
[44:49.440 --> 44:53.440] 虽然很早的时候我也列出过一些潜在的用户
[44:53.440 --> 44:57.440] 去发邮件去问一下他们
[44:57.440 --> 45:02.440] 可是我一直拖了几年都没有去实现
[45:02.440 --> 45:05.440] 我很早的时候在channel里面就列过一些用户
[45:05.440 --> 45:07.440] 可是刚开始的时候就列了一些用户
[45:07.440 --> 45:10.440] 可是到现在都没有去骚扰过别人
[45:10.440 --> 45:12.440] 那你方便分享一下
[45:12.440 --> 45:15.440] 你的这些目标用户是怎么找到的吗
[45:15.440 --> 45:21.440] 或者说你觉得这些目标用户都是谁
[45:21.440 --> 45:24.440] 比如说我
[45:24.440 --> 45:26.440] 再想想
[45:26.440 --> 45:29.440] 比如说关于博客的
[45:29.440 --> 45:35.440] 博客的话可以找一些使用ghost的
[45:35.440 --> 45:38.440] 并且使用ghost的托管的一些用户
[45:38.440 --> 45:42.440] 因为ghost的功能我其实差不多有
[45:42.440 --> 45:44.440] 而且比ghost要便宜很多
[45:44.440 --> 45:46.440] ghost还蛮贵的
[45:46.440 --> 45:47.440] 还有一些呢
[45:47.440 --> 45:54.440] 这个就是以前台湾的一个博客系统
[45:54.440 --> 45:56.440] 叫什么忘记了
[45:56.440 --> 45:58.440] 也是一个markdown编辑器
[45:58.440 --> 46:03.440] 然后那个作者后来去搞交易所了
[46:03.440 --> 46:05.440] 搞比特币之类的东西
[46:05.440 --> 46:08.440] 就是那个人做的一个产品去找一下那些用户
[46:08.440 --> 46:11.440] 现在的博客的话
[46:11.440 --> 46:15.440] 你还可以去找一些filesize的用户
[46:15.440 --> 46:18.440] 你就可以去联系一下他们
[46:18.440 --> 46:21.440] 问一下他们要不要签你过来
[46:21.440 --> 46:24.440] 他们有的功能
[46:24.440 --> 46:25.440] 我们也都有
[46:25.440 --> 46:28.440] 而且我们还会更便宜点
[46:28.440 --> 46:30.440] 而且我们还更好reach一点
[46:30.440 --> 46:34.440] 就是说你能够更方便的去联系我们
[46:34.440 --> 46:35.440] 对
[46:35.440 --> 46:38.440] 我觉得这种还是挺必要的
[46:38.440 --> 46:41.440] 然后但是虽然知道
[46:41.440 --> 46:42.440] 可是就一直不做
[46:42.440 --> 46:45.440] 这就是一个很大的问题
[46:48.440 --> 46:49.440] 挺有意思
[46:49.440 --> 46:51.440] 像现在type log
[46:51.440 --> 46:53.440] 我感觉基本是不是就是
[46:53.440 --> 46:58.440] 可以说是支持了中文博客界的半壁江山
[46:58.440 --> 46:59.440] 这种感觉
[46:59.440 --> 47:02.440] 就很多很多博客都在用type log
[47:03.440 --> 47:04.440] 有半壁吗
[47:04.440 --> 47:05.440] 我觉得没有
[47:05.440 --> 47:08.440] 中文博客比你想象的要
[47:08.440 --> 47:10.440] 1 3 比1 4 有没有
[47:10.440 --> 47:13.440] 中文博客比你想象要多很多
[47:13.440 --> 47:17.440] 如果我真的是能够支持了中文博客的半壁江山的话
[47:17.440 --> 47:20.440] 这个type log应该是可以养活我的
[47:22.440 --> 47:25.440] 像因为我自己做博客
[47:25.440 --> 47:26.440] 所以你有没有估计过
[47:26.440 --> 47:30.440] 就是说或者你应该是有一个确切的数
[47:30.440 --> 47:31.440] 数type log
[47:31.440 --> 47:35.440] 它到底上面有多少中文博客
[47:37.440 --> 47:39.440] 这个方便透露一下吗
[47:39.440 --> 47:41.440] 有多少中文博客
[47:41.440 --> 47:42.440] 或者说就博客吧
[47:42.440 --> 47:43.440] 我没有去
[47:44.440 --> 47:45.440] 我没有去
[47:45.440 --> 47:46.440] 没有这样的数据
[47:46.440 --> 47:48.440] 我没有去统计过
[47:48.440 --> 47:49.440] 但是呢
[47:50.440 --> 47:52.440] 但是我就选了一些
[47:52.440 --> 47:55.440] 放在了我们的那个Facebook的列表里面去
[47:55.440 --> 47:56.440] 列表里面
[47:56.440 --> 47:58.440] 这些算是还比较大的
[47:58.440 --> 48:00.440] 而且比较活跃的一些
[48:01.440 --> 48:04.440] podcast放在Facebook的列表里面
[48:04.440 --> 48:06.440] 那我还挺好奇的
[48:06.440 --> 48:09.440] 就是刚才有提到说
[48:10.440 --> 48:13.440] 如果能有半壁的话就能养活自己
[48:13.440 --> 48:15.440] 那中文博客一般都脱罐在哪
[48:15.440 --> 48:18.440] 因为其实我们当时也是调研了一波
[48:18.440 --> 48:21.440] 就是说到底想脱罐在哪
[48:21.440 --> 48:24.440] 然后其实可选项也不是特别多
[48:24.440 --> 48:25.440] 对
[48:25.440 --> 48:26.440] 比如说像Fireside
[48:26.440 --> 48:27.440] 对
[48:27.440 --> 48:29.440] 然后这样说吧
[48:29.440 --> 48:30.440] 我觉得
[48:31.440 --> 48:33.440] 我觉得放在Fireside上的
[48:33.440 --> 48:37.440] 用户就比放在Tablet上的用户多
[48:37.440 --> 48:39.440] 所以我才要去联系
[48:39.440 --> 48:42.440] 放在Fireside上的用户
[48:42.440 --> 48:43.440] 虽然现在已经有
[48:43.440 --> 48:45.440] 有很大一部分从Fireside迁移过来
[48:45.440 --> 48:49.440] 但是Fireside上的用户依然是比Tablet多的
[48:49.440 --> 48:50.440] 这点
[48:50.440 --> 48:52.440] 这点我是可以肯定的
[48:53.440 --> 48:54.440] 你是指中文吗
[48:54.440 --> 48:55.440] 还是指整体的
[48:55.440 --> 48:56.440] 对中文
[48:56.440 --> 48:58.440] 就是指中文
[48:58.440 --> 49:02.440] 那你是统计过他们有多少人在用Fireside吗
[49:02.440 --> 49:03.440] 这个
[49:03.440 --> 49:04.440] 这个我倒没有
[49:04.440 --> 49:07.440] 但是这是一个印象
[49:07.440 --> 49:08.440] 一个印象
[49:08.440 --> 49:10.440] 因为有很多的播客
[49:10.440 --> 49:11.440] 你其实是
[49:11.440 --> 49:13.440] 还有很多小播客你是不知道的
[49:13.440 --> 49:14.440] 他们也是在用的
[49:14.440 --> 49:19.440] 我在Fireside上面就有看到过很多很多这样的播客
[49:20.440 --> 49:21.440] 哎呀这个感
[49:22.440 --> 49:23.440] 完了
[49:23.440 --> 49:25.440] 这是一个凭感觉出来的数据
[49:25.440 --> 49:27.440] 没有认真去统计过
[49:27.440 --> 49:28.440] 所以说
[49:28.440 --> 49:29.440] 它是真实的吗
[49:29.440 --> 49:30.440] 我觉得
[49:30.440 --> 49:33.440] 你也不能这样子说
[49:33.440 --> 49:36.440] 你就当做是我的个人一个感觉吧
[49:36.440 --> 49:37.440] OK
[49:37.440 --> 49:39.440] 对就反正
[49:39.440 --> 49:44.440] 还有一些是自己的Odd Price Token
[49:44.440 --> 49:47.440] 还有一些是
[49:47.440 --> 49:48.440] 嗯
[49:48.440 --> 49:50.440] 还有些其他的平台在这
[49:52.440 --> 49:54.440] 比如说什么Spouse
[49:54.440 --> 49:55.440] 还有
[49:56.440 --> 49:57.440] 哎呀
[49:57.440 --> 49:58.440] Simple
[49:58.440 --> 50:00.440] Simple
[50:00.440 --> 50:01.440] Simple Cast
[50:03.440 --> 50:05.440] 反正有好几家国外的
[50:05.440 --> 50:06.440] 嗯
[50:06.440 --> 50:10.440] 我都有见过他们Token在各种各样的平台上的
[50:11.440 --> 50:15.440] 那看起来就是肯定潜在的市场还是比较大的
[50:15.440 --> 50:16.440] 对
[50:18.440 --> 50:20.440] 我做的时候可能没这么多
[50:21.440 --> 50:23.440] 但是现在其实现在是有这么多的
[50:23.440 --> 50:24.440] 嗯
[50:24.440 --> 50:29.440] 现在那个中文播客用户是越来越多的
[50:29.440 --> 50:30.440] 所以说
[50:30.440 --> 50:37.440] 如果早期去认真去做一下宣传的话
[50:37.440 --> 50:43.440] 能够抓住一些新的这些播客组的话
[50:43.440 --> 50:44.440] 可能会更好
[50:44.440 --> 50:46.440] 可是都没去做
[50:46.440 --> 50:49.440] 反正在我看来
[50:49.440 --> 50:54.440] 感觉就是TypeLog的中文播客这块已经是相当有存在感
[50:54.440 --> 50:55.440] 非常成功的了
[50:55.440 --> 50:58.440] 就是当然我的感觉可能不一定准
[50:58.440 --> 51:01.440] 至少我觉得主播的
[51:01.440 --> 51:04.440] 我接触的主播圈子里基本都知道TypeLog
[51:04.440 --> 51:06.440] 然后也有很多人在用
[51:06.440 --> 51:09.440] 圈子跟圈子的不同吧
[51:09.440 --> 51:11.440] 你接触的圈子
[51:11.440 --> 51:13.440] 你接触的圈子跟
[51:13.440 --> 51:16.440] 我举个TypeLog上面的用户例子
[51:16.440 --> 51:19.440] 你肯定是接触不到这个圈子的人的
[51:19.440 --> 51:21.440] 等一下举个例子啊
[51:21.440 --> 51:23.440] 有个叫
[51:23.440 --> 51:25.440] 有些宗教类的在上面
[51:25.440 --> 51:26.440] 你不知道吧
[51:26.440 --> 51:27.440] 不知道
[51:27.440 --> 51:30.440] 那我这么多不接触到的都已经在用
[51:30.440 --> 51:34.440] 那不更说明他比我就是预想的还要
[51:34.440 --> 51:36.440] 用户群体还要广泛
[51:36.440 --> 51:40.440] 是吧
[51:42.440 --> 51:45.440] 我也不知道他们是怎么知道TypeLog的
[51:45.440 --> 51:47.440] 你也可以问问
[51:47.440 --> 51:51.440] 就是我这是我的一个自己的经验
[51:51.440 --> 51:56.440] 就是说我们会就是跟一些用户去聊一聊
[51:56.440 --> 52:00.440] 说不定能获取到一些意想不到的反馈
[52:00.440 --> 52:05.440] 就是包括他们是他们有什么想法呀
[52:05.440 --> 52:07.440] 然后他们怎么知道你这个东西的呀
[52:07.440 --> 52:11.440] 然后当然潜在用户也是也是挺重要的
[52:11.440 --> 52:16.440] 就对我觉得用户反馈还是能给你挺多信息
[52:16.440 --> 52:20.440] 要去写有点问别人
[52:20.440 --> 52:25.440] 我这个对我来说就是有点抵抗情绪在里面
[52:25.440 --> 52:27.440] 不得让你女朋友写吗
[52:27.440 --> 52:29.440] 嗯
[52:29.440 --> 52:32.440] 还是得我还是得我自己写啊
[52:32.440 --> 52:34.440] OKOK
[52:34.440 --> 52:39.440] 很很反正就是还是要迈出这一步了
[52:39.440 --> 52:41.440] 嗯
[52:41.440 --> 52:42.440] 是的
[52:42.440 --> 52:43.440] 我觉得没有
[52:43.440 --> 52:44.440] 我觉得没有问题的
[52:44.440 --> 52:46.440] 产品质量摆在这里
[52:46.440 --> 52:49.440] 就是就这个是最根本的嘛
[52:49.440 --> 52:52.440] 然后你像你自然增长都有这么多用户了
[52:52.440 --> 52:53.440] 你在意宣传
[52:53.440 --> 52:58.440] 肯定是就是大家都会有更多人来用的
[53:02.440 --> 53:05.440] 好本期捕蛇者说的播客就到这里
[53:05.440 --> 53:06.440] 感谢您的收听
[53:06.440 --> 53:08.440] 本期内容中提到的资料链接
[53:08.440 --> 53:09.440] 都会放到我们的网站上
[53:09.440 --> 53:12.440] 我们的网址是pythonhunter.org
[53:12.440 --> 53:15.440] 由于我们主播的直播账号被禁
[53:15.440 --> 53:18.440] 所以以后的更新都不会再发布到直播上
[53:18.440 --> 53:19.440] 请您留意
[53:19.440 --> 53:22.440] 推荐您使用泛用型客户单订阅我们的播客
[53:22.440 --> 53:24.440] 也欢迎您关注我们的推特
[53:24.440 --> 53:27.440] 加入我们的Telegram群组和其他听众一起聊天
[53:27.440 --> 53:31.440] 我们的推特是pythonhunter加一个下滑线
[53:31.440 --> 53:34.440] Telegram群组的链接可以在我们的网站上找到
[53:34.440 --> 53:38.440] 我们下期再见
