[00:30.000 --> 00:57.840] 欢迎大家来到第八期补收者说
[00:57.840 --> 00:59.840] 我们今天的三位主播是我
[00:59.840 --> 01:00.680] like9m
[01:00.680 --> 01:02.560] 然后赖心涛以及manuelsaka
[01:02.920 --> 01:05.760] 想到大家应该对我们都比较熟悉了
[01:05.760 --> 01:08.760] 所以我们就不做自我介绍了
[01:08.760 --> 01:12.920] 那我们想聊一聊最近大家都在做些什么
[01:12.920 --> 01:14.720] 然后我先问一下赖心涛吧
[01:14.720 --> 01:16.120] 你最近都在做些什么
[01:16.440 --> 01:20.640] OK我最近在把i-radius的那个
[01:20.640 --> 01:24.800] 语法补全的引擎从正哲的一套方案
[01:24.800 --> 01:27.520] 迁移到pygments
[01:27.520 --> 01:28.800] 我不知道怎么读
[01:29.560 --> 01:33.280] 就是有个g中间
[01:33.280 --> 01:36.800] 基于语法的一套方案
[01:36.800 --> 01:38.080] 但是我现在正在学习
[01:38.080 --> 01:43.000] 怎么用pygments来表达我的语法
[01:44.200 --> 01:45.800] 对然后正哲上我现在
[01:46.200 --> 01:49.000] 家外已经告一段了
[01:49.000 --> 01:50.400] 我现在正在写前段
[01:50.400 --> 01:58.880] 全站工程师
[01:58.880 --> 02:00.960] 那9号呢
[02:00.960 --> 02:04.080] 我的话
[02:04.080 --> 02:08.920] 然后首先工作上就是在做transfer
[02:08.920 --> 02:10.720] 我transfer到阿里去做
[02:10.720 --> 02:12.600] 就去做那个
[02:13.280 --> 02:15.280] QB的那个技术设施这一块
[02:15.280 --> 02:17.800] 然后比如说我即将接手的项目做网关
[02:17.800 --> 02:20.680] 然后开源这方面的话
[02:20.680 --> 02:25.000] 就目前的话就是在给cpython有一个bpo我在追
[02:25.000 --> 02:29.400] 就是他那个function tool下面的lru
[02:29.400 --> 02:30.440] 他少了一些东西
[02:30.440 --> 02:32.480] 然后导致那个pycode的时候不方便
[02:32.480 --> 02:33.360] 另外一个的话
[02:33.360 --> 02:37.600] 我这是在跟一个基于open rist的开源的
[02:37.600 --> 02:40.200] 那个网关API6框架来
[02:40.200 --> 02:43.240] 在做一些就增强和其他的功能
[02:43.240 --> 02:47.160] 你之前说是什么pycode的时候不方便
[02:47.160 --> 02:48.160] pycode是什么
[02:48.160 --> 02:50.440] 就PICO
[02:50.440 --> 02:52.440] PICO
[02:52.440 --> 02:55.920] 就序列化的时候
[02:55.920 --> 02:57.040] 明白了了解了
[02:57.040 --> 02:58.519] 对
[02:58.519 --> 03:01.359] 因为你lru的话
[03:01.359 --> 03:02.920] 他里面有一些信息
[03:02.920 --> 03:06.760] 比如说maxsize或者说typed这些东西的话
[03:06.760 --> 03:09.040] 他原本是没有充分暴露出来的
[03:09.040 --> 03:11.720] 然后这个时候就有bpo提出
[03:11.720 --> 03:15.200] 这个对于第三方的序列化来说是不友好的
[03:15.200 --> 03:17.320] 是因为你即便可以序列化
[03:17.320 --> 03:19.160] 然后但是你反序列化之后
[03:19.160 --> 03:21.640] 你的那个就没法保证行为一致
[03:21.640 --> 03:24.760] 所以说我就在做一个小的一个fix
[03:24.760 --> 03:30.560] 他要PICO的对象是那个lru里面的那个dict吗
[03:30.560 --> 03:34.399] 不是是lru返回的warp之后的那个function
[03:34.399 --> 03:38.120] 就是被warp了的那个对象
[03:38.120 --> 03:41.320] PICO支持function吗
[03:41.320 --> 03:42.880] 第三方的是支持的
[03:42.880 --> 03:44.519] 就是说是你被warp之后
[03:44.520 --> 03:46.480] 然后他那个东西是有办法支持的
[03:46.480 --> 03:47.040] 然后的话
[03:47.040 --> 03:49.920] 但是因为他里面现在lru就是
[03:49.920 --> 03:52.960] 就是那个lru他暴露的信息不够
[03:52.960 --> 03:54.920] 然后所以说就导致了
[03:54.920 --> 03:56.080] 你序列化之后
[03:56.080 --> 03:57.160] 你反序列化回来
[03:57.160 --> 03:59.000] 就行为就不一定是正确的
[03:59.000 --> 04:03.600] 序列化反序列化这种事情一直是很tricky的
[04:03.600 --> 04:04.120] 是的
[04:06.360 --> 04:07.120] 好
[04:07.120 --> 04:08.000] 那最后说一下我吧
[04:08.000 --> 04:11.920] 我其实感觉工作上面就是在
[04:11.920 --> 04:17.000] 在做一个新的集成测试的解决方案
[04:17.000 --> 04:18.680] 给上海的一个组
[04:18.680 --> 04:22.640] 然后其实那个组就是我之前待在上海的时候
[04:22.640 --> 04:23.680] 和他们也比较熟嘛
[04:23.680 --> 04:27.280] 然后就让我去跟他们做这个
[04:27.280 --> 04:33.960] 然后就是继续搞一些cyberbrain的小修小补吧
[04:33.960 --> 04:35.880] 其实前端那部分还没开始做
[04:35.880 --> 04:38.800] 然后也是在也是在搜一些
[04:38.800 --> 04:41.880] 有没有什么现场的解决方案之类的
[04:41.880 --> 04:42.920] 我要举手
[04:44.960 --> 04:47.040] 我可以举手提问吗
[04:47.040 --> 04:48.240] 你问吧
[04:48.240 --> 04:50.760] 你cyberbrain那个有milestone吗
[04:52.040 --> 04:53.680] 没有milestone
[04:53.680 --> 04:56.120] 差评
[04:57.360 --> 05:02.320] 我感觉milestone一般比较适合在你的项目已经达到了一个
[05:02.320 --> 05:03.520] 比如说1.0之后
[05:03.520 --> 05:06.600] 然后你之后的发展方向都比较有规划了
[05:06.600 --> 05:07.720] 你搞一个milestone
[05:07.720 --> 05:09.160] 搞几个milestone比较好
[05:09.160 --> 05:10.560] 现在都还是在探索吧
[05:10.560 --> 05:11.040] 我觉得
[05:11.040 --> 05:12.720] 这倒也是
[05:12.720 --> 05:13.520] 但是我觉得的话
[05:13.520 --> 05:16.760] 最开始是可以就是说
[05:16.760 --> 05:18.280] 你可以先立一个milestone
[05:18.280 --> 05:19.480] 就是说你1.0的时候
[05:19.480 --> 05:21.320] 或者说大概在哪个时间段
[05:21.320 --> 05:24.040] 然后你要让cyberbrain支持哪些东西
[05:24.040 --> 05:25.960] 我觉得这样的milestone也是可以的
[05:25.960 --> 05:28.840] 我其实大概有想过了
[05:28.840 --> 05:30.600] 但是只是还没有写出来
[05:30.600 --> 05:32.440] 对可以可以可以
[05:32.440 --> 05:34.520] 做的你的milestone开出来
[05:34.520 --> 05:36.960] 然后到时候就可以吹高了
[05:36.960 --> 05:40.880] 其实我好吧
[05:40.880 --> 05:42.719] 这个可以待会再聊
[05:42.719 --> 05:43.799] 好
[05:43.799 --> 05:47.120] 那我们大家聊完就开始进入今天的正题
[05:47.120 --> 05:49.400] 我们今天要聊什么
[05:49.400 --> 05:51.919] 今天主要是要聊一聊开源
[05:51.919 --> 05:52.440] 对吧
[05:52.440 --> 05:58.919] 其实我们之前几期也有陆陆续续都设计过open source这个话题了
[05:58.919 --> 06:02.280] 但是今天主要是想专门来聊一聊
[06:02.280 --> 06:09.159] 因为我们觉得有很多东西其实是需要一期的时间来专门聊一聊的
[06:09.159 --> 06:09.359] 好
[06:09.359 --> 06:13.880] 那首先我其实是想也是了解一下
[06:13.880 --> 06:21.599] 不知道大家自己公司对待开源以及进行开源都是一个什么样的状态
[06:21.599 --> 06:22.799] 因为对吧
[06:22.799 --> 06:25.359] 我们其实都是在你们是在阿里
[06:25.359 --> 06:26.119] 然后是在google
[06:26.119 --> 06:28.719] 所以我觉得这些公司也有一些开源的库
[06:28.719 --> 06:30.440] 那么实际上
[06:30.440 --> 06:36.200] 就是你们觉得在开源这方面大家公司都是做的怎么样
[06:36.200 --> 06:40.000] 就我来聊一聊就是阿里吧
[06:40.000 --> 06:43.280] 阿里的开源从其实阿里的开源
[06:43.280 --> 06:45.600] 他就是经历也不太算太长
[06:45.600 --> 06:53.120] 而且最开始都是将自己的duobo或者说是fastjson或者说rocketmonkho之类的开源
[06:53.120 --> 06:57.240] 然后其实都是一些重量级的一些中间件或者说其他的
[06:57.240 --> 06:59.440] 而对于开发者常用
[06:59.440 --> 07:01.080] 或者说更关心getcoin
[07:01.080 --> 07:05.560] 就是说是东西其实阿里在开源上面做这块做是实在不够的
[07:05.560 --> 07:07.440] 但是的话他后续的话
[07:07.440 --> 07:11.920] 整个目前就是说是在就是至少是在云这边
[07:11.920 --> 07:15.440] 大家都是意识到开源其实是抢占市场份额
[07:15.440 --> 07:18.159] 或说建立reputation的一个非常好的一个途径
[07:18.159 --> 07:21.400] 所以说目前对于这一块来讲的话
[07:21.400 --> 07:24.720] 整体的就规划和方向是确定了
[07:24.720 --> 07:26.080] 也就类似于微软的
[07:26.080 --> 07:29.080] 就是说是拥抱开源这样的一个东西
[07:29.080 --> 07:30.200] 所以说后续的话
[07:30.200 --> 07:34.359] 不管是在spring或者说是在更多的apache项目
[07:34.359 --> 07:38.680] 或者说将阿里自己本身的一些项目开出来的话
[07:38.680 --> 07:42.000] 后续的话还是有会有更多的大动作的
[07:42.000 --> 07:43.120] 大概是这样一个情况
[07:43.120 --> 07:45.960] 你们开源的话能算到kpi里面吗
[07:45.960 --> 07:50.159] 是有专门的人在负责
[07:50.159 --> 07:56.120] 具体的组织结构不太方便透露
[07:56.120 --> 08:00.960] 但是的话是有专门的一个就是说是一个级别不低的人是在专门做
[08:00.960 --> 08:03.480] 而且这个人的话大家可能都熟悉
[08:03.480 --> 08:05.600] 然后他就叫理想
[08:05.600 --> 08:09.240] 理想的话是在负责云这边的开源的
[08:09.240 --> 08:10.800] 然后理想你们应该认识吧
[08:10.800 --> 08:12.200] 就是etcd的作者
[08:12.200 --> 08:16.560] 然后之前那个csnf的决策者之一
[08:16.560 --> 08:21.760] 然后对然后的话他现在就是在阿里负责这一块的东西
[08:21.760 --> 08:26.880] 我其实想问的是比如说我在工作中发现了
[08:26.880 --> 08:28.039] 比如说Apache有一个bug
[08:28.039 --> 08:30.000] 然后我花了一定时间给它修好了
[08:30.000 --> 08:33.840] 我当然是就可能占用了一定的工作时间
[08:33.840 --> 08:35.799] 这部分能不能记住我的工作量
[08:35.799 --> 08:38.120] 因为我也是间接的对工作有帮助
[08:38.120 --> 08:40.080] 这种东西说实话
[08:40.080 --> 08:43.200] 这种东西我们是以具体的结果来做导向的
[08:43.200 --> 08:47.240] 就说是对我们其实是不记kpi
[08:47.240 --> 08:49.200] 我们是具体的结果
[08:49.200 --> 08:51.920] 就说你做整个事情的东西
[08:51.920 --> 08:53.760] 然后你这个事情中发生了什么东西
[08:53.760 --> 08:54.960] 我们不care about
[08:54.960 --> 08:58.280] 那比如说我只有修了
[08:58.280 --> 08:59.240] 比如说修了这个bug
[08:59.240 --> 09:00.640] 我们这个项目才能做完
[09:00.640 --> 09:01.920] 那这样是不是就可以算
[09:01.920 --> 09:05.840] 其实只要你把项目做完了
[09:05.840 --> 09:07.800] 你做好项目做完做好了
[09:07.800 --> 09:08.920] 你中间发生什么
[09:08.920 --> 09:11.280] 就是说是你的老板或者说你
[09:11.280 --> 09:12.760] 然后你晋升的时候
[09:12.760 --> 09:16.080] 你可以说晋升你作为一个你技术佐深的谈资
[09:16.080 --> 09:18.960] 但是实际上评委并不care
[09:18.960 --> 09:21.240] 你在做这些东西的时候是发生了什么
[09:21.240 --> 09:23.040] OK
[09:24.600 --> 09:25.240] 行
[09:25.240 --> 09:27.600] 这还是有点悲伤
[09:27.600 --> 09:31.480] 是除非是专门去做维护开源的组的话
[09:31.480 --> 09:33.840] 所以说我觉得可能在国内公司里面
[09:33.840 --> 09:36.400] 这种情况的话都没有记入kpi
[09:36.400 --> 09:38.520] 新涛你那边有什么想说的
[09:38.520 --> 09:39.480] 应该查好
[09:39.480 --> 09:41.840] 对我可以给大家分享一个数据
[09:41.840 --> 09:44.200] 就是到今年的3月22日
[09:44.200 --> 09:48.960] 阿里开源的总项目是1243个
[09:48.960 --> 09:51.640] 百度是746个
[09:51.640 --> 09:53.520] 腾讯是131个
[09:53.520 --> 09:57.840] 所以阿里在开源这方面开源的项目是比较多的
[09:57.840 --> 10:00.120] 但是阿里巴巴在一年半以上
[10:00.120 --> 10:04.640] 没有新的commit的项目有761个
[10:04.640 --> 10:09.000] 比百度开源的总项目还多
[10:09.000 --> 10:13.000] 也就是说其实大部分项目都只是开完就完了
[10:13.000 --> 10:14.520] 对有点不负责任
[10:14.520 --> 10:17.480] 就是有很多项目比如说OB
[10:17.480 --> 10:19.680] Tail
[10:19.680 --> 10:21.920] 阿里巴巴下面有个Tail项目
[10:21.920 --> 10:23.280] 是我们的缓存项目
[10:23.280 --> 10:27.320] 那些开源就是开出来之后没有任何的issue
[10:27.320 --> 10:28.960] 有issue也是问文档在哪里
[10:28.960 --> 10:30.840] 没有文档没有issue没有pr
[10:30.840 --> 10:32.120] 没有后续的commit
[10:32.120 --> 10:33.520] 就commit基本上只有一个
[10:33.520 --> 10:38.560] 然后把那个项目基本上相当于是上传到Github
[10:38.560 --> 10:39.680] 然后就没有了
[10:39.680 --> 10:44.479] 然后可能对我们一些产品或者技术的宣传有意义
[10:44.479 --> 10:46.560] 有一部分是这样的
[10:46.560 --> 10:49.439] 那我有个问题就是说你刚才说这个缓存的项目
[10:49.439 --> 10:51.400] 它本身在内部还在更新吗
[10:51.400 --> 10:51.920] 更新了
[10:51.920 --> 10:55.239] 是内部的基础设施之一
[10:55.239 --> 10:58.120] 这种情况其实在谷歌也有
[10:58.120 --> 11:00.000] 就是有一些项目我可以明显的看到
[11:00.000 --> 11:04.000] 内部有很多的commit都没有同步到Github上去
[11:04.000 --> 11:05.079] 是这样的
[11:05.079 --> 11:08.599] 对就比如说Kubernetes对吧
[11:08.600 --> 11:10.800] 外部的好像也没有同步到你们内部去
[11:10.800 --> 11:14.040] 这我就不知道
[11:14.040 --> 11:16.640] 好像他是从一开始你们里面分裂出来之后
[11:16.640 --> 11:19.600] 就一直在看源这边发展的比较好吗
[11:19.600 --> 11:22.080] 其实我觉得这就是一个运营的问题了
[11:22.080 --> 11:23.680] 这就是一个运营策略
[11:23.680 --> 11:25.800] 或者说是对一个项目定位的问题了
[11:25.800 --> 11:27.800] 其实有个昌明赵助的事件嘛
[11:27.800 --> 11:28.520] NTD
[11:28.520 --> 11:30.680] 是的
[11:30.680 --> 11:32.520] 我们想聊一下
[11:32.520 --> 11:37.520] 你要不给不知道NTD事件的听众来介绍一下
[11:37.520 --> 11:39.880] 是这样蚂蚁金服
[11:39.880 --> 11:41.520] 新涛熟悉吗
[11:41.520 --> 11:43.120] 因为这是你们蚂蚁金服的
[11:43.120 --> 11:44.000] 我挺熟悉的
[11:44.000 --> 11:47.920] 那你来给这个来由蚂蚁的同事
[11:47.920 --> 11:50.240] 给蚂蚁的朋友来给大家介绍一下
[11:50.240 --> 11:51.960] 来源于蚂蚁的NTD事件
[11:51.960 --> 11:53.480] 这样会不会有点
[11:53.480 --> 11:55.360] 你要觉得不好介绍
[11:55.360 --> 11:56.040] 我就来介绍
[11:56.040 --> 11:58.040] 可以没问题
[11:58.040 --> 12:00.920] 因为这个是不涉及公司内部信息
[12:00.920 --> 12:02.079] 因为大家都知道的嘛
[12:02.079 --> 12:02.760] 那行那行
[12:02.760 --> 12:06.880] 就是NTD是一个蚂蚁的react的前端的UI库
[12:06.880 --> 12:08.880] 就相当于Twitter的bootstrap
[12:08.880 --> 12:11.840] 然后这个库在用用的比较广泛
[12:11.840 --> 12:13.920] 这部分开源做的比较好
[12:13.920 --> 12:16.960] 其实我觉得整个阿里巴巴做的最好的开源
[12:16.960 --> 12:20.640] 是蚂蚁的前端那些人做的挺好的
[12:20.640 --> 12:24.640] 然后这个库在什么时间
[12:24.640 --> 12:25.120] 今年
[12:25.120 --> 12:27.400] 去年
[12:27.400 --> 12:28.720] 对去年
[12:28.720 --> 12:31.760] 就是有一个commit里面加了一个彩蛋
[12:31.760 --> 12:33.440] 这个彩蛋会影响一个
[12:33.440 --> 12:37.120] 一些组件的展示的元素的效果
[12:37.120 --> 12:39.520] 这个是没有被写到文档里面去的
[12:39.520 --> 12:43.800] 然后经过没有严格的code review
[12:43.800 --> 12:45.120] 就被合并到master了
[12:45.120 --> 12:47.720] 然后那个彩蛋会是定时触发
[12:47.720 --> 12:50.000] 所以到圣诞节那一天
[12:50.000 --> 12:51.200] 因为时间判断到了
[12:51.200 --> 12:53.520] 那一天这个库的
[12:53.520 --> 12:58.240] 整个CSS元素就会改变一下
[12:58.240 --> 13:00.240] 就是有一些button会有雪花的效果
[13:00.240 --> 13:05.360] 然后有一些alt好像那个文字会改变
[13:05.360 --> 13:10.640] 就是涉及到accessibility的一些文字会改变
[13:10.640 --> 13:14.320] 所以这个是没有在文档上说明的
[13:14.320 --> 13:15.360] 大家预期之外的
[13:15.360 --> 13:19.760] 所以就导致了很多网站的展示
[13:19.760 --> 13:22.880] 用了react的undid
[13:22.880 --> 13:29.520] 那一天就突然网站的button的样式就改变了
[13:29.520 --> 13:33.520] 所以引起了很多人不满
[13:33.520 --> 13:38.319] 然后跟进一下
[13:38.319 --> 13:40.400] 当时其实并不是没有经过review
[13:40.400 --> 13:42.640] 而是直接就说是跳过了review
[13:42.640 --> 13:43.520] 他是没有review
[13:43.520 --> 13:44.720] 他是直接push了master
[13:44.720 --> 13:45.760] 不是
[13:45.760 --> 13:47.360] 我是看过那个PR的
[13:47.360 --> 13:48.160] 是有review的
[13:48.160 --> 13:50.160] 是这样的
[13:50.160 --> 13:54.160] 就是他那个commit提交的人应该是属于
[13:54.160 --> 13:56.160] antd的一个leader
[13:56.160 --> 13:59.920] 应该叫偏右
[13:59.920 --> 14:03.600] 然后我看过那个commit
[14:03.600 --> 14:05.600] 底下应该是他的
[14:05.600 --> 14:09.760] 可能他带的人或者是同级的人
[14:09.760 --> 14:12.319] 然后就基本是我觉得ok
[14:12.319 --> 14:13.760] 然后挺不错的
[14:13.760 --> 14:14.400] 就是这样
[14:14.400 --> 14:16.000] 其实是有review
[14:16.000 --> 14:17.920] 只不过是比较留于形式
[14:17.920 --> 14:18.880] 然后就交进去了
[14:18.880 --> 14:19.280] 这样
[14:19.280 --> 14:20.240] ok明白
[14:20.240 --> 14:25.040] 所以其实这个我觉得也是一个教训
[14:25.040 --> 14:27.040] 我觉得对于他们的团队
[14:27.040 --> 14:29.680] 或者是整个搞开源的
[14:29.680 --> 14:32.000] 大公司搞开源来说
[14:32.000 --> 14:34.560] 都是一个应以为戒的事情
[14:34.560 --> 14:35.760] 是的
[14:35.760 --> 14:37.520] 这个我觉得影响挺大的
[14:37.520 --> 14:40.880] 因为比如说那天一些党政办公室
[14:40.880 --> 14:42.079] 因为党政办公室
[14:42.079 --> 14:44.000] 因为去年有个那个
[14:44.000 --> 14:46.000] 就是说是环境比较特殊
[14:46.000 --> 14:48.880] 是当时大家提倡过不要过洋节
[14:48.880 --> 14:49.839] 要四个自信
[14:49.839 --> 14:52.319] 然后结果圣诞节那一天
[14:52.320 --> 14:55.200] 一堆的党政的网站
[14:55.200 --> 14:57.440] 比如说湖南省党时望什么的
[14:57.440 --> 14:59.680] 然后看到button上面
[14:59.680 --> 15:01.680] 然后来庆祝圣诞节来了
[15:01.680 --> 15:05.280] 然后有一些房间消息说
[15:05.280 --> 15:06.800] 有一些在中东的程序员
[15:06.800 --> 15:08.240] 然后最后很惨
[15:08.240 --> 15:10.320] 因为信仰冲突
[15:10.320 --> 15:15.680] 而且其实他们当时都
[15:15.680 --> 15:18.960] 你如果不是真的是知道
[15:18.960 --> 15:20.320] 这是一个圣诞节彩蛋
[15:20.320 --> 15:22.080] 你甚至都不知道它跟圣诞节有关
[15:22.080 --> 15:24.880] 它就是一个像一片云一样
[15:24.880 --> 15:26.400] 覆盖在button上面
[15:26.400 --> 15:27.520] 你也不知道那是啥
[15:27.520 --> 15:29.920] 然后不知道是出bug了还是什么
[15:29.920 --> 15:32.080] 就是一头雾水
[15:32.080 --> 15:33.920] 对是这样
[15:33.920 --> 15:35.280] 安提地其实原本
[15:35.280 --> 15:36.960] 他其实还有个很大的
[15:36.960 --> 15:38.480] 当时被吐槽很凶的
[15:38.480 --> 15:40.480] 我想想帮助残疾人
[15:40.480 --> 15:41.360] 那个叫什么来着
[15:41.360 --> 15:42.320] 那个属于
[15:42.320 --> 15:43.600] 就accessibility
[15:43.600 --> 15:48.240] 对accessibility其实做的不错的
[15:48.240 --> 15:51.200] 但是他突然加了button之后
[15:51.200 --> 15:52.720] 然后一大堆盲人
[15:52.720 --> 15:55.440] 需要依靠屏幕阅读器来阅读的
[15:55.440 --> 15:57.040] 然后突然一下读着
[15:57.040 --> 16:00.160] 然后XXXXX雪花雪花雪花雪花
[16:00.160 --> 16:01.360] 然后XXX
[16:01.360 --> 16:03.440] 对整个的话就体现贼他
[16:03.440 --> 16:04.880] 是的是的
[16:04.880 --> 16:08.160] 他应该听众也知道
[16:08.160 --> 16:09.360] 就是你一个button
[16:09.360 --> 16:10.800] 它会有一个那种
[16:10.800 --> 16:12.480] 包括一段文字
[16:12.480 --> 16:13.840] 它会有一个那种alt嘛
[16:13.840 --> 16:15.120] 就是alternative属性
[16:15.120 --> 16:17.040] 就是相当于当你这个button
[16:17.040 --> 16:18.240] 如果显示不出来的话
[16:18.240 --> 16:20.640] 它会显示这段文字作为替代
[16:20.640 --> 16:22.480] 那么一些就是比如说
[16:22.480 --> 16:27.439] 辅助有辅助视障人群阅读的软件
[16:27.439 --> 16:31.280] 他就会去读这个alternative这段文字
[16:31.280 --> 16:32.800] 然后相当于把它读出来
[16:32.800 --> 16:34.400] 这样的话你即使眼睛看不见
[16:34.400 --> 16:36.560] 也知道这个button上说的是什么
[16:36.560 --> 16:38.240] 那他当时这个彩蛋
[16:38.240 --> 16:39.680] 他把那段文字改成了
[16:39.680 --> 16:43.040] 那个XXX就是XXX
[16:43.040 --> 16:44.960] 就是圣诞老人的这个笑声
[16:44.960 --> 16:46.160] 然后就
[16:46.160 --> 16:49.200] 你可以想象一下
[16:49.200 --> 16:52.080] 然后你是一个盲人
[16:52.080 --> 16:54.800] 你蒙着眼睛开启了屏幕阅读器
[16:54.800 --> 16:56.640] 然后正在阅读的比如说
[16:56.640 --> 16:58.800] 阿里支付宝
[16:58.800 --> 17:04.560] 然后一下就是这个东西的话
[17:04.560 --> 17:06.480] 所以说最后的话
[17:06.480 --> 17:08.160] 那一步其实也在反思
[17:08.160 --> 17:09.200] 然后最后的话
[17:09.200 --> 17:12.240] 然后整体的对于整体下来
[17:12.240 --> 17:13.520] 对于这个事情的话
[17:13.520 --> 17:15.840] 可以说教训也是其实挺惨痛的
[17:15.840 --> 17:17.600] 至少说句不负责任的话
[17:17.599 --> 17:19.359] 这件事其实让整个品牌
[17:19.359 --> 17:20.639] 然后声誉大跌了
[17:20.639 --> 17:22.240] 不止一年或两年这种
[17:22.240 --> 17:24.240] 反正就是说是包括现在这个东西
[17:24.240 --> 17:27.439] 依旧是成为大家茶余饭后谈论的一个梗
[17:27.439 --> 17:30.639] 好像他们是背了3.25是吧
[17:30.639 --> 17:31.199] 是的
[17:31.199 --> 17:33.919] 然后他们的老大是叫做玉博
[17:33.919 --> 17:37.600] 大家应该是都可能比较
[17:37.600 --> 17:40.719] 对玉博是背了全年3.25的
[17:40.719 --> 17:41.840] 好吧
[17:41.840 --> 17:44.320] 反正我觉得就是大家如果
[17:44.320 --> 17:45.919] 不管你是公司里搞开源
[17:45.919 --> 17:46.719] 还是个人搞开源
[17:46.720 --> 17:48.800] 还是要对自己项目负责
[17:48.800 --> 17:49.920] 我觉得就是这样子
[17:49.920 --> 17:52.000] 对其实一句话就说是用户至上
[17:52.000 --> 17:56.720] OK我来聊一下Google的开源的情况
[17:56.720 --> 18:00.000] 我觉得听你们刚才说阿里的情况
[18:00.000 --> 18:01.440] 我觉得Google是正好相反的
[18:01.440 --> 18:04.960] 应该是指澳刚才说
[18:04.960 --> 18:08.880] 阿里是开源很多中间件相关的
[18:08.880 --> 18:13.680] 然后这些应该都是算比较偏基础的
[18:13.680 --> 18:15.280] 这种框架
[18:15.280 --> 18:18.000] 或者服务对吧
[18:18.000 --> 18:22.080] 然后我感觉Google的开源
[18:22.080 --> 18:26.879] 就是它比较倾向于开源一些那种
[18:26.879 --> 18:28.480] 比如说一个CR家的库
[18:28.480 --> 18:31.360] 或者是一个什么python的小工具
[18:31.360 --> 18:33.680] 就比如说pytype
[18:33.680 --> 18:36.800] 就是也是一个python的type checker
[18:36.800 --> 18:40.080] 就是这种不太依赖于内部一些
[18:40.080 --> 18:43.920] 其他系统的可以独立运行的东西
[18:43.920 --> 18:46.000] 这是给我一个总体的感觉
[18:46.000 --> 18:49.360] 那像内部很多用的这种
[18:49.360 --> 18:51.360] 当然kubernetes这个是开源的
[18:51.360 --> 18:52.560] 这个是例外
[18:52.560 --> 18:54.640] 但像内部用的很多其他东西
[18:54.640 --> 18:56.160] 比如说当年的那些
[18:56.160 --> 18:57.600] 像bigtable gfs
[18:57.600 --> 19:00.240] 这个就三大论文其实都没有开源
[19:00.240 --> 19:02.880] 都是后面的人根据论文来实现的
[19:02.880 --> 19:06.240] 然后包括现在像替代当年Hadoop的
[19:06.240 --> 19:08.320] 一个东西叫做叫做flume
[19:08.320 --> 19:12.480] 是一个新的就是数据处理的框架
[19:12.480 --> 19:14.240] 这个东西也是没有开源的
[19:14.240 --> 19:16.480] 然后基本上内部用的这些
[19:16.480 --> 19:19.760] 比较偏底层的东西都是没有开源的
[19:19.760 --> 19:22.800] 所以我觉得这个就很不一样
[19:22.800 --> 19:26.800] 你知道为什么会这样吗
[19:26.800 --> 19:29.040] 就他我大概也能理解
[19:29.040 --> 19:30.800] 他比如说想开源一些
[19:30.800 --> 19:32.080] 有很多依赖的东西很难
[19:32.080 --> 19:33.200] 他很难剥离出来
[19:33.200 --> 19:34.240] 对我也觉得是
[19:34.240 --> 19:36.400] 因为你用谷歌我是能理解的
[19:36.400 --> 19:38.240] bug什么的都是一大套
[19:38.240 --> 19:39.680] 我也觉得可能是因为这样
[19:39.680 --> 19:42.240] 但是就是这么个意思
[19:42.240 --> 19:43.920] 就是我开源出来你也没法用
[19:43.920 --> 19:45.440] 对吧你没有我的其他东西
[19:47.440 --> 19:50.320] 对吧但是对对很可能是这样一个状况
[19:51.520 --> 19:53.200] 阿里巴巴其他的一些中介件
[19:53.200 --> 19:54.320] 我觉得也是这样
[19:54.320 --> 19:56.160] 但是他们不管我们又没有文档
[19:56.160 --> 19:58.560] 反正我开源出来我就知道你跑不起来
[20:02.880 --> 20:04.960] 我们俩感觉我们俩这一次
[20:04.960 --> 20:08.160] 这些节目之后要去被政委约谈了
[20:08.160 --> 20:09.360] 价值观有问题
[20:09.360 --> 20:10.720] 对
[20:10.720 --> 20:16.000] 然后感觉我们开源了一个比较偏底层
[20:16.000 --> 20:17.440] 也在用的就是那个bezo
[20:17.440 --> 20:20.560] 就是那个构建工具对吧
[20:20.560 --> 20:23.040] 构建工具对这个是我们在用的
[20:23.040 --> 20:24.560] 虽然内部它叫blades
[20:24.560 --> 20:25.200] 它不叫bezo
[20:25.200 --> 20:27.760] 但是反正我觉得这个算是
[20:27.760 --> 20:30.400] 我觉得唯一一个比较偏底层开源出来的
[20:30.400 --> 20:33.680] 其实我觉得这种东西
[20:33.680 --> 20:35.600] 可能两家公司的思路不太同
[20:35.600 --> 20:39.200] 因为就是说是阿里其实是想
[20:39.200 --> 20:43.440] 我自己然后其实想猜测的话
[20:43.440 --> 20:46.640] 是想通过就是说开源底层的一些
[20:46.640 --> 20:49.040] 就比如说阿里的dubo
[20:49.040 --> 20:51.600] 就是那个java的那一套RPC空架
[20:51.600 --> 20:54.240] 然后的话就说是dubo
[20:54.240 --> 20:56.320] 或者说是在开源rocket mco
[20:56.320 --> 20:57.360] 或者是其他的东西
[20:57.360 --> 21:02.560] 他想通过这些去底层之后
[21:02.560 --> 21:04.800] 然后让开发者熟悉阿里的技术
[21:04.800 --> 21:07.200] 在某种意义上达到了一种构建标准
[21:07.200 --> 21:10.240] 或者说是更好迁移招人这样一种目的
[21:10.240 --> 21:13.040] dubo好像用的还蛮广的
[21:13.040 --> 21:14.880] 是国内用的挺多很多
[21:14.880 --> 21:16.000] 然后就说dubo
[21:16.000 --> 21:17.760] 原本阿里废弃了一段时间
[21:17.760 --> 21:19.520] 然后看到国内用的这么多
[21:19.520 --> 21:20.960] 然后算了重新启动起来
[21:20.960 --> 21:22.800] 有专门人现在开始维护开源了
[21:22.800 --> 21:24.880] 我想起来了
[21:24.880 --> 21:26.080] Google也有这种状况
[21:26.080 --> 21:27.920] 你们知道GRPC对吧
[21:27.920 --> 21:30.240] 对
[21:30.240 --> 21:34.000] 我们内部用的那套RPC的框架
[21:34.000 --> 21:36.080] 其实不是GRPC
[21:36.080 --> 21:38.960] GRPC相当于只是开源的
[21:38.960 --> 21:41.840] 然后但是现在他们好像是想把
[21:41.840 --> 21:44.639] 用GRPC替代掉内部那个版本
[21:44.639 --> 21:48.000] 我觉得就是和你说的特别像
[21:48.000 --> 21:49.840] 墙内开花墙外香
[21:49.840 --> 21:54.000] 但其实我觉得RPC框架这种还
[21:54.000 --> 21:55.760] 就不算那么底层
[21:55.760 --> 21:57.199] 就还算比较独立的
[21:57.199 --> 21:59.919] 这倒也是
[21:59.919 --> 22:00.480] 然后对
[22:00.480 --> 22:03.040] 但是阿里其实开源了很多奇奇怪怪的东西
[22:03.040 --> 22:05.040] 就比如说刚才新淘说的Tier
[22:05.040 --> 22:06.240] 我就知道你跑不起来
[22:06.240 --> 22:08.080] 我只是给你看一下代码而已
[22:08.080 --> 22:09.440] 对
[22:09.440 --> 22:10.639] 然后公司的开源
[22:10.639 --> 22:11.920] 我们差不多就聊到这里
[22:11.920 --> 22:13.200] 然后对吧
[22:13.200 --> 22:15.360] 我们是我们是不舍者说
[22:15.360 --> 22:18.240] 所以我们当然是要聊一聊和Python相关的东西
[22:18.240 --> 22:20.159] 那么众所周知的话
[22:20.159 --> 22:22.960] Python本身也是一个开源项目
[22:22.960 --> 22:24.720] 当然我们指的是cPython
[22:24.720 --> 22:25.200] 对
[22:25.200 --> 22:27.680] 那么这块的开源
[22:27.680 --> 22:30.960] 我并不是很确定应该用一个什么词来概括
[22:30.960 --> 22:36.720] 但是我暂且是概括成叫非盈利性组织的开源
[22:36.720 --> 22:38.240] 就比如说Python
[22:38.240 --> 22:38.880] Rust
[22:38.880 --> 22:41.360] 然后Ruby这些
[22:41.360 --> 22:43.280] 这些以这些语言为代表了
[22:43.280 --> 22:48.400] 然后我不知道你们对于这些组织的开源怎么看
[22:48.400 --> 22:51.200] 因为我觉得他们和大公司还蛮不一样的
[22:51.200 --> 22:53.600] 首先说一下Python这种开源
[22:53.600 --> 22:55.840] 它其实是一个开源项目的必经
[22:55.840 --> 22:59.120] 它最开始是由个人开始做的
[22:59.120 --> 23:01.439] 就是说是由Git开始做的
[23:01.439 --> 23:05.040] 大概在那个2000年初的时候
[23:05.040 --> 23:07.439] 2.1 2.2版本的时候
[23:07.439 --> 23:08.959] PSF正式成立了
[23:08.959 --> 23:11.199] 然后PSF正式成立之后
[23:11.199 --> 23:13.600] 然后这个东西后续的Python
[23:13.600 --> 23:16.959] 它的所有权其实是属于属于PSF的
[23:16.959 --> 23:19.840] 就是所谓的Python software foundation
[23:19.840 --> 23:22.719] 然后就是由PSF来运作
[23:22.719 --> 23:24.879] 整体cPython的法律
[23:24.879 --> 23:26.159] 然后代码
[23:26.159 --> 23:27.600] 然后以及相关的东西
[23:27.600 --> 23:30.480] 它的话就又可以叫做NGO
[23:30.480 --> 23:31.760] 又可以叫做NPO
[23:31.760 --> 23:34.320] 就是说是非政府非隐匿性组织
[23:34.320 --> 23:38.159] 对大概就是这样一个情况
[23:38.159 --> 23:39.439] 是的
[23:39.439 --> 23:44.879] 然后其实我感觉就我们就拿这些编程语言来说
[23:44.879 --> 23:48.639] 我觉得像就都是编程语言
[23:48.639 --> 23:51.840] 也有一些就他们的组织模式好像还挺不一样的
[23:51.840 --> 23:54.159] 就比如说像你像斯嘉佳
[23:54.160 --> 23:57.840] 他是一个由委员会来定语言的标准
[23:57.840 --> 24:02.400] 然后由各个的就是编译器自己去实现这些标准
[24:02.400 --> 24:05.120] 然后Python就是有一个叫参考实现
[24:05.120 --> 24:06.240] 就是cPython
[24:06.240 --> 24:07.680] 感觉还蛮不一样的
[24:07.680 --> 24:08.240] 对
[24:08.240 --> 24:12.000] 我觉得可能这种东西的话
[24:12.000 --> 24:16.960] 这种东西可能要看当时最开始诞生时候的相关背景
[24:16.960 --> 24:20.720] 然后Python最开始它其实就是一个个人项目
[24:20.720 --> 24:22.400] 其实你看到现在的话
[24:22.400 --> 24:26.000] 就说是Python它实际上是没有一个通行的标准的
[24:26.000 --> 24:28.160] 就是没有一个比如说像Cshub
[24:28.160 --> 24:30.960] 比如说像C++这种IEEE的标准
[24:30.960 --> 24:32.320] IEEE的标准
[24:32.320 --> 24:33.120] 是的
[24:33.120 --> 24:35.040] 对说一说这种东西的话
[24:35.040 --> 24:38.400] 其实是要看它一个项目的背景
[24:38.400 --> 24:39.680] 就最开始创立的背景
[24:39.680 --> 24:42.880] 然后而Python就开始可能就说我只是说我giddle
[24:42.880 --> 24:44.480] 圣诞节假期无聊
[24:44.480 --> 24:46.400] 然后花了一个星期创了一个Python
[24:46.400 --> 24:47.840] 然后就这种大概是这样
[24:47.840 --> 24:50.160] 他真的只用了一个星期吗
[24:50.160 --> 24:53.120] 我觉得我还一直挺怀疑的
[24:53.120 --> 24:54.480] 我也挺怀疑的
[24:54.480 --> 24:55.680] 对
[24:55.680 --> 24:58.880] 然后其实的话我不知道你们想就说是
[24:58.880 --> 25:02.240] 就对于这块有怎么样想吐槽的地方没有
[25:02.240 --> 25:10.400] 我觉得就是这种非盈利性组织主导的语言
[25:10.400 --> 25:12.320] 就会比较缺founding
[25:12.320 --> 25:14.560] 主要就是这个了
[25:14.560 --> 25:16.080] 这是
[25:16.080 --> 25:18.000] 对你像Java它
[25:18.000 --> 25:22.800] 因为一开始Java刚出来的时候是被诟病有很多问题
[25:22.800 --> 25:23.840] 比如很慢什么
[25:23.840 --> 25:27.040] 但是它有公司在后面支持
[25:27.040 --> 25:33.040] 你这些年你投入人力投入投入时间的还是能赶上来的
[25:33.040 --> 25:35.280] 像Python就没有这种
[25:35.280 --> 25:37.680] 感觉这方面支持就缺乏一点
[25:37.680 --> 25:39.440] 大家都是义无劳动
[25:39.440 --> 25:43.520] 但是其实我觉得的话并不一定
[25:43.520 --> 25:46.160] 并不一定是要依靠基金会的founding
[25:46.160 --> 25:51.760] 而是依靠后面社区里面有多少有企业背景的人
[25:51.760 --> 25:53.840] 其实是Java其实是个很好的例子
[25:53.840 --> 25:57.200] 其实你看OpenJDK它其实发展的一直是挺不错的
[25:57.200 --> 26:01.040] 但是相对应的JDK也是显然是Olec在运作
[26:01.040 --> 26:02.640] 而OpenJDK的话
[26:02.640 --> 26:08.080] 就是说是当时为了避免Olec的法律相关的问题
[26:08.080 --> 26:10.160] 然后分裂出来的一个版本
[26:10.160 --> 26:14.480] 而OpenJDK的话其实现在发展的还是很不错的
[26:14.480 --> 26:17.040] 所以说这个东西的话我觉得并不
[26:17.040 --> 26:20.880] 基金会的founding可能说只是其中的一部分
[26:20.880 --> 26:23.680] 但是要看依靠更多的还是要看其他的因素
[26:23.680 --> 26:26.640] 这个我还挺好奇的
[26:26.640 --> 26:31.200] 像Java它的标准到底是Olec定呢
[26:31.200 --> 26:32.800] 还是OpenJDK
[26:32.800 --> 26:34.720] OpenJDK只是个实现是吧
[26:34.720 --> 26:36.240] 是的只是个实现
[26:36.240 --> 26:37.040] 社区实现
[26:37.040 --> 26:40.640] 因为当时就是说是JDK上被Olec收购之后
[26:40.640 --> 26:44.080] 然后社区为了避免Olec的一家独大
[26:44.080 --> 26:47.280] 然后分裂出来的一个版本
[26:47.280 --> 26:50.720] 就类似于MySql和MayaDB那个出来一样的
[26:50.720 --> 26:54.080] 就比如说我有一个Java想加一个新feature
[26:54.080 --> 26:55.919] 在Java比如说Java12里面
[26:55.919 --> 26:58.800] 那还是得是由Oracle来提出对吧
[26:58.800 --> 27:01.360] 而不是说社区提出
[27:01.360 --> 27:03.760] Java应该也是有一个委员会的
[27:03.760 --> 27:06.480] 是有个委员会的
[27:06.480 --> 27:10.399] 然后这个地方的话我觉得应该是可以双向的
[27:10.399 --> 27:13.199] 因为其实现在这两个东西其实互动很多的
[27:13.200 --> 27:14.160] 比如说我举个例子
[27:14.160 --> 27:20.000] 就比如说大家都知道我之前去Docker里面
[27:20.000 --> 27:21.200] 就是说Docker里面
[27:21.200 --> 27:25.200] 就是说是正确的获取CPU内存的数量这个东西对吧
[27:25.200 --> 27:29.680] 然后这个东西最早是OpenJDK先实现的
[27:29.680 --> 27:32.880] 然后OpenJDK最后的话JDK标准JDK
[27:32.880 --> 27:35.280] 然后把这个东西也吸纳进去了
[27:35.280 --> 27:38.640] 然后最后对然后官方还在上面推荐了
[27:38.640 --> 27:40.800] 你们可以去看看OpenJDK的相关实现
[27:40.800 --> 27:43.520] 他们还蛮开放的
[27:43.520 --> 27:46.960] 没有就是说OpenJDK是我的死敌这种感觉
[27:46.960 --> 27:48.720] 没有其实他们的东西的话
[27:48.720 --> 27:51.840] 其实就是说是相对于他们其实互补的东西挺多的
[27:51.840 --> 27:54.000] 当然这个又是另外一个话题了
[27:54.000 --> 27:57.600] 所以说我觉得非引力性这个东西要聊出什么来
[27:57.600 --> 27:58.720] 我觉得也不太可能
[27:58.720 --> 28:03.360] 因为这个东西后面的背景和博弈来说都太复杂了
[28:03.360 --> 28:06.159] 对我只是提一下
[28:06.159 --> 28:08.960] 因为感觉是有这些项目存在
[28:08.960 --> 28:10.880] 信涛你有什么要补充的吗
[28:13.200 --> 28:16.320] 信涛我看到信涛都快睡着了怎么办
[28:16.320 --> 28:17.920] 没有没有没有
[28:17.920 --> 28:20.160] 我有点卡我在听你们说
[28:20.160 --> 28:22.720] 好吧那好那你既然没有要补充
[28:22.720 --> 28:24.960] 那我们下一个话题你肯定有很多要聊的
[28:24.960 --> 28:28.400] 我们下面想聊一下就是个人的开源
[28:28.400 --> 28:31.520] 对吧因为我个人的开源的话
[28:31.520 --> 28:33.920] 这个我们知道赖心涛之前是
[28:33.920 --> 28:37.280] 刚才他也介绍了做一个叫iRedis的东西了
[28:37.280 --> 28:40.240] 当然我觉得他应该也做过很多其他的开源项目
[28:40.240 --> 28:42.879] 那你要不要来给大家聊一聊自己开源的经历
[28:42.879 --> 28:45.520] 对我们至于要额外补充一下
[28:45.520 --> 28:48.800] iRedis现在是Redis官方推荐的一个非常优美的客户
[28:48.800 --> 28:50.720] 大家可以去使用一下
[28:50.720 --> 28:53.200] 好了信涛等一下50块钱广告费
[28:53.200 --> 28:56.080] 请一人打到我和like9m的账户里面
[28:56.080 --> 28:56.720] 谢谢
[28:56.720 --> 28:58.320] 其实没有
[28:58.320 --> 29:02.000] 其实Redis那帮人应该都知道这个客户
[29:02.000 --> 29:05.360] 然后我只是给他们官方的网站不是开源的
[29:05.360 --> 29:08.080] 我只是PR过去我的介绍
[29:08.080 --> 29:10.159] 然后一些相关的资料
[29:10.159 --> 29:12.479] 然后他们就很高兴的接受了
[29:12.479 --> 29:14.479] 其实他们接受了很多客户端的
[29:14.479 --> 29:16.800] 有各种稀奇古怪的东西
[29:16.800 --> 29:19.280] 我在里面发现了不少很有意思的客户
[29:19.280 --> 29:20.560] 还有一个Bash客户端
[29:20.560 --> 29:22.240] 还有那个Fortune客户端
[29:22.240 --> 29:26.560] Fortune客户端
[29:26.560 --> 29:28.399] 对用Fortune写的吗
[29:28.399 --> 29:30.479] 对就像Redis派一样
[29:30.479 --> 29:32.719] 因为Redis你需要派成客户端
[29:32.719 --> 29:34.560] 对吧他有各种语言的客户端
[29:34.560 --> 29:36.480] 那感觉还是有点好玩的
[29:36.480 --> 29:40.480] 你说的客户端和CLI是一个东西吗
[29:40.480 --> 29:41.919] 不是一个东西
[29:41.919 --> 29:44.320] 那个是CLI客户端
[29:44.320 --> 29:45.679] 还有GUI客户端
[29:45.679 --> 29:47.840] 但我说的是相当于语言的SDK
[29:47.840 --> 29:50.399] 有Java的Rust Python Go
[29:50.399 --> 29:52.000] 你如果想用Redis
[29:52.000 --> 29:55.360] 你肯定要用一个这个语言的封装的SDK
[29:55.360 --> 29:55.919] 对吧
[29:55.919 --> 29:58.240] 然后他还有其他的客户端相当于
[29:58.240 --> 30:00.320] CLI的客户端有一些
[30:00.320 --> 30:02.159] 然后有GUI的客户端有一些
[30:02.159 --> 30:04.480] 好像有一个商业公司就专门在做
[30:04.480 --> 30:06.640] Redis的GUI客户端的
[30:06.640 --> 30:08.640] 是的没错
[30:08.640 --> 30:10.160] 然后他们的收费还不便宜
[30:10.160 --> 30:11.760] 好像是几十到一年来着
[30:11.760 --> 30:14.240] 对
[30:14.240 --> 30:17.840] 然后我可以聊一下我开源的经历
[30:17.840 --> 30:20.960] 其实这个就不透露那个了
[30:20.960 --> 30:23.680] 因为我之前想写一个就是
[30:23.680 --> 30:25.920] 自己用的服务
[30:25.920 --> 30:27.280] 然后用这个服务的时候
[30:27.280 --> 30:30.240] 我发现我需要用其他的一些工具
[30:30.240 --> 30:32.320] 比如说Redis salary
[30:32.320 --> 30:33.840] 我肯定是想用的
[30:33.840 --> 30:38.480] 这个是Jungle那一套会比较用起来比较爽的一套东西
[30:38.480 --> 30:42.000] 然后用Jungle的Redis framework的API
[30:42.000 --> 30:44.560] 然后用这些东西的时候
[30:44.560 --> 30:48.240] 你会发现这里面有要么有文档不全的地方
[30:48.240 --> 30:51.120] 要么有实现里面有一点问题的地方
[30:51.120 --> 30:53.600] 所以那个时候我就感觉
[30:53.600 --> 30:55.199] 我不光是在写自己的项目
[30:55.199 --> 30:57.760] 我还要去各种修改其他人的项目
[30:57.760 --> 31:01.679] 然后我发现其实这个不光是我一个人这样
[31:01.680 --> 31:04.560] 这是好多大家在写自己的开源项目的时候
[31:04.560 --> 31:08.480] 都会去或多或少的去影响上一个项目
[31:08.480 --> 31:10.640] 这应该是一个事实
[31:10.640 --> 31:13.360] 就是开源不是一个项目的开源
[31:13.360 --> 31:20.880] 而是说你会带动其他就是一系列项目的开源
[31:20.880 --> 31:22.800] 你会去给他们提交issue
[31:22.800 --> 31:24.080] 告诉他们这个项目的问题
[31:24.080 --> 31:26.000] 会给他们帮助他们提高文档
[31:26.000 --> 31:28.880] 或者修复一些bug fix
[31:28.880 --> 31:30.480] 或者提交新的feature之类的
[31:30.480 --> 31:33.440] 其中celery有一个我特别想要的feature
[31:33.440 --> 31:37.920] 就是它现在一个任务执行到什么状态
[31:37.920 --> 31:40.880] 它是通过redis的pubsub来实现的
[31:40.880 --> 31:46.400] 就是说celery执行一个任务到什么状态了
[31:46.400 --> 31:47.680] 它会发一条消息
[31:47.680 --> 31:50.960] 然后所有的subscriber会收到这条消息
[31:50.960 --> 31:54.160] 但是redis的pubsub是没有高可用的
[31:54.160 --> 31:56.640] 就是假如说你所有的sub都掉线了
[31:56.640 --> 31:58.240] 那个消息还是会pub出去
[31:58.240 --> 32:01.760] 然后就没有人收到
[32:01.760 --> 32:04.960] 对但是redis新加的一个功能叫stream
[32:04.960 --> 32:06.560] 相当于是一个消息的功能
[32:06.560 --> 32:08.880] 可以保证这个消息你如果掉线了
[32:08.880 --> 32:10.800] 我过一会儿你上线了
[32:10.800 --> 32:12.400] 你还是可以得到这条消息
[32:12.400 --> 32:16.400] 然后我想让任务的状态就完全的保存下来
[32:16.400 --> 32:21.360] 我不想假如说我的状态的收集器掉线了
[32:21.360 --> 32:24.160] 这一部分的消息就永远找不到了
[32:24.160 --> 32:30.720] 我想让celery添加一个通过stream来发送那个状态的功能
[32:30.720 --> 32:36.480] 然后那个redis的维护者也说这个功能是比较合理的
[32:36.480 --> 32:40.800] 然后比较理想的是我去实现了这个fetch
[32:40.800 --> 32:42.240] 然后他们核到master对吧
[32:42.240 --> 32:43.840] 但是我没有因为我没时间
[32:43.840 --> 32:48.240] 然后他们让我去写一个cep
[32:48.240 --> 32:51.280] 就相当于pattern的pep一样
[32:51.280 --> 32:54.480] 他们celery竟然有cep
[32:54.480 --> 32:56.000] 当时我就有点吓到了
[32:56.000 --> 32:57.520] 所以一直还没有开始动手
[32:57.520 --> 32:59.440] 但是我跟他说好的我会去写
[32:59.440 --> 33:02.480] 我感觉是蛮好的机会
[33:02.480 --> 33:05.280] 就是完整的参与一个提出一个feature
[33:05.280 --> 33:06.160] 实现一个feature
[33:06.160 --> 33:08.080] 然后把它发布的这样一个过程
[33:08.080 --> 33:08.639] 是的是的
[33:08.639 --> 33:10.879] 因为对的
[33:10.879 --> 33:12.560] 但是就是你做一个项目
[33:12.560 --> 33:14.000] 遇到一个问题
[33:14.000 --> 33:15.280] 你有两种方案
[33:15.280 --> 33:17.360] 一种是你找一个解决方案绕过去
[33:17.360 --> 33:19.920] 第二种是你用现有的方案
[33:19.920 --> 33:21.360] 然后你就正面
[33:21.360 --> 33:22.240] 如果他缺什么
[33:22.240 --> 33:23.600] 你手动去帮他改了
[33:23.600 --> 33:25.040] 第一个成本可能会比较高
[33:25.040 --> 33:27.440] 但是带来的成就感也会挺高的
[33:27.440 --> 33:28.480] 对
[33:28.480 --> 33:30.800] 就是开源是一系列的开源
[33:30.800 --> 33:32.880] 这是我的一点非常深的感受
[33:32.880 --> 33:35.520] 是的是的
[33:35.520 --> 33:37.360] 这个我也是非常同意的
[33:37.360 --> 33:40.960] 因为我也是给上游修了不少问题
[33:40.960 --> 33:43.120] 比如说就比如说上游有一些
[33:43.120 --> 33:46.160] 他们还在用一些deprecated的代码
[33:46.160 --> 33:47.760] 然后我linter里会报错
[33:47.760 --> 33:50.000] 然后我就特别不爽报错
[33:50.000 --> 33:51.520] 所以我就必须要给他去修好
[33:51.520 --> 33:52.879] 就是让自己的linter不报错
[33:52.879 --> 33:53.840] 就类似这种东西
[33:53.840 --> 33:55.040] 是的是的
[33:55.040 --> 33:57.200] 实际上是还有就是说是很多时候
[33:57.200 --> 33:59.680] 你发现自己有一些时候不对
[33:59.680 --> 34:02.240] 然后你定进一看不是上游的文档写错
[34:02.240 --> 34:03.680] 就是上游的代码写错了
[34:03.680 --> 34:04.400] 然后fix
[34:04.400 --> 34:08.239] 就包括cpy的代码和文档
[34:08.239 --> 34:10.560] 也是有出错的情况
[34:10.560 --> 34:14.000] 很多的你每天你能看到BPO里面
[34:14.000 --> 34:15.040] 都会有好多个
[34:15.040 --> 34:18.560] 就说是光是docs template就一大堆
[34:18.560 --> 34:22.960] 对就复杂性上来之后就一定会有bug
[34:22.960 --> 34:23.759] 这个是肯定的
[34:23.759 --> 34:27.360] 对那主要你要来聊一下吗
[34:27.360 --> 34:32.320] 我的话其实我自己完整的开源项目其实是没有的
[34:32.320 --> 34:34.480] 我主要都是在做一些贡献
[34:34.480 --> 34:36.800] 然后的话我觉得其实做贡献的
[34:36.800 --> 34:38.560] 其实是一个很简单的一个东西
[34:38.560 --> 34:41.679] 就是说是你用的什么不爽
[34:41.679 --> 34:46.319] 你就按照你的想法去在艺术里面讨论和修改它
[34:46.319 --> 34:51.199] 对然后因为其实我觉得开源来说的话
[34:51.199 --> 34:53.040] 因为可能说它是一个水源的东西
[34:53.040 --> 34:56.560] 并不能说我自己为了去有个项目在这放着
[34:56.560 --> 34:59.520] 然后我就说我去强行想一个项目写出来
[34:59.520 --> 35:00.960] 然后放那对
[35:00.960 --> 35:02.080] 然后我觉得的话
[35:02.080 --> 35:06.000] 现在我就是每天没事去逛逛艺术区
[35:06.000 --> 35:09.040] 然后不逛逛BPO看哪些bug能修的
[35:09.040 --> 35:09.680] 然后修了
[35:09.680 --> 35:12.399] 然后就这样养老模式
[35:12.399 --> 35:14.720] 对你说这个我特别同意
[35:14.720 --> 35:17.440] 就是像上次Armin讲的
[35:17.440 --> 35:20.080] 他不搞他自己没有用的东西
[35:20.080 --> 35:23.120] 他在做的项目一定是他自己在用的
[35:23.120 --> 35:25.120] 所以我觉得开源也是这样子
[35:25.120 --> 35:34.160] 比如说你就是想我说我一定要去怎么样混成一个项目的committer
[35:34.160 --> 35:36.480] 然后你自己其实并没有在用那个项目
[35:36.480 --> 35:39.920] 那就感觉有点就不是最佳的方法
[35:39.920 --> 35:40.800] 就会比较累
[35:40.800 --> 35:43.200] 其实我觉得这个是可以的
[35:43.200 --> 35:44.480] 就是说你可以
[35:44.480 --> 35:47.680] 对我觉得就是说比如说你对某一个项目感兴趣
[35:47.680 --> 35:50.400] 然后你要去混然后你就专注于这个项目
[35:50.400 --> 35:53.120] 你自己再去使用或者说其他东西
[35:53.120 --> 35:56.800] 然后就说是你为了成为这个项目的committer去使用贡献
[35:56.800 --> 36:02.000] 对我觉得我的意思是你就是必须要也在使用这个项目
[36:02.000 --> 36:04.000] 我觉得不一定就是说看你兴趣
[36:04.000 --> 36:05.280] 你可以最开始没使用
[36:05.280 --> 36:06.720] 然后你从最开始的docfake
[36:06.720 --> 36:08.720] 如果说你只是对这个项目感兴趣
[36:08.720 --> 36:10.800] 然后你想成为他的committer的话
[36:10.800 --> 36:13.200] 你可以就是说是从现在开始使用
[36:13.200 --> 36:14.800] 然后一点点的走
[36:14.800 --> 36:16.000] 然后就是说是
[36:16.000 --> 36:17.360] 对这种是可以的
[36:17.360 --> 36:18.080] 这种是可以的
[36:18.080 --> 36:21.600] 我只是说我只是觉得你在完全不使用的情况下去
[36:21.600 --> 36:24.000] 就是想去给某个项目做贡献
[36:24.000 --> 36:25.120] 我觉得是不太可能的
[36:25.120 --> 36:26.880] 我觉得也可能
[36:26.880 --> 36:29.440] 但是可能说做的会很累一些而已
[36:29.440 --> 36:30.880] 对就会比较对
[36:30.880 --> 36:33.600] 给一个项目tpr是非常难的
[36:33.600 --> 36:35.839] 尤其是你不太了解的项目
[36:35.839 --> 36:36.480] 我举个例子
[36:36.480 --> 36:37.279] 比如说
[36:40.240 --> 36:41.360] 比如说celery吧
[36:41.360 --> 36:43.759] celery我只是用过我熟悉它的API
[36:44.160 --> 36:46.640] 但是我甚至它的文档我没有全部看一遍
[36:46.640 --> 36:48.720] 然后它的代码就比如说我想
[36:48.720 --> 36:50.240] 我现在想给它tpr
[36:50.799 --> 36:51.759] 这是非常难的
[36:51.759 --> 36:54.160] 因为我要把相关的代码都看懂了
[36:54.160 --> 36:55.520] 我要知道它在干什么
[36:55.680 --> 36:57.600] 我才能提到一个合适的pr
[36:57.600 --> 36:59.920] 而且就算我提到这个pr之后
[36:59.920 --> 37:02.480] 一般的开源都是你提了pr之后
[37:02.480 --> 37:04.640] 你要再push2-3次
[37:04.640 --> 37:08.640] 甚至十几次才会被merge到master去
[37:08.640 --> 37:14.640] 所以大家不要觉得我很喜欢一个项目
[37:14.640 --> 37:20.880] 我门头看几天就能成为一个贡献者
[37:20.880 --> 37:22.320] 其实没有那么简单
[37:24.320 --> 37:26.800] 对我同意
[37:26.800 --> 37:31.120] 我第一次修Cpython的文档问题
[37:31.120 --> 37:35.359] 然后当时是花了一个多星期的时间
[37:35.359 --> 37:36.960] 然后最后是找了翔哥
[37:36.960 --> 37:42.799] 然后他忘了一次性的总结性的把一些问题给指出来
[37:42.799 --> 37:43.920] 然后最后才合进去
[37:43.920 --> 37:47.120] 我当时超想跳楼
[37:49.120 --> 37:54.160] 对反正而且你比如说你这样给Cpython这种项目tbug
[37:54.160 --> 37:58.080] 你还得就首先你会怀疑自己说这到底是不是一个bug
[37:58.080 --> 38:01.759] 就是说为什么我每天在用的代码里会有bug
[38:01.759 --> 38:02.799] 你会首先怀疑自己
[38:02.799 --> 38:04.960] 然后你怀疑到可能有bug
[38:04.960 --> 38:07.680] 你还得去找看这个bug有没有人提过
[38:07.680 --> 38:12.080] 可能他是十几年前被人提过
[38:12.080 --> 38:12.880] 但一直没有修
[38:12.880 --> 38:13.840] 这种bug也是有的
[38:13.840 --> 38:16.240] 很多就不是有是很多的
[38:16.240 --> 38:18.880] 所以就会有些这种问题
[38:18.880 --> 38:23.200] 我觉得的话这种东西就只能说随缘
[38:23.200 --> 38:30.879] 然后ok那我其实我看信涛之前在我们的那个文档里提了两个问题还蛮好的
[38:30.879 --> 38:35.680] 就是第一个问题是说你要开始一个个人项目
[38:35.680 --> 38:38.480] 怎么确定一个项目能不能行得通
[38:38.480 --> 38:40.080] 可以我可以聊一下
[38:40.080 --> 38:42.560] 就是就以cyberbrain来说
[38:42.560 --> 38:47.439] 这个其实行不行得通看起来是一个yes or no的问题
[38:47.439 --> 38:51.200] 但是要得出这个yes or no可能需要很长时间
[38:51.200 --> 38:58.799] 就我这个项目的话是从一开始有想法到最后真正开始去写code的
[38:58.799 --> 39:03.839] 可能过了得有将近两年的时间吧
[39:03.839 --> 39:07.200] 或者一年多就是最少一年半的时间
[39:07.200 --> 39:11.439] 因为很多时候对于一定有一定复杂性的项目
[39:11.439 --> 39:17.439] 你一开始其实很难把一个全局就是要去怎么实现这个项目想清楚
[39:17.440 --> 39:21.760] 甚至你都就像刚才说的不知道这个项目到底能不能实现
[39:21.760 --> 39:26.400] 这种情况下你只能就是说去慢慢的做一些探索
[39:26.400 --> 39:30.800] 比如说你会去在一些解决一些别的问题的时候
[39:30.800 --> 39:35.120] 会分出那么1%2%的时间来思考
[39:35.120 --> 39:36.880] 那么慢慢的你积累起来
[39:36.880 --> 39:43.520] 你就会发现你好像逐渐对这个问题有了一定的了解
[39:43.520 --> 39:46.000] 那么等到达到一定的时候
[39:46.000 --> 39:50.320] 你就会突然发现好像感觉这么做是可以的
[39:50.320 --> 39:52.160] 然后你就可以开始做
[39:52.160 --> 39:54.320] 这个时候并不表示它一定就能行了
[39:54.320 --> 39:58.320] 你还得去首先比如说有一个非常简单的实现
[39:58.320 --> 40:00.960] 去验证一下你这个想法到底可不可行
[40:00.960 --> 40:02.480] 也就是我前段时间一直在做的
[40:02.480 --> 40:11.360] 那么你直到说build出来一个端到端的一个完整的solution
[40:11.360 --> 40:15.520] 你才可以说我好像这个是的确可行的
[40:15.520 --> 40:17.680] 我觉得其实是一个比较漫长的过程
[40:17.680 --> 40:24.160] 对我觉得去确认一个项目行不行得通
[40:24.160 --> 40:27.280] 的确是一件很耗费精力的事
[40:27.280 --> 40:32.080] 对就像我有一个比较好的经验
[40:32.080 --> 40:33.840] 或者是可以分享的点
[40:33.840 --> 40:36.640] 就是你如果想做一个项目的话
[40:36.640 --> 40:40.640] 你可以在你的笔记应用
[40:40.640 --> 40:44.080] 不管是你是用油刀云笔记还是用音响笔记
[40:44.080 --> 40:46.319] 里面开一个文档就是关于这个项目的
[40:46.319 --> 40:49.840] 然后你平时把任何想到的或者看到的
[40:49.840 --> 40:53.680] 或者搜索到的跟这个项目有关的东西都放进去
[40:53.680 --> 40:57.520] 比如我就有一个这样的文档去记录cyberbrain相关的东西
[40:57.520 --> 41:03.600] 那么我就会把我觉得好像和自动化调试有那么点关系的东西
[41:03.600 --> 41:05.840] 有那么点关系的开源项目会贴进去
[41:05.840 --> 41:10.720] 那么我最后就发现我好像就是这个列表里面已经积累了很多
[41:10.720 --> 41:13.040] 然后对然后也包括我自己的一些想法
[41:13.040 --> 41:14.640] 就是这个东西可能怎么做
[41:14.640 --> 41:17.200] 那么当你最后真正要写code的时候
[41:17.200 --> 41:21.759] 你去检查一下当时零散记下来的这些东西其实是非常有用的
[41:21.759 --> 41:24.800] 就跟好像跟感觉跟写作也差不多
[41:24.800 --> 41:29.360] 就有些作家我知道也会去记一下一些平时自己的想法什么的
[41:29.360 --> 41:32.240] 可能都是要靠一些平时积累这样子
[41:32.240 --> 41:34.640] 我是这样的
[41:34.640 --> 41:36.960] 我是有一个想法我想做一个东西的时候
[41:36.960 --> 41:40.960] 我会先花一段时间想这个项目的名字
[41:40.960 --> 41:44.560] 然后去Github建一个repository
[41:44.560 --> 41:48.080] 是空的就写一个readme跟项目的名字
[41:48.080 --> 41:51.520] 然后把所有的想法跟参考资料都会写到一数里面
[41:51.520 --> 41:52.960] 然后一个个的开一数
[41:52.960 --> 41:56.480] 然后最后把相关的标成duplicated
[41:56.480 --> 41:58.800] 然后整理一下看可不可以做
[41:58.800 --> 42:01.200] 然后做的时候发现一些问题就不断的开一数
[42:01.200 --> 42:04.240] 比如说Ireadies应该是有150多个一数了
[42:04.240 --> 42:08.240] 这样给自己就比较清楚
[42:08.240 --> 42:10.720] 然后我的代码都是通过PR的形式提交
[42:10.720 --> 42:13.919] PR里面可以写close哪一个一数什么的
[42:13.919 --> 42:16.319] 对自己来说就比较清楚
[42:16.319 --> 42:19.120] 但是我可以给大家分享一下
[42:19.120 --> 42:21.680] 就是有一个团队我具体忘了哪个了
[42:21.680 --> 42:24.000] 就是他们不提倡记一数
[42:24.000 --> 42:28.000] 因为他们觉得如果一个好的一个idea是好的
[42:28.000 --> 42:30.560] 那我们不要记下来
[42:30.560 --> 42:33.040] 它会再次出现在我们的脑子里面的
[42:33.040 --> 42:37.200] 所以就相当于通过你的大脑做一个Lru是吧
[42:37.200 --> 42:43.600] 对假如说一个feature我们当时觉得它很酷
[42:43.600 --> 42:44.879] 但是后来我们把它忘了
[42:44.879 --> 42:45.839] 这说明就不重要
[42:45.839 --> 42:48.879] 某种程度下我也赞同这个说法
[42:48.879 --> 42:52.560] 因为很多人用的feature必然有很多人提到
[42:52.560 --> 42:57.040] 我觉得现在信涛一听这就是开源老司机了
[42:57.040 --> 42:59.279] 这一听就是开源老江湖了
[42:59.279 --> 43:01.279] 开源老司机
[43:01.279 --> 43:06.879] 对因为我觉得他这一套其实是很成熟的一套方法论
[43:06.880 --> 43:07.920] 或者其他
[43:07.920 --> 43:12.640] 但我感觉如果你只有一个人的话好像不是特别适合
[43:12.640 --> 43:14.560] 你一个人忘了就忘了
[43:14.560 --> 43:20.320] 但是有一点就是
[43:20.320 --> 43:23.360] 我一般是这样的
[43:23.360 --> 43:26.880] 就是有一个项目我会很快的写一个原型
[43:26.880 --> 43:28.640] 然后打个包上传到拍拍
[43:28.640 --> 43:31.840] 然后让人看到readme之后就很快知道可以怎么用
[43:31.840 --> 43:35.440] 然后就有很多人告诉我你可以做一个这样的功能
[43:35.440 --> 43:36.640] 你可以做一个那样的功能
[43:36.640 --> 43:37.600] 这样做比较好
[43:37.600 --> 43:41.120] 有很多人在推特或者通过私信告诉我一些东西
[43:41.120 --> 43:43.920] 然后有好多好多feature都是他们告诉我的
[43:43.920 --> 43:45.600] 你这个真的是老江湖了
[43:45.600 --> 43:47.040] 我都没有人告诉我要做什么
[43:47.040 --> 43:48.640] 我都是自己搞
[43:48.640 --> 43:52.640] 其实你想知道一个事情行不行
[43:52.640 --> 43:56.480] 我觉得最根本的是看自己的能力
[43:56.480 --> 44:01.839] 你对Linux系统或者是对一些相关的领域有了解的多深
[44:01.839 --> 44:03.520] 最主要的是看自己的能力
[44:03.520 --> 44:05.359] 但我自己能力不行怎么办
[44:05.360 --> 44:07.040] 我就去找能力型的聊一聊
[44:07.040 --> 44:10.880] 所以你有项目其实我觉得最好有一个想法
[44:10.880 --> 44:14.080] 最好的验证行不行的方法就是多找一些朋友聊一聊
[44:14.080 --> 44:15.280] 告诉他你的想法
[44:15.280 --> 44:18.720] 对这个也是我非常同意的一点
[44:18.720 --> 44:27.040] 我觉得很多时候一些想法真的是在和朋友聊天的时候才能碰撞出来的
[44:27.040 --> 44:28.960] 对然后他们会问你
[44:28.960 --> 44:30.000] 你为什么要做这个
[44:30.000 --> 44:31.360] 你用这个行不行
[44:31.360 --> 44:32.240] 你用那个不行吗
[44:32.240 --> 44:33.200] 你为什么要做这个
[44:33.200 --> 44:36.080] 然后你就会想我做这个有什么用吗
[44:36.080 --> 44:38.000] 对吧
[44:38.000 --> 44:40.160] 然后行不行的问题
[44:40.160 --> 44:41.200] 他们也可以告诉你
[44:41.200 --> 44:43.680] 这个问题你打算怎么解决
[44:43.680 --> 44:45.040] 那个问题你打算怎么解决
[44:45.040 --> 44:47.680] 我知道一个这个库你可以去参考一下
[44:47.680 --> 44:48.720] 它里面用了什么
[44:48.720 --> 44:50.799] 就这样的交流是比较有用的
[44:50.799 --> 44:54.160] OK我刚才其实想给我们打个广告的
[44:54.160 --> 44:55.439] 就比如说我们听众朋友
[44:55.439 --> 44:57.600] 要是你有一个什么开源项目
[44:57.600 --> 45:00.879] 你想来寻求一些人的意见的话
[45:00.879 --> 45:01.839] 看看可不可行
[45:01.840 --> 45:03.680] 或者是要怎么做
[45:03.680 --> 45:07.200] 那其实可以加入捕蛇者说的这个telegram讨论组
[45:07.200 --> 45:09.200] 对我们有很多听众
[45:09.200 --> 45:11.280] 然后以及我们往期的嘉宾都在这里的
[45:11.280 --> 45:14.560] 其实大家都是你们可以利用的资源了
[45:14.560 --> 45:16.640] 对不是叫资源
[45:16.640 --> 45:18.800] 或者说大家一起来加进来
[45:18.800 --> 45:21.760] 然后一起聊聊哲学搞搞机
[45:21.760 --> 45:24.240] 然后对然后互相学习互相进步
[45:24.240 --> 45:25.360] 对互相学习
[45:25.360 --> 45:27.440] 对然后其实我之前在那个
[45:27.440 --> 45:30.640] 我去年上周在那个拍上成都场的时候
[45:30.640 --> 45:33.920] 有一个美国嘉宾他讲的就是soft skill
[45:33.920 --> 45:37.040] 他其中后面101的交流的时候
[45:37.040 --> 45:39.600] 其实就说了就是说跟这个思路很远
[45:39.600 --> 45:42.799] 他说就是说是当你觉得很多事情不确定的时候
[45:42.799 --> 45:46.000] 你其实就可以选择去share一下
[45:46.000 --> 45:48.799] 就是说因为你在去尝试去share的过程中
[45:48.799 --> 45:50.799] 你会首先要说服自己
[45:50.799 --> 45:52.799] 我为什么要做这个东西
[45:52.799 --> 45:55.520] 找更多理由就是说是这个东西有什么必要
[45:55.520 --> 45:57.839] 然后以及然后你去说服别人
[45:57.839 --> 45:59.359] 然后再得到相对应的反馈
[45:59.360 --> 46:01.040] 其实我觉得这个东西是一个
[46:01.040 --> 46:02.720] 对于在你不确定的时候
[46:02.720 --> 46:05.120] 可以去这样找一个朋友分享一下这样
[46:05.120 --> 46:09.040] 对对我觉得这个是一个非常好的想法
[46:09.040 --> 46:10.400] 是的
[46:10.400 --> 46:17.840] ok然后你们觉得这个我是之前写下来
[46:17.840 --> 46:19.840] 但是其实我们也多少聊了一点
[46:19.840 --> 46:24.320] 就是说就参与开源的正确心态
[46:24.320 --> 46:26.880] 应该是什么样的
[46:26.880 --> 46:31.040] 随缘佛系一点
[46:31.040 --> 46:32.640] 佛系一点对吧
[46:32.640 --> 46:35.200] 对因为说实话你的一个PR
[46:35.200 --> 46:37.120] 就特别是越大的项目
[46:37.120 --> 46:40.720] 你的一个PR可能合入时间是一周
[46:40.720 --> 46:42.320] 或者说以月为计算
[46:42.320 --> 46:44.320] 可能说然后对
[46:44.320 --> 46:47.680] 然后你一个PR可能还会经过若干的设计的更多的
[46:47.680 --> 46:50.560] 比如说要去做一个完整的PVP
[46:50.560 --> 46:51.840] 或者说其他类似的
[46:51.840 --> 46:54.080] 就像比如说新涛说他想去做一个PR
[46:54.080 --> 46:56.080] 结果就得先提个CEP
[46:56.080 --> 46:58.319] 然后的话所以说这种东西的话
[46:58.319 --> 47:00.400] 我觉得就佛系一点
[47:00.400 --> 47:01.840] 然后不要太着急
[47:01.840 --> 47:06.799] 是的我个人也是非常同意的
[47:06.799 --> 47:11.759] 我觉得就是但是我对于佛系这个词的理解
[47:11.759 --> 47:13.200] 可能是从另外一个角度
[47:13.200 --> 47:18.080] 就是说我还是觉得你对于任何一个项目都没有必要
[47:18.080 --> 47:20.560] 一开始强迫自己一定要去
[47:20.560 --> 47:24.560] 比如说在三个月内我一定要给他提交多少commit
[47:24.560 --> 47:26.560] 我觉得不要这样去逼迫自己
[47:26.560 --> 47:30.880] 我觉得比较好心态应该是就是从一些很小的部分开始
[47:30.880 --> 47:32.880] 比如说我就是遇到了一个bug
[47:32.880 --> 47:35.920] 然后我如果恰好也有能力去解决bug
[47:35.920 --> 47:37.920] 那我就去给他提一个PR
[47:37.920 --> 47:40.640] 那么我如果就是说没有能力去解决这个bug
[47:40.640 --> 47:42.240] 我也可以去开一个issue对吧
[47:42.240 --> 47:47.040] 这样其实开issue也是对于开源的一种贡献
[47:47.040 --> 47:50.160] 因为你把这部分的遇到的问题share出来
[47:50.160 --> 47:51.600] 然后大家都是可以搜索到的
[47:51.600 --> 47:55.120] 那么就是慢慢的通过一些
[47:55.120 --> 47:57.839] 就是你做到你自己能做到的事情
[47:57.839 --> 48:00.720] 然后逐渐的你可能有一天就会发现
[48:00.720 --> 48:04.880] 你有能力去对这个项目做更多的贡献了这样子
[48:04.880 --> 48:06.799] 我觉得就是不要急慢慢来
[48:06.799 --> 48:08.240] 对是佛系
[48:08.240 --> 48:11.600] 而且很多人就是说是有个心态我觉得很不好
[48:11.600 --> 48:12.880] 其实我之前也是有的
[48:12.880 --> 48:15.680] 就是说我好不容易提了一个PR之后
[48:15.680 --> 48:18.799] 然后提了PR之后就在天天拍下星星拍月亮
[48:18.799 --> 48:19.680] 我咋什么时候合
[48:19.680 --> 48:21.360] 兄弟你不和我我要跳楼
[48:21.360 --> 48:22.800] 就是这种
[48:22.800 --> 48:24.800] 对我觉得其实就随缘
[48:24.800 --> 48:26.640] 因为该合的一定会合
[48:26.640 --> 48:27.760] 合不了的
[48:27.760 --> 48:29.440] 然后会撕很久
[48:29.440 --> 48:30.720] 所以说就随缘
[48:30.720 --> 48:35.680] 然后我们下面其实是想聊一些
[48:35.680 --> 48:41.840] 就是github上比较有争议的项目
[48:41.840 --> 48:46.800] 那么其实我也列了一些
[48:46.800 --> 48:50.560] 但是我觉得有一些确实是争议的比较大
[48:50.560 --> 48:54.240] 然后但我觉得越是有争议的项目
[48:54.240 --> 48:56.240] 我们越应该去聊对吧
[48:56.240 --> 48:57.440] 如果大家都不聊的话
[48:57.440 --> 49:00.000] 那就没有办法
[49:00.000 --> 49:01.920] 碰撞出不同的观点
[49:01.920 --> 49:05.520] 然后来更让大家加深对于某件事情理解
[49:05.520 --> 49:07.360] 所以我觉得还是应该聊一下
[49:07.360 --> 49:13.120] 那么首先我们想提一下就是一些markdown项目对吧
[49:13.120 --> 49:17.120] 我们大家都知道在github上存在一种项目
[49:17.120 --> 49:19.840] 它可能有几百几千个star
[49:19.840 --> 49:21.600] 那么然后你点进去看
[49:21.600 --> 49:24.080] 就是比如说java面试总结
[49:24.080 --> 49:29.280] 或者是java从小白到大神
[49:29.280 --> 49:32.800] 或者是java实际电子资料
[49:32.800 --> 49:33.760] 对对对
[49:33.760 --> 49:34.880] 但我们不光黑java
[49:34.880 --> 49:36.640] 包括python也有了
[49:36.640 --> 49:39.840] 就各种这种项目
[49:39.840 --> 49:44.800] 他们的一个共同点就是项目以markdown为主
[49:44.800 --> 49:50.240] 我看到有个markdown项目然后是抢过来的3k star的
[49:50.240 --> 49:53.840] 那你抢过来这个项目叫什么
[49:53.840 --> 49:56.080] awesome coins
[49:56.080 --> 50:00.800] 对对对就awesome什么什么什么
[50:00.800 --> 50:05.760] 也是很就是这类项目中的一个很重要的组成部分
[50:05.760 --> 50:06.960] 对对
[50:06.960 --> 50:09.840] 所以我是想看看大家对于
[50:09.840 --> 50:12.320] 就是对于markdown项目
[50:12.320 --> 50:14.240] 不知道你们是有没有什么看法
[50:14.240 --> 50:15.839] 我觉得是合理
[50:15.839 --> 50:17.759] 然后我觉得是有一定的合理性
[50:17.759 --> 50:19.600] 然后而且是有一定的价值
[50:19.600 --> 50:23.600] 但是就得看具体需要个度
[50:23.600 --> 50:29.919] 因为我记得新涛是不是也有一个并发教程对吧
[50:29.919 --> 50:32.160] 我那个是翻译的书
[50:32.160 --> 50:33.759] 对你这个也可以算了
[50:33.759 --> 50:35.839] 对作为一个markdown项目作者
[50:35.839 --> 50:40.160] 我觉得你肯定是认为markdown项目是有还是有一定价值的
[50:40.160 --> 50:44.960] 不是我那个不是awesome不是面试是一本书
[50:44.960 --> 50:50.240] 是因为我每次PR他会帮我自动构建的那本书
[50:50.240 --> 50:53.440] 我就可以看一下HTML渲染出来是什么内容
[50:53.440 --> 50:56.000] 那你翻译这个书有授权吗
[50:56.000 --> 50:57.440] 没有授权
[50:57.440 --> 50:58.879] 但是我跟作者聊过了
[50:58.879 --> 51:02.080] 他也没说明确同意的让我翻译
[51:02.080 --> 51:03.680] 明确不同意让我翻译
[51:03.680 --> 51:04.960] 我就翻了他也没找我
[51:04.960 --> 51:08.480] 就感觉还是有很多有价值的内容
[51:08.480 --> 51:10.240] 就比如说一些翻译什么的
[51:10.240 --> 51:13.360] 我觉得书翻译肯定是有价值的
[51:13.360 --> 51:14.400] 教程肯定有价值的
[51:14.400 --> 51:15.600] 有很多不错的教程
[51:15.600 --> 51:17.920] 给他上中国人写的外国人写的
[51:17.920 --> 51:19.120] 但是面试总结
[51:19.120 --> 51:21.200] 我不是很喜欢面试总结
[51:21.200 --> 51:22.560] 我觉得面试总结特别无聊
[51:22.560 --> 51:24.480] awesome项目我可以说一下
[51:24.480 --> 51:25.760] 我觉得awesome项目
[51:25.760 --> 51:27.360] 我看了很多awesome项目
[51:27.360 --> 51:28.800] 其实都不是很awesome
[51:28.800 --> 51:30.720] 里面有很多东西都是凑数的
[51:30.720 --> 51:35.120] 就是你这种项目除了收集style没有什么用
[51:35.120 --> 51:36.560] 你说你从头看一遍
[51:36.560 --> 51:39.520] 里面大多数有很多项目就是凑数的
[51:39.520 --> 51:40.640] 其实里面不怎么样
[51:40.640 --> 51:41.600] 也没什么价值
[51:41.600 --> 51:47.040] 你如果想了解这方面相关的项目的话
[51:47.040 --> 51:51.360] 我觉得最好的方式是你找这一方面比较有名的一个项目
[51:51.360 --> 51:52.799] 然后去follow他的作者
[51:52.799 --> 51:54.720] 他的作者去start一些项目
[51:54.720 --> 51:56.799] 你都去看一下或者作者的repo
[51:56.799 --> 51:58.640] 或者作者follow其他人
[51:58.640 --> 52:01.040] 就这样你会找到这个领域
[52:01.040 --> 52:04.240] 相关的一些人和相关的一些项目
[52:04.240 --> 52:08.000] 那awesome基本上也是给你过滤了一下
[52:08.000 --> 52:09.200] 但是我觉得过滤的不好
[52:09.200 --> 52:12.720] 所以说你从头看一遍没什么用
[52:12.720 --> 52:14.720] 然后第二个你想做一件事情
[52:14.720 --> 52:15.759] 你想找一个库
[52:15.759 --> 52:17.200] 你去awesome里面找
[52:17.200 --> 52:19.120] 不如你直接去google
[52:19.120 --> 52:22.640] 里面收集的库就一个链接一行字
[52:22.640 --> 52:24.160] 其实也没什么用
[52:24.160 --> 52:24.720] 我觉得
[52:24.720 --> 52:29.520] 所以我现在对awesome项目
[52:29.520 --> 52:31.520] 我基本上都不会去浪费时间看了
[52:31.520 --> 52:35.200] 但我在github上tl follow的人挺多的
[52:35.200 --> 52:37.280] 我收藏的项目已经有3000个
[52:37.280 --> 52:38.000] 你会去看吗这些项目
[52:40.800 --> 52:43.840] 大部分我知道他是干什么的
[52:43.840 --> 52:45.200] 我有兴趣的话会跑一跑
[52:45.200 --> 52:47.200] 因为大多数项目都要么有个配备
[52:47.200 --> 52:49.440] 要么有个docker或者之类的
[52:49.440 --> 52:53.759] 有一些感兴趣的话会看一下感兴趣的部分
[52:53.759 --> 52:58.400] 有一些是觉得自己以后会用得到
[52:58.400 --> 53:00.640] 就关于你刚才对于awesome项目说的
[53:00.640 --> 53:02.080] 其实我也是很同意
[53:02.080 --> 53:04.879] 我之前看python awesome
[53:04.879 --> 53:09.120] 大家都知道收集python一些比较有名的项目的
[53:09.120 --> 53:13.040] 然后我就发现它里面有很多最新的这种项目
[53:13.040 --> 53:15.600] 都完全没有收集进去
[53:15.600 --> 53:22.000] 就比如说linkedin出了一个python打包成可执行文件的项目
[53:22.000 --> 53:24.560] 叫shiv
[53:24.560 --> 53:28.400] 那么这个可以说是目前应该是最
[53:28.400 --> 53:30.319] 可能是对跨平台知识最好
[53:30.320 --> 53:34.880] 然后也是比较流行的一个新项目
[53:34.880 --> 53:37.040] 但是awesome list就没有
[53:37.040 --> 53:38.800] 它都会有一些那种比较老的
[53:38.800 --> 53:41.040] 像什么py2exe
[53:41.040 --> 53:42.800] 然后pyinstaller
[53:42.800 --> 53:45.680] 就是感觉比较过时
[53:45.680 --> 53:47.840] 所以你如果用awesome的话
[53:47.840 --> 53:50.080] 确实是不如自己用google搜索的好
[53:50.080 --> 53:51.040] 我也是这么觉得
[53:51.040 --> 53:56.720] 我对此的话是持有一个相对
[53:56.720 --> 53:58.960] 相对就是有一部分是相反的
[53:58.960 --> 54:00.880] 因为首先awesome的确是
[54:00.880 --> 54:04.720] 这样称称字不起
[54:04.720 --> 54:06.240] 因为说出了一个项目
[54:06.240 --> 54:08.560] 出了一个新的项目叫做awesome
[54:08.560 --> 54:09.680] awesome
[54:09.680 --> 54:11.280] 无限延伸下去
[54:11.280 --> 54:12.240] 这是的
[54:12.240 --> 54:14.080] 但是其实我觉得的话
[54:14.080 --> 54:15.920] 对于它awesome
[54:15.920 --> 54:19.680] 它其实是可以就是说是做一些大的awesome
[54:19.680 --> 54:23.680] 就比如awesomepythonawesomejavaawesome其他
[54:23.680 --> 54:24.960] 就说是由
[54:24.960 --> 54:28.720] 就开始有一些名人或者说其他发起
[54:28.720 --> 54:30.480] 然后最后转交由社区运营
[54:30.480 --> 54:31.600] 在这种情况下
[54:31.600 --> 54:33.520] 它其实是可以作为一个信息门户
[54:33.520 --> 54:35.759] 对于一个初学者来说
[54:35.759 --> 54:39.279] 相对来说它就是说是可以就更好的
[54:39.279 --> 54:40.879] 更有效的去获取一些东西
[54:40.879 --> 54:44.080] 而且它也有助于就是说是加缩影
[54:44.080 --> 54:48.560] 因为我之前其实去大概有几次
[54:48.560 --> 54:51.279] 都是去搜一个特定领域的库的时候
[54:51.279 --> 54:52.879] 直接google的第一条
[54:52.879 --> 54:54.720] 那一个记录就是awesome
[54:54.720 --> 54:56.399] 然后下面然后第二个是项目
[54:56.400 --> 54:58.720] 然后的话就这样的一个东西
[54:58.720 --> 54:59.920] 其实我觉得整体来讲
[54:59.920 --> 55:02.160] 它作为一个信息门户和一个index的话
[55:02.160 --> 55:04.160] 其实是有一定价值的
[55:04.160 --> 55:06.080] 当然这个东西要看它具体的质量
[55:06.080 --> 55:10.080] 就你说的信息门户这点
[55:10.080 --> 55:11.920] 我觉得它还是比不过搜索引擎
[55:11.920 --> 55:12.960] 因为搜索引擎的话
[55:12.960 --> 55:16.640] 它会根据你这个就是它会有一个排序对吧
[55:16.640 --> 55:18.080] 你可能比较热门
[55:18.080 --> 55:19.200] 大家用的多就排上面
[55:19.200 --> 55:20.240] 那我一个awesome项目
[55:20.240 --> 55:22.320] 我的排序我是random的
[55:22.320 --> 55:24.960] 那我看到有一堆项目列在那
[55:24.960 --> 55:26.640] 我也不知道哪个大家用的比较多
[55:26.640 --> 55:27.520] 对吧
[55:27.520 --> 55:30.400] 其实你就失去了搜索引擎的
[55:30.400 --> 55:32.000] 这个帮你排序的效果的这感觉
[55:32.000 --> 55:34.240] 这也是对对对
[55:34.240 --> 55:35.760] 这点我同意
[55:35.760 --> 55:37.440] 对
[55:37.440 --> 55:40.640] 但其实我觉得我个人觉得awesome项目
[55:40.640 --> 55:44.240] 还是比较偏正面
[55:44.240 --> 55:46.080] 就虽然我们诟病了很多点
[55:46.080 --> 55:48.160] 但我觉得它还是有它自己的积极意义的
[55:48.160 --> 55:52.960] 对我就是想和一些感觉比较偏负面的项目来对比
[55:52.960 --> 55:58.960] 就比如说你记不记得你之前有吐槽过一个劣质的python的知识点总结
[55:58.960 --> 56:00.160] 是的
[56:00.160 --> 56:01.760] 你开了很多issue对吧
[56:01.760 --> 56:05.920] 对我去怼了对方一番
[56:05.920 --> 56:08.000] 你说一下
[56:08.000 --> 56:11.120] 就是他当时一大堆的
[56:11.120 --> 56:13.040] 一大堆的就是说是原则
[56:13.040 --> 56:14.480] 就是说是不是原则性
[56:14.480 --> 56:16.080] 是就是原理性的错误
[56:16.080 --> 56:19.120] 就比如说当时左老师和我一起都应该看到过
[56:19.120 --> 56:24.080] 他里面说get和post就是说是区别
[56:24.080 --> 56:27.440] 就是hd method里面get和post之间的区别
[56:27.440 --> 56:28.799] 还有各种各样的
[56:28.799 --> 56:32.400] 就是说是他就基本上是XXXX
[56:32.400 --> 56:34.080] 然后你如果说是一道判断题的话
[56:34.080 --> 56:36.720] XXXXX对大概就这样
[56:36.720 --> 56:39.920] 然后但是他的star还很高
[56:39.920 --> 56:41.359] 转眼间两k
[56:41.359 --> 56:44.080] 对就比如说我搞一个教程
[56:44.080 --> 56:46.799] 然后我在一个什么小白qq群几万人
[56:46.799 --> 56:48.319] 一两万人的qq群里发
[56:48.320 --> 56:52.480] 这个python经典知识点总结
[56:52.480 --> 56:53.680] 你们赶快来star一下
[56:53.680 --> 56:55.200] 然后吧吧吧几百个star
[56:55.200 --> 56:57.120] 然后你也不知道写这个教程的人
[56:57.120 --> 56:59.520] 他到底是什么人对吧
[56:59.520 --> 57:00.480] 他自己水平怎么样
[57:00.480 --> 57:01.840] 你没有办法甄别对吧
[57:01.840 --> 57:04.160] 小白嘛那说什么就是什么
[57:04.160 --> 57:06.880] 是的是的
[57:06.880 --> 57:11.280] 就是那天那个项目他转眼间破两kstar
[57:11.280 --> 57:12.720] 我当时是真的惊了
[57:12.720 --> 57:16.720] 我觉得这种东西就应该是要狠狠的怼一波了
[57:16.720 --> 57:20.240] 那比如说好我是一个小白
[57:20.240 --> 57:22.160] 你觉得有什么建议给我
[57:22.160 --> 57:23.680] 我甄别不了这些错误
[57:23.680 --> 57:24.640] 在我看来都是对的
[57:24.640 --> 57:26.720] 只要是大神说的都是对的
[57:26.720 --> 57:28.399] 那怎么办
[57:28.399 --> 57:33.359] 多看书多看书多看书
[57:33.359 --> 57:34.640] 然后少刷github
[57:34.640 --> 57:38.480] 我书也买不起怎么办
[57:38.480 --> 57:42.319] 那就来找来加入补舍者说
[57:42.319 --> 57:44.879] 然后找我们亲爱的nex9m要钱吧
[57:44.880 --> 57:48.080] 要钱就不用了
[57:48.080 --> 57:51.280] 对我觉得加入我们的讨论组是个很好的办法
[57:51.280 --> 57:52.560] 这个倒是真的
[57:52.560 --> 57:53.840] 对对
[57:53.840 --> 57:56.640] 对对如果买不起书的话
[57:56.640 --> 57:58.080] 大家可以加入我们的讨论组
[57:58.080 --> 58:01.280] 我们等讨论组到200人吧
[58:01.280 --> 58:02.800] 我们送5本书怎么样
[58:02.800 --> 58:06.560] 说书那个书不缺
[58:06.560 --> 58:09.840] 然后你们就说是我这边可以给相当一批
[58:09.840 --> 58:14.080] 行好好的我找到了我之前吐槽post
[58:14.080 --> 58:16.960] 然后等下我把这个一数发到群里面了
[58:16.960 --> 58:19.840] OK行我觉得markdown项目我们也聊的比较多
[58:19.840 --> 58:23.360] 那其实还有一些别的有意思的项目
[58:23.360 --> 58:30.880] 另外一个之前在互联网上比较有名的项目叫民歌.js
[58:30.880 --> 58:34.080] 这个可能项目可能有的人听说过
[58:34.080 --> 58:34.960] 有的人没有听说过
[58:34.960 --> 58:38.400] 那么我们给我给没听说过的朋友来介绍一下
[58:38.400 --> 58:41.040] 这个民歌.js这个民歌是什么意思
[58:41.040 --> 58:43.360] 它其实是可能是那个人的人名
[58:43.360 --> 58:48.000] 我猜的就是mingge就是民歌
[58:48.000 --> 58:51.440] 然后它这个项目的readme写的非常有意思
[58:51.440 --> 58:57.200] 就是号称它这个项目是想替代jQuery
[58:57.200 --> 58:57.600] 对吧
[58:57.600 --> 59:00.640] 它好像是应该是17应该是哪年做的一个项目
[59:00.640 --> 59:01.760] 17还是18年
[59:01.760 --> 59:05.200] 反正他当时是以替代jQuery为目标
[59:05.200 --> 59:07.680] 那么这个本身就是有一定槽点
[59:07.680 --> 59:09.200] 但是这也不是最大的槽点
[59:09.200 --> 59:10.880] 但反正他的意思就是说
[59:10.880 --> 59:13.680] 我是要山寨一个jQuery
[59:13.680 --> 59:16.080] 但是我为什么要山寨一个jQuery
[59:16.080 --> 59:21.520] 因为我觉得我想证明就是说国产的
[59:21.520 --> 59:26.320] 国内开发者也可以做出一个不比jQuery差的酷
[59:26.320 --> 59:33.120] 然后他说所以我给了他一个霸气的名字叫做民歌js
[59:33.120 --> 59:34.240] 这个是他原话
[59:34.240 --> 59:36.080] 是的
[59:36.080 --> 59:40.400] 然后这是当时前端圈里面的一个热门话题
[59:40.400 --> 59:41.680] 就是民歌js
[59:41.680 --> 59:44.880] 然后动漫球最好用的js酷理解万岁
[59:44.880 --> 59:45.920] 对
[59:45.920 --> 59:52.960] 就是感觉就是这个酷大家在网上疯狂吐槽
[59:52.960 --> 59:58.240] 就是因为我们知道有很多这种比如说数学物理的名科
[59:58.240 --> 01:00:00.960] 会有一些自己很奇奇怪怪的理论
[01:00:00.960 --> 01:00:03.920] 想去找一些大学教授让他们来认同
[01:00:03.920 --> 01:00:10.320] 但是感觉民歌js就是一个在开源领域类似的这样一个项目
[01:00:10.320 --> 01:00:18.800] 其实我觉得他倒是也算不上民科
[01:00:18.800 --> 01:00:22.400] 因为我觉得他其实就是说是能写出
[01:00:22.400 --> 01:00:23.920] 因为我看过他一下代码
[01:00:23.920 --> 01:00:28.080] 然后他其实我觉得他能够写出这样一个规模的东西
[01:00:28.080 --> 01:00:31.440] 然后大家其实房间对于他代码质量评价还是
[01:00:31.440 --> 01:00:32.720] 还可以吗
[01:00:32.720 --> 01:00:33.520] 还可以
[01:00:33.520 --> 01:00:33.920] 对
[01:00:33.920 --> 01:00:39.120] 然后的话就是说就对于这个东西来讲的话
[01:00:39.120 --> 01:00:42.640] 就说是他可能说也谈不上民科
[01:00:42.640 --> 01:00:44.799] 因为民科就纯粹是真正叫不学无术
[01:00:44.799 --> 01:00:46.240] 某种意义上来讲
[01:00:46.240 --> 01:00:50.480] 然后民歌的话可能就说是当时一些环境
[01:00:50.480 --> 01:00:54.480] 造成他一些想法和其他就主流的想法不太一样
[01:00:54.480 --> 01:00:56.799] 我觉得这个东西倒也谈不上民科
[01:00:56.799 --> 01:00:58.480] 对
[01:00:58.480 --> 01:01:03.279] 其实他这个槽点主要还是他
[01:01:03.279 --> 01:01:06.080] 主要有两个
[01:01:06.080 --> 01:01:09.279] 其一是他霸气侧漏的readme
[01:01:09.279 --> 01:01:14.560] 然后其次就是他在2018年想去做一个Jekyll & Hyde的替代品这件事情
[01:01:14.560 --> 01:01:19.600] 我觉得从方向上来说可能就不是特别对
[01:01:19.600 --> 01:01:23.040] 因为现在Jekyll & Hyde大家都是在要淘汰掉
[01:01:23.040 --> 01:01:25.040] 都是要搞Mvm
[01:01:25.040 --> 01:01:29.440] 那种Jekyll & Hyde就觉得比较啥
[01:01:29.440 --> 01:01:29.920] 对吧
[01:01:29.920 --> 01:01:35.520] 所以我听说刚才好像不是有一个在写前端的同学
[01:01:35.520 --> 01:01:37.520] 那姓涛
[01:01:37.520 --> 01:01:40.320] 对你有什么看法
[01:01:40.320 --> 01:01:44.080] 对我刚听到也觉得很奇怪
[01:01:44.080 --> 01:01:45.600] 我在想谁还在用Jekyll & Hyde
[01:01:45.600 --> 01:01:47.200] 他为什么要替代Jekyll & Hyde
[01:01:47.200 --> 01:01:51.200] 就好像今天突然有个人说
[01:01:51.200 --> 01:01:54.080] 我要写一个超屌的播放社要替代flash
[01:01:54.080 --> 01:01:56.000] 听到就这种感觉
[01:01:56.000 --> 01:01:59.360] 所以感觉还是
[01:01:59.360 --> 01:02:02.880] 这又回到我们刚才聊的那个问题
[01:02:02.880 --> 01:02:05.600] 就是说你怎么决定要不要做一个项目
[01:02:05.600 --> 01:02:10.560] 然后可能一个项目的价值也是看
[01:02:10.560 --> 01:02:16.320] 你肯定还是要从了解一下社区
[01:02:16.320 --> 01:02:19.840] 大家最近都在关心哪方面的事情
[01:02:19.840 --> 01:02:25.280] 然后大家在关心的事情就证明这个事情还是很多人的痛点
[01:02:25.280 --> 01:02:29.520] 然后从这个上面着手可能会好一点
[01:02:29.520 --> 01:02:33.120] 当然你也可以去比如说
[01:02:33.120 --> 01:02:36.880] 如果你这个项目只是为了说自己要去学习某项技术
[01:02:36.880 --> 01:02:38.480] 我觉得你搞什么都可以
[01:02:38.480 --> 01:02:39.600] 这个就另当别论了
[01:02:39.600 --> 01:02:42.800] 但你如果是真的想去做一个很流行的酷
[01:02:42.800 --> 01:02:45.440] 我觉得还是要紧跟时代
[01:02:45.440 --> 01:02:47.360] 我同意
[01:02:47.360 --> 01:02:49.840] 其实我觉得的话
[01:02:49.840 --> 01:02:53.920] 我觉得在做一个项目之前的话
[01:02:53.920 --> 01:02:57.360] 其实我觉得更应该去学习一下
[01:02:57.360 --> 01:03:00.160] 就说是开源社区通行的一些规则
[01:03:00.160 --> 01:03:03.760] 就比如说具体的一个项目该怎么样去维护
[01:03:03.760 --> 01:03:07.040] 然后issue怎么样去和人心平气和他讨论问题
[01:03:07.040 --> 01:03:09.600] 这种东西我觉得其实是在做项目之前
[01:03:09.600 --> 01:03:11.840] 更应该首先要学习的一点
[01:03:11.840 --> 01:03:14.080] 不然的话到时候你什么规则都不懂
[01:03:14.080 --> 01:03:15.520] 然后就像明哥一样
[01:03:15.520 --> 01:03:17.040] 然后我霸气侧漏
[01:03:17.040 --> 01:03:18.320] 然后把所有人diss一番
[01:03:18.320 --> 01:03:19.440] 然后一地鸡毛
[01:03:19.440 --> 01:03:21.040] 然后我觉得这样就不太好了
[01:03:21.040 --> 01:03:21.840] 是的
[01:03:21.840 --> 01:03:26.640] 对首先我就觉得可能说首先要去了解一下
[01:03:26.640 --> 01:03:29.600] 就是目前大家对于主流的一些东西
[01:03:29.600 --> 01:03:31.279] 然后一些就是说是态度
[01:03:31.279 --> 01:03:33.359] 然后一些会形式风格方式
[01:03:33.359 --> 01:03:37.440] 当然我们这个东西和国外所说的就是所谓的
[01:03:37.440 --> 01:03:40.400] 就是说是XX正确也是两回事
[01:03:40.400 --> 01:03:41.920] 只是大家通行的一些规则
[01:03:41.920 --> 01:03:45.359] 这样可能说能帮助你的项目更好的运营或其他
[01:03:45.359 --> 01:03:50.240] 就像明哥当时一发redmi机器前端千层档
[01:03:50.240 --> 01:03:54.720] 然后最后他的PR真的叫做乌烟脏气
[01:03:54.720 --> 01:03:57.919] 就这个东西如果是他当时更好的一些去处理的话
[01:03:57.919 --> 01:03:59.520] 说不定可能会更好一些
[01:04:01.359 --> 01:04:03.919] 其实他的PR好像并不是特别多
[01:04:03.919 --> 01:04:06.480] 我看和一数比较多
[01:04:06.480 --> 01:04:08.959] 对一数PR就是乌烟脏气
[01:04:09.680 --> 01:04:14.879] 一数都是什么期待明哥在PSP界开创一代传奇
[01:04:14.879 --> 01:04:19.520] 对想必明哥对COSONE也是了如指掌
[01:04:19.520 --> 01:04:22.879] 美少年张日雄不请自来请各位代歌海涵
[01:04:22.880 --> 01:04:28.960] 对相当于你的issue里吸引到什么人去开issue
[01:04:28.960 --> 01:04:33.120] 也是跟你的redmi包括你这个项目本身的态度有关的
[01:04:33.120 --> 01:04:37.360] 你项目本身就是一个全天下我最屌这样的项目
[01:04:37.360 --> 01:04:40.800] 槽点很多大家issue里自然也都是去吐槽的
[01:04:40.800 --> 01:04:44.240] 所以这都是一环扣一环的
[01:04:44.240 --> 01:04:50.400] 我觉得你要是想期待有些真的bug反馈或者一些PR什么的
[01:04:50.400 --> 01:04:53.280] 你自己这项目本身就要去搞的正规一点
[01:04:53.280 --> 01:04:54.880] 就不能这样乱搞
[01:04:54.880 --> 01:04:55.840] 是的同意
[01:04:55.840 --> 01:04:58.640] 说说就是先去了解一些社区的通行规则
[01:04:58.640 --> 01:05:03.040] 然后别出来一下天下老娘最屌这样就不太好了
[01:05:03.040 --> 01:05:04.400] 是的
[01:05:04.400 --> 01:05:11.440] 然后好那么我们说完明哥点js
[01:05:11.440 --> 01:05:15.440] 说点比较和大家息息相关的
[01:05:15.440 --> 01:05:17.440] 因为可能有很多同学不写前端
[01:05:17.440 --> 01:05:21.760] 前段时间996.su这个项目我们都知道对吧
[01:05:21.760 --> 01:05:26.320] 其实我也看到有很多很多博客不光是设计程序员的
[01:05:26.320 --> 01:05:30.800] 包括一些科技行业或者是聊人生的一些博客也都会提到996
[01:05:30.800 --> 01:05:35.920] 这个项目的火热程度已经其实超出了程序员这个小圈子对吧
[01:05:35.920 --> 01:05:45.760] 我觉得站在今天现在这个节点可以说这个项目本身的热度已经冷却下来了
[01:05:45.760 --> 01:05:49.440] 那么我们回过头来看有没有什么
[01:05:49.440 --> 01:05:53.040] 就是他到底有没有带来任何什么真正的价值
[01:05:53.040 --> 01:05:54.000] 你们怎么觉得
[01:05:54.000 --> 01:05:54.960] 我觉得有
[01:05:54.960 --> 01:05:56.240] 解释一下
[01:05:56.240 --> 01:06:01.920] 996.su可能大家都不太清楚996.su是怎么样一个项目
[01:06:01.920 --> 01:06:04.320] 我觉得大家都清楚我们的轻重
[01:06:04.320 --> 01:06:05.760] 我觉得我们轻重应该清楚
[01:06:05.760 --> 01:06:06.480] 应该清楚
[01:06:06.480 --> 01:06:09.200] 然后这个也就是说如果是有不清楚就大概两句
[01:06:09.200 --> 01:06:12.800] 因为当时具体996事件爆发之后
[01:06:12.800 --> 01:06:16.400] 然后的话就大概是去年到今年这段时间点
[01:06:16.400 --> 01:06:21.680] 然后就是说是有程序员建立了一个叫996.su名字叫做
[01:06:21.680 --> 01:06:25.040] 每天每年99天天996
[01:06:25.040 --> 01:06:28.560] 然后包里进su大概是这样一个看法
[01:06:28.560 --> 01:06:31.680] 然后这个项目后面其实衍生出来
[01:06:31.680 --> 01:06:34.640] 它并不算是说就仅限于国内
[01:06:34.640 --> 01:06:36.320] 或者说是仅限于其他
[01:06:36.320 --> 01:06:40.640] 还就是说是包括在国外的社区里面
[01:06:40.640 --> 01:06:44.160] 包括衍生出来了996的黑名单
[01:06:44.160 --> 01:06:46.240] 衍生出了996白名单
[01:06:46.240 --> 01:06:48.319] 衍生出了就是说是促进了
[01:06:48.319 --> 01:06:51.680] 然后就是说是周边的远程国内远程工作的发展
[01:06:51.680 --> 01:06:55.520] 乃至于去造就了一些社会事件
[01:06:55.520 --> 01:06:59.520] 比如说今年510的时候有人给马老师记劳动法
[01:06:59.520 --> 01:07:06.000] 然后最后也是在也是让马老师在公开场合
[01:07:06.000 --> 01:07:10.240] 然后对于996这件事的就是态度也就是更为温和了
[01:07:10.240 --> 01:07:12.000] 就是说是加班是不对的
[01:07:12.000 --> 01:07:13.120] 不加班也是不对的
[01:07:13.120 --> 01:07:14.640] 但是完不成工作是不对的
[01:07:14.640 --> 01:07:17.439] 对就这样的态度就更为温和了
[01:07:17.439 --> 01:07:18.879] 就是温和了
[01:07:18.879 --> 01:07:23.040] 所以说我觉得它其实算是一个相当大型的社会实验
[01:07:23.040 --> 01:07:28.799] 然后我觉得它对于就是说是这一段时间的特殊时期的记录
[01:07:28.799 --> 01:07:34.000] 然后以及就是说整个社会的就是执行员社会的一个状态一个记录
[01:07:34.000 --> 01:07:39.040] 然后包括你从他的艺术区和他的最开始是有艺术区的
[01:07:39.040 --> 01:07:43.520] 你从他的PR区然后看起来看就是具体的东西的话
[01:07:43.520 --> 01:07:48.640] 其实这个东西的话它是一个非常有特殊意义的项目
[01:07:48.640 --> 01:07:50.240] 至少对于当前的中国来说
[01:07:50.240 --> 01:07:54.480] 对你刚才说一点我特别同意
[01:07:54.480 --> 01:07:57.279] 就是你说它是一个就特殊时期的记录
[01:07:57.279 --> 01:08:00.000] 我觉得就说特别好
[01:08:00.000 --> 01:08:04.240] 因为我个人是相信30年后一定没有996的
[01:08:04.240 --> 01:08:09.200] 就我个人从中国的各种比较主要就是生育率
[01:08:09.200 --> 01:08:11.439] 生育率上判断我觉得30年后一定没有996
[01:08:11.439 --> 01:08:12.560] 就加班可能有
[01:08:12.560 --> 01:08:15.600] 但是996肯定不会像今天这么严重
[01:08:15.600 --> 01:08:19.599] 那么我们可能到那个时候一些历史学家回过头来看
[01:08:19.599 --> 01:08:21.200] 假设Github还存在
[01:08:21.200 --> 01:08:23.760] 那就会发现有一个项目叫做996.su
[01:08:23.760 --> 01:08:28.319] 记录了说30年前人们对于996的不满和反抗
[01:08:28.319 --> 01:08:30.399] 那么这其实是非常珍贵的史料
[01:08:30.399 --> 01:08:31.359] 是的
[01:08:31.359 --> 01:08:36.160] 对 因为它其实这个项目并不像于其他
[01:08:36.160 --> 01:08:39.839] 它很特殊的一点是这个项目并不像是其他的项目
[01:08:39.839 --> 01:08:42.240] 其他的就是抱怨内的项目
[01:08:42.240 --> 01:08:45.439] 我就只是建个issue我建个PR我去吐槽一番
[01:08:45.439 --> 01:08:51.599] 而它是实际上的是促进了一群人在为这件事实施在做一些东西
[01:08:51.599 --> 01:08:54.880] 比如说建立企业黑名单
[01:08:54.880 --> 01:08:57.839] 建立企业白名单
[01:08:57.839 --> 01:09:00.479] 然后促进建立远程工作名单
[01:09:00.479 --> 01:09:04.000] 然后包括它向国外的社区的宣告
[01:09:04.000 --> 01:09:09.679] 然后以及向国内社区的一些在舆论上施压等等
[01:09:09.679 --> 01:09:13.679] 所以我觉得这个东西的话它不仅是一个项目那么简单了
[01:09:13.679 --> 01:09:16.639] 可以说是叫做某种意义上叫做一个社会实践
[01:09:16.639 --> 01:09:20.959] 就是在中国的情况在当前中国的这样一个情况下
[01:09:20.959 --> 01:09:26.479] 怎么样去合理的然后发动一群人为自身的权益去做一些争取
[01:09:26.479 --> 01:09:31.839] 然后另一方面也像我之前说的
[01:09:31.839 --> 01:09:35.919] 这个项目的影响力其实已经远远超出了程序员圈子
[01:09:35.919 --> 01:09:45.359] 我觉得应该算是在整个社会上影响最大的一个开源项目
[01:09:45.359 --> 01:09:47.679] 我们把它也称为开源项目
[01:09:47.679 --> 01:09:49.599] 它已经不是一个项目了
[01:09:49.599 --> 01:09:51.200] 它应该就说是一个
[01:09:51.200 --> 01:09:52.559] 运动或者叫
[01:09:52.559 --> 01:09:53.599] 对是的
[01:09:53.600 --> 01:09:56.560] 一个对当然国内运动这个词要慎用
[01:09:56.560 --> 01:09:59.760] 或者说叫做一场大型的一个大家的一个活动
[01:09:59.760 --> 01:10:03.040] 对大家懂不懂意思就好了
[01:10:03.040 --> 01:10:07.520] 对然后的话就包括其他相关的法律分析
[01:10:07.520 --> 01:10:11.680] 我看了PR区还有就说其他不仅限于IT公司
[01:10:11.680 --> 01:10:14.400] 拉链公司服装公司什么的都在里面
[01:10:14.400 --> 01:10:18.320] 对所以说它就应该不仅是一个项目那么简单
[01:10:18.320 --> 01:10:24.480] 我觉得就是让大家意识到996这些事情被产生讨论
[01:10:24.480 --> 01:10:26.799] 也是非常积极的一个影响
[01:10:26.799 --> 01:10:30.400] 是的我觉得这就是它非常重要的一个意义
[01:10:30.400 --> 01:10:37.759] 对还有一点就是996.su项目它衍生出了一个叫做NT996 license
[01:10:37.759 --> 01:10:40.400] 就是这样一个license
[01:10:40.400 --> 01:10:41.840] 那么大概的意思就是说
[01:10:41.840 --> 01:10:44.639] 比如说我是一个开源项目的作者
[01:10:44.640 --> 01:10:49.840] 那么我如果给我自己的项目用NT996 license作为自己项目的license的话
[01:10:49.840 --> 01:10:52.800] 那么你如果这个公司是996的话
[01:10:52.800 --> 01:10:56.160] 你从法律上来说你就不能用我这个开源项目
[01:10:56.160 --> 01:11:00.720] 当然这个东西实际有没有一些案例我现在还不清楚
[01:11:00.720 --> 01:11:01.600] 可能还没有
[01:11:01.600 --> 01:11:12.480] 但是我觉得这是一个从法律层面进行一种合法的对抗不合理的加班的一种尝试
[01:11:12.480 --> 01:11:14.719] 我个人是非常支持的
[01:11:14.719 --> 01:11:17.919] 但是996本身不已经违法了吗
[01:11:17.919 --> 01:11:21.040] 就你要证明他违反使用了这个license
[01:11:21.040 --> 01:11:22.719] 你要先证明他996了
[01:11:22.719 --> 01:11:25.759] 但既然你能证明他996你就可以起诉他了
[01:11:25.759 --> 01:11:29.040] 这个东西我去这个东西又不好明说
[01:11:29.040 --> 01:11:33.120] 怎么这段剪掉我先说一下怎么看剪不剪掉
[01:11:33.120 --> 01:11:40.320] 因为当前中国的情况下虽然说996是一个严格意义上说是违反劳动法的情况
[01:11:40.320 --> 01:11:42.880] 但是因为中国的就是说是相对来说
[01:11:42.880 --> 01:11:51.519] 就是说是在那个有执法或者说其他一些原因导致的可能说各企业各地的司法时间并不一样
[01:11:51.519 --> 01:11:53.599] 当然中国这块是在改进的
[01:11:53.599 --> 01:11:54.799] 但是是需要时间
[01:11:54.799 --> 01:11:59.679] 有时候在目前到最后解决这个问题中间这段时间里面
[01:11:59.679 --> 01:12:02.880] 他的司法时间相对是欠缺的
[01:12:02.880 --> 01:12:08.160] 说这个时候也就是说我经历了996我起诉我并不一定能赢
[01:12:08.160 --> 01:12:10.400] 就是说因为就是说这个东西的话
[01:12:10.400 --> 01:12:22.480] 而安提996他其实是想通过一个公开的渠道获取到一些比如说劳动总裁或者说其他一些信息来判定你这样一个情况的支持
[01:12:22.480 --> 01:12:31.040] 而目前对于国内对于这块开源许可证的一个司法实践其实也是在不断摸索的
[01:12:31.040 --> 01:12:36.480] 说说安提996他这个license如果说是有上游项目在用了
[01:12:36.480 --> 01:12:39.280] 那么能不能启用两说
[01:12:39.280 --> 01:12:43.040] 但是相对来说是一个比较好的一个开端我觉得
[01:12:43.040 --> 01:12:46.000] 对我觉得你现在有这样一个项目
[01:12:46.000 --> 01:12:47.200] 然后有这样一个license
[01:12:47.200 --> 01:12:50.240] 然后有人用你才可能有司法时间
[01:12:50.240 --> 01:12:53.519] 就是说如果你什么都没有的话就一切都开始不了
[01:12:53.519 --> 01:12:57.440] 对实际上是有相关的司法时间是有一个GNU的时间
[01:12:57.440 --> 01:13:01.440] 之前15年和17年的时候北京有两起判例
[01:13:01.440 --> 01:13:05.599] 那个是参考了GNU的一些说法
[01:13:05.600 --> 01:13:08.640] 开源许可证在国内
[01:13:08.640 --> 01:13:13.280] 但是因为中国的司法体制判例来说相对参考意义不大
[01:13:13.280 --> 01:13:15.280] 但是也会做一个参考
[01:13:15.280 --> 01:13:18.720] 所以说这一块具体的实践还在摸索之中
[01:13:18.720 --> 01:13:23.200] 反正我觉得就越多越好吧
[01:13:23.200 --> 01:13:24.640] 对
[01:13:24.640 --> 01:13:29.680] OK好那么聊完996
[01:13:29.680 --> 01:13:35.360] 下面这个项目可能是一个非常特别的项目
[01:13:35.360 --> 01:13:38.880] 我个人其实也想了很久要不要在这期来聊
[01:13:38.880 --> 01:13:41.120] 然后但我决定还是来聊一下
[01:13:41.120 --> 01:13:43.920] 这个项目的名字叫做Dress
[01:13:43.920 --> 01:13:51.120] 我觉得可能我们的听众应该对于这个项目不是很了解
[01:13:51.120 --> 01:13:53.920] 但是如果你混v2ex这个社区的话
[01:13:53.920 --> 01:13:56.880] 之前可能有看到过相关的讨论
[01:13:56.880 --> 01:14:02.559] 那么这个v2这个帖子标题我可以其实念一下
[01:14:02.560 --> 01:14:09.600] 就是这个项目叫对Github热门项目dress感到不适
[01:14:09.600 --> 01:14:12.000] 不适就是不舒服那个不是
[01:14:12.000 --> 01:14:14.240] 然后是否应该接受这种文化
[01:14:14.240 --> 01:14:17.760] 然后这个帖子有89个回复
[01:14:17.760 --> 01:14:20.160] 可以说是一个很热门的讨论
[01:14:20.160 --> 01:14:25.280] 那么dress这个项目到底是干什么的
[01:14:25.280 --> 01:14:27.600] 干什么的其实非常简单
[01:14:27.600 --> 01:14:29.760] 就是有很多人把照片贴上去了
[01:14:29.760 --> 01:14:34.240] 因为Github你没有说不能传照片
[01:14:34.240 --> 01:14:36.080] 我自然是可以传照片
[01:14:36.080 --> 01:14:37.600] 这当然是符合规范的
[01:14:37.600 --> 01:14:39.120] 但他这个照片比较特别
[01:14:39.120 --> 01:14:44.640] 应该说基本上或者说全部都是女装照
[01:14:44.640 --> 01:14:50.960] 那么这个女装并不是你们想的是只是说穿裙子或者怎么样
[01:14:50.960 --> 01:14:58.720] 而是他在特定的语境下指的是以男性的身份去穿女装
[01:14:58.720 --> 01:15:00.640] 拍摄照片
[01:15:00.640 --> 01:15:03.200] 所以这就是dress这样一个项目
[01:15:03.200 --> 01:15:08.480] 那么他现在里面可能已经收集了有多少人的照片
[01:15:08.480 --> 01:15:14.400] 很难数我觉得至少都有几百个应该有几百个几百个人的照片
[01:15:14.400 --> 01:15:17.040] 对是这样子
[01:15:17.040 --> 01:15:21.440] 然后有807个commit和14.4k的star
[01:15:21.440 --> 01:15:23.920] 也就是14000个star
[01:15:23.920 --> 01:15:27.440] 所以说应该是一个超级热门的项目
[01:15:27.440 --> 01:15:32.240] 然后这个项目我觉得我不知道你们怎么看了
[01:15:32.240 --> 01:15:37.040] 但是我个人其实是我也想了很久到底应该怎么看
[01:15:37.040 --> 01:15:40.719] 我其实也现在也没有一个很明确的态度
[01:15:40.719 --> 01:15:44.719] 就我还是觉得比较复杂的这个事情
[01:15:44.719 --> 01:15:48.240] 我自己的态度是不支持不反对
[01:15:48.240 --> 01:15:50.719] 然后对
[01:15:50.720 --> 01:15:57.760] 我总结是叫做支持合理的支持
[01:15:57.760 --> 01:15:59.680] 然后反对不合理的反对
[01:15:59.680 --> 01:16:03.040] 支持合理的支持是指
[01:16:03.040 --> 01:16:05.760] 就是说是如果说有人支持这个项目
[01:16:05.760 --> 01:16:07.840] 那么我会支持他去支持这个项目
[01:16:07.840 --> 01:16:09.920] 如果说有人去反对这个项目
[01:16:09.920 --> 01:16:12.160] 但是他的理由七七八八
[01:16:12.160 --> 01:16:13.200] 那么我会反对
[01:16:13.200 --> 01:16:15.680] 比如说你不能穿女装
[01:16:15.680 --> 01:16:16.960] 你只会反对这样子
[01:16:16.960 --> 01:16:18.160] 对这样的理由
[01:16:18.160 --> 01:16:24.080] 但如果我的理由是Github是一个代码分享平台
[01:16:24.080 --> 01:16:26.320] 你不应该把它做一个照片存储的平台
[01:16:26.320 --> 01:16:27.519] 这个理由你觉得
[01:16:27.519 --> 01:16:28.559] 我觉得不合理
[01:16:28.559 --> 01:16:31.280] 因为Github它其实没有它官方的说明
[01:16:31.280 --> 01:16:33.840] 它其实是没有规定具体的使用方式的
[01:16:33.840 --> 01:16:36.240] 但是你可以接受
[01:16:36.240 --> 01:16:37.840] 比如说我不喜欢这个项目
[01:16:37.840 --> 01:16:38.880] 我接受
[01:16:38.880 --> 01:16:42.000] 因为这个东西你喜不喜欢我管不了
[01:16:42.000 --> 01:16:45.040] 但是我尊重每个人的喜好
[01:16:45.040 --> 01:16:46.880] 然后在客观的事实的情况下
[01:16:46.880 --> 01:16:48.080] 我尊重每个人的喜好
[01:16:48.080 --> 01:16:50.640] 信涛怎么看的
[01:16:50.640 --> 01:16:52.160] 我没什么兴趣
[01:16:52.160 --> 01:16:53.840] 我现在我就是很奇怪
[01:16:53.840 --> 01:16:57.280] 怎么这么多人程序员里面喜欢女装
[01:16:57.280 --> 01:16:58.640] 我不知道为什么
[01:16:58.640 --> 01:17:00.320] 我感觉比别的行业要多
[01:17:00.320 --> 01:17:01.920] 就我在推特关注了很多大佬
[01:17:01.920 --> 01:17:02.800] 经常发女装
[01:17:02.800 --> 01:17:04.000] 但是我没兴趣
[01:17:04.000 --> 01:17:06.000] 我就是手动忽略
[01:17:06.000 --> 01:17:10.800] 我不知道这个项目他们发照片的人是不是都是程序员
[01:17:10.800 --> 01:17:12.160] 我也不知道是不是
[01:17:12.160 --> 01:17:14.720] 因为我听到过一种说法
[01:17:14.720 --> 01:17:17.280] 就是说很多人是通过Dress这个项目
[01:17:17.280 --> 01:17:19.440] 第一次学会了使用PR
[01:17:19.440 --> 01:17:21.759] 就是GitHub的pool request
[01:17:21.759 --> 01:17:25.280] 然后可能如果你是第一次使用pool request的话
[01:17:25.280 --> 01:17:27.840] 大概也许你还不是程序员
[01:17:27.840 --> 01:17:28.480] 我猜的
[01:17:30.880 --> 01:17:31.840] 好了
[01:17:31.840 --> 01:17:32.960] 把我这段剪掉吧
[01:17:32.960 --> 01:17:34.320] 我觉得
[01:17:34.960 --> 01:17:37.040] 我觉得可以不用剪掉
[01:17:37.040 --> 01:17:38.800] 没有招黑
[01:17:38.800 --> 01:17:40.320] 剪了
[01:17:40.320 --> 01:17:40.960] 没有了
[01:17:42.240 --> 01:17:43.840] 但是我真的很奇怪
[01:17:43.840 --> 01:17:45.280] 为什么我推特关注的人
[01:17:45.280 --> 01:17:47.280] 我觉得女装这种东西的话
[01:17:47.280 --> 01:17:48.639] 一种是好玩吧
[01:17:48.639 --> 01:17:51.280] 然后一种是觉得可能就是说是认别
[01:17:51.280 --> 01:17:54.000] 就是性别认别的确是和
[01:17:54.000 --> 01:17:56.240] 就是说是和他的本身性别不一样
[01:17:56.240 --> 01:18:00.160] 不是不是很多人没有性别的问题
[01:18:00.160 --> 01:18:00.960] 穿着玩呗
[01:18:00.960 --> 01:18:03.040] 我觉得就这种个人爱好吧
[01:18:03.040 --> 01:18:03.360] 对吧
[01:18:03.360 --> 01:18:07.200] 然后这种现在压力的压力
[01:18:07.200 --> 01:18:09.360] 然后谁不给自己找一点小爱好
[01:18:09.360 --> 01:18:11.440] 我觉得这个东西还是挺好玩的
[01:18:11.440 --> 01:18:11.759] 对
[01:18:11.759 --> 01:18:13.360] 然后当然我不穿啊
[01:18:13.360 --> 01:18:15.360] 但是我觉得挺好玩
[01:18:15.360 --> 01:18:16.080] 你可以穿
[01:18:16.080 --> 01:18:17.200] 我们可以赞助你
[01:18:17.200 --> 01:18:18.880] 好
[01:18:18.880 --> 01:18:19.759] no way
[01:18:19.759 --> 01:18:22.000] 然后我女朋友那天还在评论区说
[01:18:22.000 --> 01:18:23.519] 她说我穿女装很好看
[01:18:23.519 --> 01:18:24.000] no way
[01:18:25.200 --> 01:18:26.719] 不过某种意义上
[01:18:26.719 --> 01:18:33.200] 这好像确实是一个国内的一种文化现象
[01:18:33.200 --> 01:18:34.160] 或者应该怎么说
[01:18:34.160 --> 01:18:34.559] 怎么说
[01:18:34.559 --> 01:18:35.200] 因为我不知道
[01:18:35.200 --> 01:18:36.080] 新涛你关注那些
[01:18:36.080 --> 01:18:38.400] 你是关注的国内的人比较多
[01:18:38.400 --> 01:18:39.360] 还是国外的人比较多
[01:18:39.360 --> 01:18:40.960] 国内的呀
[01:18:40.960 --> 01:18:41.679] 国内的呀
[01:18:41.680 --> 01:18:45.040] 你们他们line上没有吗
[01:18:45.040 --> 01:18:46.480] 国内和日本的都有
[01:18:46.480 --> 01:18:52.240] 我感觉好像英语世界里并没有说
[01:18:52.240 --> 01:18:54.960] 把女装和程序员联系到一起
[01:18:54.960 --> 01:18:56.400] 至少我没有看到
[01:18:56.400 --> 01:18:59.040] 因为就不知道是最早不知道出自于什么地方
[01:18:59.040 --> 01:19:01.680] 能感觉说穿女装能有效减少bug
[01:19:01.680 --> 01:19:04.880] 对是听说过这种说法
[01:19:04.880 --> 01:19:07.760] 但是我觉得应该没有人真的会
[01:19:07.760 --> 01:19:08.480] 不应该
[01:19:08.480 --> 01:19:11.200] 有人实践过
[01:19:11.200 --> 01:19:13.519] 然后当然我不知道是不是真的
[01:19:13.519 --> 01:19:14.880] 他说是有人实践过
[01:19:14.880 --> 01:19:18.880] 然后说这种地方的确是会减少很多bug
[01:19:18.880 --> 01:19:22.800] 对但是不过说回来
[01:19:22.800 --> 01:19:24.240] 其实一方面是你的
[01:19:24.240 --> 01:19:25.280] 比如说你穿女装
[01:19:25.280 --> 01:19:27.440] 我对这个事情是完全没有任何意见
[01:19:27.440 --> 01:19:29.760] 甚至可以说我是支持你穿女装
[01:19:29.760 --> 01:19:30.720] 如果你想穿的话
[01:19:30.720 --> 01:19:32.160] 但是另一方面
[01:19:32.160 --> 01:19:33.920] 你不要笑
[01:19:33.920 --> 01:19:35.679] 对另一方面我们在讨论的事情
[01:19:35.680 --> 01:19:42.080] 其实是你把Github作为一个这样一个
[01:19:42.080 --> 01:19:43.840] 发照片的这样一个地方
[01:19:43.840 --> 01:19:46.960] 这样一个行为它本身对吧
[01:19:46.960 --> 01:19:49.440] 我们是在讨论这件事情
[01:19:49.440 --> 01:19:51.200] 对首先是女装这个事情
[01:19:51.200 --> 01:19:52.480] 我也是不
[01:19:52.480 --> 01:19:55.520] 我就说是我是持友善态度的
[01:19:55.520 --> 01:19:57.360] 然后至于就是说我们这件事
[01:19:57.360 --> 01:19:58.400] 另外一个方面就是说
[01:19:58.400 --> 01:20:01.280] 我在Github把它当做一个发照片的新闻
[01:20:01.280 --> 01:20:02.960] 我觉得是完全ok的
[01:20:02.960 --> 01:20:04.560] 你觉得完全ok
[01:20:04.560 --> 01:20:06.480] 因为其实反对的人
[01:20:06.480 --> 01:20:07.760] 我就直接反对一个东西
[01:20:07.760 --> 01:20:10.320] 很多人是把博客建在Github上面
[01:20:10.320 --> 01:20:13.360] 而且是用Github来作为图床的
[01:20:13.360 --> 01:20:16.800] 是的是的既然为什么你可以把博客
[01:20:16.800 --> 01:20:19.520] 然后包括你的各种图片生活记录
[01:20:19.520 --> 01:20:22.160] 来用Github来承载
[01:20:22.160 --> 01:20:24.320] 那么为什么不允许别人来用承载呢
[01:20:24.320 --> 01:20:26.960] Github没有是说决定
[01:20:26.960 --> 01:20:28.800] 我用户该怎么样去用Github
[01:20:31.280 --> 01:20:32.880] 对那
[01:20:32.880 --> 01:20:34.640] Github是一个商业公司
[01:20:34.640 --> 01:20:36.240] 这是Github遇到的问题
[01:20:36.240 --> 01:20:38.000] 他们应该用技术手段来解决
[01:20:38.000 --> 01:20:41.600] 但你这么说你本身你觉得它还是一个问题
[01:20:41.600 --> 01:20:45.200] 我觉得Github既然不处理这个问题
[01:20:45.200 --> 01:20:47.120] 就是他们认为没有问题
[01:20:47.120 --> 01:20:48.240] 就比如说
[01:20:48.240 --> 01:20:52.080] 他们应该限制仓库的最大的那个大小
[01:20:52.080 --> 01:20:53.840] 如果他们觉得真的在意这个问题
[01:20:53.840 --> 01:20:55.520] 他们可以限制每一个用户
[01:20:55.520 --> 01:20:57.840] 所有仓库加起来的配额
[01:20:57.840 --> 01:21:02.960] 还真不知道我们Github有限制吗
[01:21:02.960 --> 01:21:05.840] 单仓户有限制
[01:21:05.840 --> 01:21:10.960] 这样对你刚说图床问题
[01:21:10.960 --> 01:21:13.840] 其实他有一个就是Dress他们建了一个网站
[01:21:13.840 --> 01:21:16.400] 好像就是拿Github这个直接作为图床
[01:21:16.400 --> 01:21:18.640] 我觉得这个东西是没问题的
[01:21:18.640 --> 01:21:20.000] 其实相反某种意义来说
[01:21:20.000 --> 01:21:22.320] Github其实是支持这种行为的
[01:21:22.320 --> 01:21:23.040] 是吗
[01:21:23.040 --> 01:21:25.840] 对因为他定义他其实是
[01:21:25.840 --> 01:21:30.960] 他自己的定义他没有说是说一个code platform
[01:21:30.960 --> 01:21:33.760] 他没有说是叫做一个code platform
[01:21:33.760 --> 01:21:35.440] 他自己的定位
[01:21:35.440 --> 01:21:38.800] 对我觉得这个是一个很有意思的问题
[01:21:38.800 --> 01:21:40.080] 就Github他的
[01:21:40.080 --> 01:21:43.120] 就Github到底是什么你们觉得
[01:21:43.120 --> 01:21:47.280] 我好像没有找到他一个特别官方解释
[01:21:47.280 --> 01:21:48.400] 就我们都知道它是什么
[01:21:48.400 --> 01:21:50.880] 但是我们很难给他一个定义
[01:21:50.880 --> 01:21:54.720] SCM是什么意思
[01:21:54.720 --> 01:21:58.560] Source Code Management Platform
[01:21:58.560 --> 01:22:00.880] 那他已经不限于source code了
[01:22:00.880 --> 01:22:12.320] Github是一个开发平台
[01:22:12.320 --> 01:22:16.160] 从开发到生意
[01:22:16.160 --> 01:22:18.400] 他就是只是说一个平台
[01:22:18.400 --> 01:22:22.000] 然后你可以主持和评测
[01:22:22.000 --> 01:22:30.960] 然后你可以做什么包括管理项目
[01:22:30.960 --> 01:22:32.720] 所以我觉得这个东西的话
[01:22:32.720 --> 01:22:36.320] 我觉得他现在某种意义上可以说是叫做一个社交平台了
[01:22:36.320 --> 01:22:38.560] 不过反正我个人觉得
[01:22:38.560 --> 01:22:43.440] 我觉得这次当然是包括任何其他的markdown项目什么的
[01:22:43.440 --> 01:22:44.400] 当然是没有问题
[01:22:44.400 --> 01:22:46.320] 既然Github认为你没有问题
[01:22:46.320 --> 01:22:47.600] 那自然就是没有问题
[01:22:47.600 --> 01:22:49.120] 但是他的确是
[01:22:49.120 --> 01:22:53.599] 或者说不同于Github一开始建立的初衷的目的
[01:22:53.599 --> 01:22:56.160] 我觉得这个的确是不一样的
[01:22:56.160 --> 01:23:00.640] 你可以手动忽略
[01:23:00.640 --> 01:23:05.760] 但其实Git是可以用来管理文本的东西的
[01:23:05.760 --> 01:23:09.920] 比如说GitLab他们就用PR仓库的这种形式
[01:23:09.920 --> 01:23:11.760] 来管理自己公司一切东西
[01:23:11.760 --> 01:23:13.440] 包括自己公司的理念
[01:23:13.440 --> 01:23:16.320] 行为准则什么的
[01:23:16.320 --> 01:23:18.000] 但是文本对吧
[01:23:18.000 --> 01:23:20.480] 文本毕竟还是比较接近code的
[01:23:20.480 --> 01:23:22.080] 因为code是文本的一种
[01:23:22.080 --> 01:23:24.720] 那么我们找一下他的
[01:23:24.720 --> 01:23:27.120] markdown也是文本啊
[01:23:27.120 --> 01:23:28.320] 对对对
[01:23:28.320 --> 01:23:29.840] 所以我的意思是比如说
[01:23:29.840 --> 01:23:31.040] 比如说我们再进一步
[01:23:31.040 --> 01:23:33.360] 我们不只是存照片
[01:23:33.360 --> 01:23:34.640] 我们还存视频
[01:23:34.640 --> 01:23:39.600] 我们把Github当成一个流媒体平台来用
[01:23:39.600 --> 01:23:40.080] 对吧
[01:23:40.080 --> 01:23:42.080] 这个感觉又更进一步了
[01:23:42.080 --> 01:23:47.440] 我觉得是在不违背他的许可证的情况下是没有问题的
[01:23:47.440 --> 01:23:48.000] 对
[01:23:48.000 --> 01:23:51.120] 你违背了他就搬你账号了
[01:23:51.120 --> 01:23:54.639] 我觉得这个东西讨不讨论违规
[01:23:54.639 --> 01:23:56.080] 就是说讨不讨论合理
[01:23:56.080 --> 01:23:57.839] 这个东西不是由我们来说了算
[01:23:57.839 --> 01:23:59.440] 而是由Github来说了算了
[01:23:59.440 --> 01:24:01.360] 如果说是对Github
[01:24:01.360 --> 01:24:04.480] 如果说是他没有在他agreement里面明确说明
[01:24:04.480 --> 01:24:08.960] 说你不能用来做鱼XXX的事情
[01:24:08.960 --> 01:24:11.440] 或者然后或者说他给你一个局限
[01:24:11.440 --> 01:24:13.919] 比如说我单仓库能够相关联的
[01:24:13.919 --> 01:24:16.639] 就是说是图片或其他不超过50MB
[01:24:16.640 --> 01:24:18.640] 然后但是他没有给予其他说明
[01:24:18.640 --> 01:24:20.480] 那么在50MB范围之内
[01:24:20.480 --> 01:24:21.840] 你还用来装视频什么的
[01:24:21.840 --> 01:24:23.120] 我觉得是都是没有问题的
[01:24:23.120 --> 01:24:28.640] 因为是就是说是非禁止及允许
[01:24:28.640 --> 01:24:31.520] 他们是一个商业公司
[01:24:31.520 --> 01:24:33.440] 一般的公司都会有一个部门
[01:24:33.440 --> 01:24:35.680] 像支付宝这个部门可能就比较大
[01:24:35.680 --> 01:24:36.640] 叫KYC
[01:24:36.640 --> 01:24:37.840] Know Your Customer
[01:24:37.840 --> 01:24:42.560] 一般的语音服务商或者像这种服务商都会有这种东西
[01:24:42.560 --> 01:24:46.400] 因为是我问这个问题也是因为我自己之前
[01:24:46.400 --> 01:24:47.920] 不是写过一些文章吗
[01:24:47.920 --> 01:24:56.320] 就是我个人其实是觉得Github是现在唯一靠谱的这种存储信息的平台
[01:24:56.320 --> 01:24:59.440] 然后我当时也是说
[01:24:59.440 --> 01:25:02.559] 就是你如果想把你的个人信息放在网上
[01:25:02.559 --> 01:25:04.320] 让100年之后的人还能访问
[01:25:04.320 --> 01:25:07.280] 那Github可能是你的唯一选择
[01:25:07.280 --> 01:25:12.719] 所以所以我觉得可能未来我们会看到越来越多的这种
[01:25:12.719 --> 01:25:15.120] 针对代码之外的对Github的应用
[01:25:15.120 --> 01:25:18.400] 而Github这个平台可能也需要去思考一下
[01:25:18.400 --> 01:25:22.720] 它本身到底是不是应该去规范这种行为
[01:25:22.720 --> 01:25:24.080] 或者要去怎么规范
[01:25:24.080 --> 01:25:26.640] 其实我觉得对Github来说
[01:25:26.640 --> 01:25:30.960] 这个东西对于他们来讲其实也是一个双赢的事情
[01:25:30.960 --> 01:25:36.880] 因为他们自己可能也并不想局限于说将自己定位在程序员的范围
[01:25:36.880 --> 01:25:38.640] 未必是双赢
[01:25:38.640 --> 01:25:41.040] 比如说当他们的
[01:25:41.040 --> 01:25:44.880] 就现在可能以代码存储为主的时候
[01:25:44.880 --> 01:25:48.240] 情况下有小部分的非代码
[01:25:48.240 --> 01:25:49.200] 这个是一个双赢
[01:25:49.200 --> 01:25:51.040] 但是你如果真的是大家用来
[01:25:51.040 --> 01:25:52.640] 比如说就举个例子存视频
[01:25:52.640 --> 01:25:53.840] 那我的带宽的费用
[01:25:53.840 --> 01:25:54.800] 对吧
[01:25:54.800 --> 01:25:57.280] 你想想百度网盘和各种网盘为什么会
[01:25:57.280 --> 01:25:59.360] 从免费到收费
[01:25:59.360 --> 01:26:00.320] 再有的还倒立
[01:26:00.320 --> 01:26:01.760] 我觉得这个问题很好解决
[01:26:01.760 --> 01:26:05.440] 这个问题我觉得很好解决
[01:26:05.440 --> 01:26:08.240] 你就看一下Git里面有多少个binary
[01:26:08.240 --> 01:26:09.120] 最大的多大
[01:26:09.120 --> 01:26:10.080] 你可以直接把它
[01:26:10.080 --> 01:26:11.920] 我不是说实现层面
[01:26:11.920 --> 01:26:14.160] 我只是说他们现在是完全没有限制
[01:26:14.160 --> 01:26:16.240] 我只是说万一他们有一
[01:26:16.240 --> 01:26:18.559] 因为主要说一定是双赢
[01:26:18.559 --> 01:26:21.840] 我其实是觉得可能到一定程度就不是双赢
[01:26:21.840 --> 01:26:23.440] 对这点我同意
[01:26:23.440 --> 01:26:24.720] 不过看他们来说
[01:26:24.720 --> 01:26:27.599] 让他们自己商业公司有商业说话
[01:26:27.599 --> 01:26:30.480] 看他们什么时候更新条款或其他
[01:26:30.480 --> 01:26:32.080] 好
[01:26:32.080 --> 01:26:33.120] 行
[01:26:33.120 --> 01:26:35.360] 然后我觉得我们可以休息一下
[01:26:35.360 --> 01:26:37.840] 然后最后还有点推荐什么的
[01:26:41.680 --> 01:26:43.599] 然后我先来推荐一个
[01:26:43.600 --> 01:26:45.840] 然后我正好是我最近在
[01:26:45.840 --> 01:26:49.120] 就是说是在专注的一个项目
[01:26:49.120 --> 01:26:52.160] 跟我未来一段时间的发展也比较相关的
[01:26:52.160 --> 01:26:54.320] 就是说是一个API6
[01:26:54.320 --> 01:26:57.120] 它是阿帕奇目前下面的一个孵化项目
[01:26:57.120 --> 01:26:58.320] 就孵化器的项目
[01:26:58.320 --> 01:27:00.640] 然后它是基于Open REST
[01:27:00.640 --> 01:27:02.800] 就是NGX加Luna这一套东西
[01:27:02.800 --> 01:27:04.880] 来做一套网关
[01:27:04.880 --> 01:27:06.880] 就是说是L4 L7的一套
[01:27:06.880 --> 01:27:08.880] 就主要是L7的一套网关
[01:27:08.880 --> 01:27:10.880] 然后多协议支持和其他的
[01:27:10.880 --> 01:27:12.320] 然后大家可以试用一下
[01:27:12.320 --> 01:27:14.320] 然后对于你的服务治理
[01:27:14.320 --> 01:27:15.920] 或者其他来说还是挺方便的
[01:27:17.440 --> 01:27:19.679] 这个是在什么情况下会用
[01:27:19.679 --> 01:27:23.360] 比如说我统一有一个接入的网关流量的入口
[01:27:23.360 --> 01:27:27.519] 然后将对应的流量按照当时的策略
[01:27:27.519 --> 01:27:28.880] 分配到不同的服务上
[01:27:28.880 --> 01:27:30.880] 或者其他
[01:27:30.880 --> 01:27:34.639] 为什么那跟空有什么区别吗
[01:27:34.639 --> 01:27:37.280] 它是它比空更轻量
[01:27:37.280 --> 01:27:38.799] 对
[01:27:38.800 --> 01:27:42.720] 但是我觉得现在空都活得不是很好
[01:27:42.720 --> 01:27:45.680] 这个项目有点前途很存疑
[01:27:45.680 --> 01:27:50.080] 空其实现在活的可能比你想象的好
[01:27:50.080 --> 01:27:56.240] 它在一些专业的领域的话
[01:27:56.240 --> 01:27:58.320] 就是说是它活的比你想象的好
[01:27:58.320 --> 01:28:01.680] 而且现在就不是说是Cloud Native那一套
[01:28:01.680 --> 01:28:04.800] 它就是因为Cloud Native才活化
[01:28:04.800 --> 01:28:07.920] 因为现在叫什么
[01:28:07.920 --> 01:28:11.280] SeriesMesh方案已经有三套很成熟的了
[01:28:11.280 --> 01:28:13.680] 然后空之前只是做网关
[01:28:13.680 --> 01:28:14.800] 它没有做SeriesMesh
[01:28:14.800 --> 01:28:20.240] 对它其实就是说ServiceMesh和网关是解决了不同的事情
[01:28:20.240 --> 01:28:22.160] 我觉得就是说后续的话
[01:28:22.160 --> 01:28:24.720] 他们都是还是有不同的定位的
[01:28:24.720 --> 01:28:26.640] 因为你ServiceMesh没法替代网关
[01:28:26.640 --> 01:28:28.880] 你网关也没法替代ServiceMesh
[01:28:28.880 --> 01:28:37.840] 为什么这些项目都喜欢叫什么REST
[01:28:37.840 --> 01:28:39.200] REST是什么意思
[01:28:39.200 --> 01:28:42.320] OpenREST是一个开源的项目
[01:28:42.320 --> 01:28:43.680] 我知道OpenREST
[01:28:43.680 --> 01:28:48.400] 但是它API6它的网站叫irest.com
[01:28:48.400 --> 01:28:52.560] 这个我真不知道
[01:28:52.560 --> 01:28:56.000] 难道是说叫做我这是我不知道
[01:28:56.000 --> 01:29:00.160] 可能就是REST加一个Y
[01:29:00.160 --> 01:29:04.960] REST风格的API
[01:29:04.960 --> 01:29:06.720] 可能这个意思
[01:29:06.720 --> 01:29:09.520] 我听见一下SourceHut
[01:29:09.520 --> 01:29:14.080] SourceHut是一个代码通关平台
[01:29:14.080 --> 01:29:15.840] 就是可以上上Git上去
[01:29:15.840 --> 01:29:17.200] 反正就GitHub那些功能
[01:29:17.200 --> 01:29:20.880] 他是一个非常黑客的人
[01:29:20.880 --> 01:29:22.800] 搞的就是OneManShop
[01:29:22.800 --> 01:29:24.320] 然后这个人非常黑客
[01:29:24.320 --> 01:29:27.360] 你可以看到他的主页就比较功能比较齐全
[01:29:27.360 --> 01:29:30.080] 然后各种
[01:29:30.080 --> 01:29:32.240] 不是你还是介绍一下这个是干嘛的
[01:29:32.240 --> 01:29:34.639] SCM就跟GitHub一样
[01:29:34.639 --> 01:29:37.120] GitLab GitHub BadBucket
[01:29:37.120 --> 01:29:38.400] 跟这个我要推
[01:29:38.400 --> 01:29:41.120] 我为什么需要再造一个轮子
[01:29:41.120 --> 01:29:45.280] 这个不能说是轮子
[01:29:45.280 --> 01:29:48.320] 现在其实除了这三个
[01:29:48.320 --> 01:29:50.240] 也有很多其他的代码通关平台
[01:29:50.240 --> 01:29:56.000] 我推荐这一个主要是这个作者比较黑客
[01:29:56.000 --> 01:29:56.719] 然后
[01:29:56.719 --> 01:30:00.320] Define黑客
[01:30:00.320 --> 01:30:03.040] 然后你可以去看一下他的
[01:30:03.040 --> 01:30:04.080] 我来Define一下黑客
[01:30:04.080 --> 01:30:06.000] 你可以去看一下他的博客
[01:30:06.000 --> 01:30:07.280] 虽然这个平台我用的不多
[01:30:07.280 --> 01:30:10.400] 但是我从他博客里学到了非常多的东西
[01:30:10.400 --> 01:30:11.760] 比如说前一段时间
[01:30:11.760 --> 01:30:14.080] Keymall硬盘挂了
[01:30:14.080 --> 01:30:15.920] 因为他们就买了一批硬盘
[01:30:15.920 --> 01:30:17.120] 自己做了阵列
[01:30:17.120 --> 01:30:19.519] 然后其中有两块同时坏了
[01:30:19.520 --> 01:30:22.560] 给他们损失非常非常大
[01:30:22.560 --> 01:30:25.920] 然后从SourceHut的博客
[01:30:25.920 --> 01:30:28.320] 你可以看到那个作者非常厉害
[01:30:28.320 --> 01:30:30.160] 因为他存储成本比较高
[01:30:30.160 --> 01:30:33.200] 所以他也是自建了一些NAS方案备份
[01:30:33.200 --> 01:30:38.000] 他是注意买了不同品牌的硬盘
[01:30:38.000 --> 01:30:39.920] 而且买了不同的Batch
[01:30:39.920 --> 01:30:41.600] 就不会买相同的P4的
[01:30:41.600 --> 01:30:45.040] 这样就尽可能阻止同时坏两块
[01:30:45.040 --> 01:30:46.480] 而且他有两个方案
[01:30:46.480 --> 01:30:51.360] 自己在洛杉矶有一个NAS做备份
[01:30:51.360 --> 01:30:53.599] 然后自己在其他地方
[01:30:53.599 --> 01:30:57.440] 反正就细节记不太清了
[01:30:57.440 --> 01:31:02.240] 他的整个的一些想法
[01:31:02.240 --> 01:31:05.839] 跟自己做的一些事情都非常有启发性的
[01:31:05.839 --> 01:31:13.120] 他整个网站的财务都是公布在SourceHut上面
[01:31:13.120 --> 01:31:15.759] 然后他收到一笔钱
[01:31:15.760 --> 01:31:17.040] 上一篇博客
[01:31:17.040 --> 01:31:18.960] 这笔钱他拿去干什么了
[01:31:18.960 --> 01:31:21.120] 直接发给一些开源的作者
[01:31:21.120 --> 01:31:21.840] 为什么
[01:31:21.840 --> 01:31:24.240] 因为他想让这些人没有财务问题
[01:31:24.240 --> 01:31:26.240] 继续专注于自己的方向上
[01:31:26.240 --> 01:31:28.560] 他对这些人有什么期望
[01:31:28.560 --> 01:31:30.800] 没有任何期望
[01:31:30.800 --> 01:31:33.200] 你可以在自己的方向上继续发展
[01:31:33.200 --> 01:31:36.880] 因为这个作者认为SourceHut从这些开源项目里面
[01:31:36.880 --> 01:31:39.440] 获得很多收益
[01:31:39.440 --> 01:31:42.000] 所以说是非常黑客的一个
[01:31:42.000 --> 01:31:43.040] 可以
[01:31:43.040 --> 01:31:45.920] 好 下面我来推荐一下
[01:31:45.920 --> 01:31:49.120] 我这期主要是推荐两个
[01:31:49.120 --> 01:31:51.360] 一个是叫做StackEye
[01:31:51.360 --> 01:31:55.200] StackEye它其实是一个Chrome的插件了
[01:31:55.200 --> 01:31:57.120] 这个插件做的事情就是说
[01:31:57.120 --> 01:32:02.720] 你可以在Github上去follow问题和人
[01:32:02.720 --> 01:32:03.680] 什么意思
[01:32:03.680 --> 01:32:05.440] 就比如说我有一个大佬
[01:32:05.440 --> 01:32:07.280] 我觉得他的每次回答问题
[01:32:07.280 --> 01:32:08.320] 我都能学到很多东西
[01:32:08.320 --> 01:32:10.800] 我就装上StackEye这个插件
[01:32:10.800 --> 01:32:14.240] 然后他会在个人主页里加一个follow的按钮
[01:32:14.240 --> 01:32:15.440] 我去点一下follow
[01:32:15.440 --> 01:32:19.120] 那么下次你去点一下插件的页面
[01:32:19.120 --> 01:32:21.040] 你就可以看到他最近的一些活动
[01:32:21.040 --> 01:32:24.320] 比如说当然主要就是新回答的问题了
[01:32:24.320 --> 01:32:26.000] 那么你就可以点去看了
[01:32:26.000 --> 01:32:26.320] 这样子
[01:32:26.320 --> 01:32:29.360] 因为Github原来是他只是专注于问答
[01:32:29.360 --> 01:32:30.400] 他并没有follow
[01:32:30.400 --> 01:32:32.240] 所以这块一直是很弱的
[01:32:32.240 --> 01:32:35.520] 然后我也可能我也找了一段时间这种工具
[01:32:35.520 --> 01:32:38.560] 所以我觉得这个是解决了我个人的这种需求
[01:32:38.560 --> 01:32:39.200] 你应该说错了
[01:32:39.200 --> 01:32:40.000] 应该不是Github
[01:32:40.000 --> 01:32:41.760] 应该是Stack社区了
[01:32:41.760 --> 01:32:43.600] StackOverflow说错了
[01:32:43.600 --> 01:32:45.200] 这些聊太多Github
[01:32:45.200 --> 01:32:45.920] StackOverflow
[01:32:45.920 --> 01:32:46.400] 对
[01:32:46.400 --> 01:32:48.320] 这个我不知道他们为什么不做
[01:32:48.320 --> 01:32:49.360] 我一直想要
[01:32:50.400 --> 01:32:50.720] 是
[01:32:51.600 --> 01:32:53.920] 他可能觉得他要做他就要做信息流
[01:32:53.920 --> 01:32:55.280] 可能就不像知乎那样
[01:32:55.280 --> 01:32:58.000] 不是这种QA为中心
[01:32:58.000 --> 01:33:00.160] 可能就对就比较偏离他们的目标
[01:33:00.160 --> 01:33:02.160] 他们还是想keep it simple吧
[01:33:02.160 --> 01:33:02.720] 类似于
[01:33:04.720 --> 01:33:05.600] 反正这个蛮好的
[01:33:05.600 --> 01:33:06.560] 这个真的挺好的
[01:33:06.560 --> 01:33:09.760] 已经用上了
[01:33:09.760 --> 01:33:14.480] 然后另外一个是一本书
[01:33:14.480 --> 01:33:17.840] 叫做The Pragmatic Programmer
[01:33:17.840 --> 01:33:21.040] 翻译过来就是实用主义的程序员
[01:33:21.040 --> 01:33:23.120] 这本书
[01:33:23.120 --> 01:33:25.360] 怎么说
[01:33:25.360 --> 01:33:27.120] 我觉得怎么推荐都不会过
[01:33:27.120 --> 01:33:27.760] 基本上
[01:33:27.760 --> 01:33:36.320] 他的每一小段话都能让我觉得特别有感触
[01:33:36.320 --> 01:33:39.120] 比如说我举一个例子
[01:33:39.120 --> 01:33:41.360] 你们都知道Dry原则
[01:33:41.360 --> 01:33:42.320] 是Dry
[01:33:42.320 --> 01:33:43.519] Don't repeat yourself
[01:33:43.519 --> 01:33:44.240] 对知道
[01:33:44.240 --> 01:33:46.480] Dry原则是这本书提出的
[01:33:46.480 --> 01:33:51.519] 就是literally是这本书两个作者提出的
[01:33:51.519 --> 01:33:55.120] 那么他其实这本书第一版是在20年前
[01:33:55.120 --> 01:33:56.480] 也就是1999年出的
[01:33:56.480 --> 01:34:00.080] 那么今年出了一个20年的更新版本
[01:34:00.080 --> 01:34:02.559] 就加了很多新的东西
[01:34:02.559 --> 01:34:03.840] 然后修正了一些内容
[01:34:03.840 --> 01:34:06.720] 但是就是读起来
[01:34:06.720 --> 01:34:08.640] 反正首先是一点都不过时
[01:34:08.640 --> 01:34:11.280] 其次是我真的是觉得学到特别多东西
[01:34:11.280 --> 01:34:12.560] 云锋在翻译这本书
[01:34:12.560 --> 01:34:15.680] 对对那个云锋在翻译
[01:34:15.680 --> 01:34:16.400] 他在推荐翻译
[01:34:16.400 --> 01:34:19.920] 但是我是他网上有电子版卖
[01:34:19.920 --> 01:34:21.680] 就是40美元
[01:34:21.680 --> 01:34:24.320] 我觉得绝对物超所值
[01:34:24.320 --> 01:34:25.920] 我强烈推荐每个人都去看
[01:34:25.920 --> 01:34:27.040] 真的买
[01:34:27.040 --> 01:34:30.320] 就是这本书写的太好了
[01:34:30.320 --> 01:34:32.400] 要不我们找个时间
[01:34:32.400 --> 01:34:34.080] 送我们听众一本书
[01:34:34.080 --> 01:34:36.320] 这个怎么送
[01:34:36.320 --> 01:34:36.879] 不知道
[01:34:36.879 --> 01:34:41.360] 其实可以送
[01:34:41.360 --> 01:34:43.280] 我们其实买下来就行了
[01:34:43.280 --> 01:34:44.240] 买下来可以分享的
[01:34:44.240 --> 01:34:45.440] 它是DRM FREE
[01:34:45.440 --> 01:34:48.240] 没有版权问题
[01:34:48.240 --> 01:34:50.719] 可以对这个是可以的
[01:34:50.719 --> 01:34:54.799] 对然后我另外提点他们
[01:34:54.799 --> 01:34:57.120] 买这个电子书的网站
[01:34:57.120 --> 01:34:58.879] 他这个电子书网站就叫
[01:34:58.879 --> 01:35:00.799] The Pragmatic Bookshelf
[01:35:00.800 --> 01:35:03.840] 其实就是这两个人建立的一个
[01:35:03.840 --> 01:35:07.200] 专门卖一些和程序员
[01:35:07.200 --> 01:35:09.120] 相关的书籍的网站
[01:35:09.120 --> 01:35:12.320] 那么他们就是说建立这个网站的目的
[01:35:12.320 --> 01:35:15.440] 就是想让就更好的知识作者
[01:35:15.440 --> 01:35:17.280] 然后更好更好的分享知识
[01:35:17.280 --> 01:35:20.000] 就包括卖的电子书都是DRM FREE的
[01:35:20.000 --> 01:35:24.640] DRM FREE是不能给其他人
[01:35:24.640 --> 01:35:25.600] 可以自己拷贝
[01:35:25.600 --> 01:35:29.760] 不是不是你如果一个带DRM的话
[01:35:29.760 --> 01:35:31.760] 就相当于你每次打开还要密码
[01:35:31.760 --> 01:35:32.960] 应该是是的
[01:35:32.960 --> 01:35:34.720] 然后其实对DRM FREE的话
[01:35:34.720 --> 01:35:36.560] 其实就是他没有版权约束
[01:35:36.560 --> 01:35:40.160] 不是上面就你贴的页面上面写着
[01:35:40.160 --> 01:35:43.760] You just can't give them to other people or sell them
[01:35:43.760 --> 01:35:46.880] 但是你可以Free to copy your ebooks
[01:35:46.880 --> 01:35:47.840] between your devices
[01:35:47.840 --> 01:35:49.040] OK行
[01:35:49.040 --> 01:35:51.280] 那这样吧到时候等我们先确认一下
[01:35:51.280 --> 01:35:52.480] 然后到时候看看大家兴趣
[01:35:52.480 --> 01:35:53.520] 我们也可以再买一本
[01:35:53.520 --> 01:35:54.240] 实在不行
[01:35:54.240 --> 01:35:55.680] 其实也还好200多块钱
[01:35:55.680 --> 01:36:00.480] 总之就是强烈推荐一下这本书
[01:36:00.480 --> 01:36:01.440] 以及这个平台
[01:36:01.440 --> 01:36:03.120] 都非常好
[01:36:03.120 --> 01:36:04.400] 好的
[01:36:04.400 --> 01:36:08.480] 好那我们这期也差不多了
[01:36:08.480 --> 01:36:11.280] 差不多了我已经是要饿晕在地上了
[01:36:11.280 --> 01:36:14.480] 我今天早上我都忘了
[01:36:14.480 --> 01:36:17.280] 我们还有然后值得你给我打电话了
[01:36:17.280 --> 01:36:19.040] 行行好吧
[01:36:19.040 --> 01:36:21.600] 那我们这期就到这样
[01:36:21.600 --> 01:36:23.360] 好嘞辛苦
[01:36:23.360 --> 01:36:26.240] 好的好各位听众我们就下期再见
[01:36:26.240 --> 01:36:56.000] 辛苦各位
